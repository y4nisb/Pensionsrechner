{"ast":null,"code":"/*!\r\n * Copyright (c) 2015-2020, Salesforce.com, Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n * this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n * this list of conditions and the following disclaimer in the documentation\r\n * and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\r\n * be used to endorse or promote products derived from this software without\r\n * specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\n\"use strict\";\n\nconst punycode = require(\"punycode/\");\nconst urlParse = require(\"url-parse\");\nconst pubsuffix = require(\"./pubsuffix-psl\");\nconst Store = require(\"./store\").Store;\nconst MemoryCookieStore = require(\"./memstore\").MemoryCookieStore;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst validators = require(\"./validators.js\");\nconst VERSION = require(\"./version\");\nconst {\n  fromCallback\n} = require(\"universalify\");\nconst {\n  getCustomInspectSymbol\n} = require(\"./utilHelper\");\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nconst COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\nconst CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nconst TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nconst PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nconst DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\nconst MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\nconst MAX_TIME = 2147483647000; // 31-bit max\nconst MIN_TIME = 0; // 31-bit min\nconst SAME_SITE_CONTEXT_VAL_ERR = 'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\nfunction checkSameSiteContext(value) {\n  validators.validate(validators.isNonEmptyString(value), value);\n  const context = String(value).toLowerCase();\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n    return context;\n  } else {\n    return null;\n  }\n}\nconst PrefixSecurityEnum = Object.freeze({\n  SILENT: \"silent\",\n  STRICT: \"strict\",\n  DISABLED: \"unsafe-disabled\"\n});\n\n// Dumped from ip-regex@4.0.0, with the following changes:\n// * all capturing groups converted to non-capturing -- \"(?:)\"\n// * support for IPv6 Scoped Literal (\"%eth1\") removed\n// * lowercase hexadecimal only\nconst IP_REGEX_LOWERCASE = /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\nconst IP_V6_REGEX = `\n\\\\[?(?:\n(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|\n(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:))\n)(?:%[0-9a-zA-Z]{1,})?\\\\]?\n`.replace(/\\s*\\/\\/.*$/gm, \"\").replace(/\\n/g, \"\").trim();\nconst IP_V6_REGEX_OBJECT = new RegExp(`^${IP_V6_REGEX}$`);\n\n/*\r\n * Parses a Natural number (i.e., non-negative integer) with either the\r\n *    <min>*<max>DIGIT ( non-digit *OCTET )\r\n * or\r\n *    <min>*<max>DIGIT\r\n * grammar (RFC6265 S5.1.1).\r\n *\r\n * The \"trailingOK\" boolean controls if the grammar accepts a\r\n * \"( non-digit *OCTET )\" trailer.\r\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  let count = 0;\n  while (count < token.length) {\n    const c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2f || c >= 0x3a) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n  return parseInt(token.substr(0, count), 10);\n}\nfunction parseTime(token) {\n  const parts = token.split(\":\");\n  const result = [0, 0, 0];\n\n  /* RF6256 S5.1.1:\r\n   *      time            = hms-time ( non-digit *OCTET )\r\n   *      hms-time        = time-field \":\" time-field \":\" time-field\r\n   *      time-field      = 1*2DIGIT\r\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n  for (let i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    const trailingOK = i == 2;\n    const num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n  return result;\n}\nfunction parseMonth(token) {\n  token = String(token).substr(0, 3).toLowerCase();\n  const num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\r\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\r\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\r\n   * 2. Process each date-token sequentially in the order the date-tokens\r\n   * appear in the cookie-date\r\n   */\n  const tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n  let hour = null;\n  let minute = null;\n  let second = null;\n  let dayOfMonth = null;\n  let month = null;\n  let year = null;\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n    let result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\r\n     * production, set the found-time flag and set the hour- value,\r\n     * minute-value, and second-value to the numbers denoted by the digits in\r\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\r\n     * to the next date-token.\r\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\r\n     * the day-of-month production, set the found-day-of- month flag and set\r\n     * the day-of-month-value to the number denoted by the date-token.  Skip\r\n     * the remaining sub-steps and continue to the next date-token.\r\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\r\n     * month production, set the found-month flag and set the month-value to\r\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\r\n     * continue to the next date-token.\r\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\r\n     * year production, set the found-year flag and set the year-value to the\r\n     * number denoted by the date-token.  Skip the remaining sub-steps and\r\n     * continue to the next date-token.\r\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\r\n         * 3.  If the year-value is greater than or equal to 70 and less\r\n         * than or equal to 99, increment the year-value by 1900.\r\n         * 4.  If the year-value is greater than or equal to 0 and less\r\n         * than or equal to 69, increment the year-value by 2000.\r\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\r\n   * \"5. Abort these steps and fail to parse the cookie-date if:\r\n   *     *  at least one of the found-day-of-month, found-month, found-\r\n   *        year, or found-time flags is not set,\r\n   *     *  the day-of-month-value is less than 1 or greater than 31,\r\n   *     *  the year-value is less than 1601,\r\n   *     *  the hour-value is greater than 23,\r\n   *     *  the minute-value is greater than 59, or\r\n   *     *  the second-value is greater than 59.\r\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\r\n   *\r\n   * So, in order as above:\r\n   */\n  if (dayOfMonth === null || month === null || year === null || second === null || dayOfMonth < 1 || dayOfMonth > 31 || year < 1601 || hour > 23 || minute > 59 || second > 59) {\n    return;\n  }\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\nfunction formatDate(date) {\n  validators.validate(validators.isDate(date), date);\n  return date.toUTCString();\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./, \"\"); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  if (IP_V6_REGEX_OBJECT.test(str)) {\n    str = str.replace(\"[\", \"\").replace(\"]\", \"\");\n  }\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\r\n   * S5.1.3:\r\n   * \"A string domain-matches a given domain string if at least one of the\r\n   * following conditions hold:\"\r\n   *\r\n   * \" o The domain string and the string are identical. (Note that both the\r\n   * domain string and the string will have been canonicalized to lower case at\r\n   * this point)\"\r\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \" o All of the following [three] conditions hold:\" */\n\n  /* \"* The domain string is a suffix of the string\" */\n  const idx = str.lastIndexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // next, check it's a proper suffix\n  // e.g., \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) {\n    return false; // it's not a suffix\n  }\n\n  /* \"  * The last character of the string that is not included in the\r\n   * domain string is a %x2E (\".\") character.\" */\n  if (str.substr(idx - 1, 1) !== \".\") {\n    return false; // doesn't align on \".\"\n  }\n\n  /* \"  * The string is a host name (i.e., not an IP address).\" */\n  if (IP_REGEX_LOWERCASE.test(str)) {\n    return false; // it's an IP address\n  }\n\n  return true;\n}\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\r\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\r\n * to compute the default-path of a cookie:\"\r\n *\r\n * Assumption: the path (and not query part or absolute uri) is passed in.\r\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n  const rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\nfunction trimTerminator(str) {\n  if (validators.isEmptyString(str)) return str;\n  for (let t = 0; t < TERMINATORS.length; t++) {\n    const terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n  return str;\n}\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n  validators.validate(validators.isString(cookiePair), cookiePair);\n  let firstEq = cookiePair.indexOf(\"=\");\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf(\"=\"); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  let cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n  const c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\nfunction parse(str, options) {\n  if (!options || typeof options !== \"object\") {\n    options = {};\n  }\n  if (validators.isEmptyString(str) || !validators.isString(str)) {\n    return null;\n  }\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  const firstSemi = str.indexOf(\";\"); // S5.2 step 1\n  const cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  const c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  const unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\r\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\r\n   * and attribute-value according to the requirements in the following\r\n   * subsections\" for every item.  Plus, for many of the individual attributes\r\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\r\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\r\n   * the previous value.\r\n   */\n  const cookie_avs = unparsed.split(\";\");\n  while (cookie_avs.length) {\n    const av = cookie_avs.shift().trim();\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n    const av_sep = av.indexOf(\"=\");\n    let av_key, av_value;\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n    av_key = av_key.trim().toLowerCase();\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n    switch (av_key) {\n      case \"expires\":\n        // S5.2.1\n        if (av_value) {\n          const exp = parseDate(av_value);\n          // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n        break;\n      case \"max-age\":\n        // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            const delta = parseInt(av_value, 10);\n            // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n            c.setMaxAge(delta);\n          }\n        }\n        break;\n      case \"domain\":\n        // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          const domain = av_value.trim().replace(/^\\./, \"\");\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n        break;\n      case \"path\":\n        // S5.2.4\n        /*\r\n         * \"If the attribute-value is empty or if the first character of the\r\n         * attribute-value is not %x2F (\"/\"):\r\n         *   Let cookie-path be the default-path.\r\n         * Otherwise:\r\n         *   Let cookie-path be the attribute-value.\"\r\n         *\r\n         * We'll represent the default-path as null since it depends on the\r\n         * context of the parsing.\r\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n      case \"secure\":\n        // S5.2.5\n        /*\r\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\r\n         * the user agent MUST append an attribute to the cookie-attribute-list\r\n         * with an attribute-name of Secure and an empty attribute-value.\"\r\n         */\n        c.secure = true;\n        break;\n      case \"httponly\":\n        // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n      case \"samesite\":\n        // RFC6265bis-02 S5.3.7\n        const enforcement = av_value ? av_value.toLowerCase() : \"\";\n        switch (enforcement) {\n          case \"strict\":\n            c.sameSite = \"strict\";\n            break;\n          case \"lax\":\n            c.sameSite = \"lax\";\n            break;\n          case \"none\":\n            c.sameSite = \"none\";\n            break;\n          default:\n            c.sameSite = undefined;\n            break;\n        }\n        break;\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n  return c;\n}\n\n/**\r\n *  If the cookie-name begins with a case-sensitive match for the\r\n *  string \"__Secure-\", abort these steps and ignore the cookie\r\n *  entirely unless the cookie's secure-only-flag is true.\r\n * @param cookie\r\n * @returns boolean\r\n */\nfunction isSecurePrefixConditionMet(cookie) {\n  validators.validate(validators.isObject(cookie), cookie);\n  return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\n}\n\n/**\r\n *  If the cookie-name begins with a case-sensitive match for the\r\n *  string \"__Host-\", abort these steps and ignore the cookie\r\n *  entirely unless the cookie meets all the following criteria:\r\n *    1.  The cookie's secure-only-flag is true.\r\n *    2.  The cookie's host-only-flag is true.\r\n *    3.  The cookie-attribute-list contains an attribute with an\r\n *        attribute-name of \"Path\", and the cookie's path is \"/\".\r\n * @param cookie\r\n * @returns boolean\r\n */\nfunction isHostPrefixConditionMet(cookie) {\n  validators.validate(validators.isObject(cookie));\n  return !cookie.key.startsWith(\"__Host-\") || cookie.secure && cookie.hostOnly && cookie.path != null && cookie.path === \"/\";\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  let obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\nfunction fromJSON(str) {\n  if (!str || validators.isEmptyString(str)) {\n    return null;\n  }\n  let obj;\n  if (typeof str === \"string\") {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n  const c = new Cookie();\n  for (let i = 0; i < Cookie.serializableProperties.length; i++) {\n    const prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined || obj[prop] === cookieDefaults[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n  return c;\n}\n\n/* Section 5.4 part 2:\r\n * \"*  Cookies with longer paths are listed before cookies with\r\n *     shorter paths.\r\n *\r\n *  *  Among cookies that have equal-length path fields, cookies with\r\n *     earlier creation-times are listed before cookies with later\r\n *     creation-times.\"\r\n */\n\nfunction cookieCompare(a, b) {\n  validators.validate(validators.isObject(a), a);\n  validators.validate(validators.isObject(b), b);\n  let cmp = 0;\n\n  // descending for length: b CMP a\n  const aPathLen = a.path ? a.path.length : 0;\n  const bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  const aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  const bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  validators.validate(validators.isString(path));\n  if (path === \"/\") {\n    return [\"/\"];\n  }\n  const permutations = [path];\n  while (path.length > 1) {\n    const lindex = path.lastIndexOf(\"/\");\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n  permutations.push(\"/\");\n  return permutations;\n}\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  } catch (err) {\n    // Silently swallow error\n  }\n  return urlParse(url);\n}\nconst cookieDefaults = {\n  // the order in which the RFC has them:\n  key: \"\",\n  value: \"\",\n  expires: \"Infinity\",\n  maxAge: null,\n  domain: null,\n  path: null,\n  secure: false,\n  httpOnly: false,\n  extensions: null,\n  // set by the CookieJar:\n  hostOnly: null,\n  pathIsDefault: null,\n  creation: null,\n  lastAccessed: null,\n  sameSite: undefined\n};\nclass Cookie {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const customInspectSymbol = getCustomInspectSymbol();\n    if (customInspectSymbol) {\n      this[customInspectSymbol] = this.inspect;\n    }\n    Object.assign(this, cookieDefaults, options);\n    this.creation = this.creation || new Date();\n\n    // used to break creation ties in cookieCompare():\n    Object.defineProperty(this, \"creationIndex\", {\n      configurable: false,\n      enumerable: false,\n      // important for assert.deepEqual checks\n      writable: true,\n      value: ++Cookie.cookiesCreated\n    });\n  }\n  inspect() {\n    const now = Date.now();\n    const hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\n    const createAge = this.creation ? `${now - this.creation.getTime()}ms` : \"?\";\n    const accessAge = this.lastAccessed ? `${now - this.lastAccessed.getTime()}ms` : \"?\";\n    return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\n  }\n  toJSON() {\n    const obj = {};\n    for (const prop of Cookie.serializableProperties) {\n      if (this[prop] === cookieDefaults[prop]) {\n        continue; // leave as prototype default\n      }\n\n      if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n        if (this[prop] === null) {\n          obj[prop] = null;\n        } else {\n          obj[prop] = this[prop] == \"Infinity\" // intentionally not ===\n          ? \"Infinity\" : this[prop].toISOString();\n        }\n      } else if (prop === \"maxAge\") {\n        if (this[prop] !== null) {\n          // again, intentionally not ===\n          obj[prop] = this[prop] == Infinity || this[prop] == -Infinity ? this[prop].toString() : this[prop];\n        }\n      } else {\n        if (this[prop] !== cookieDefaults[prop]) {\n          obj[prop] = this[prop];\n        }\n      }\n    }\n    return obj;\n  }\n  clone() {\n    return fromJSON(this.toJSON());\n  }\n  validate() {\n    if (!COOKIE_OCTETS.test(this.value)) {\n      return false;\n    }\n    if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n      return false;\n    }\n    if (this.maxAge != null && this.maxAge <= 0) {\n      return false; // \"Max-Age=\" non-zero-digit *DIGIT\n    }\n\n    if (this.path != null && !PATH_VALUE.test(this.path)) {\n      return false;\n    }\n    const cdomain = this.cdomain();\n    if (cdomain) {\n      if (cdomain.match(/\\.$/)) {\n        return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n      }\n\n      const suffix = pubsuffix.getPublicSuffix(cdomain);\n      if (suffix == null) {\n        // it's a public suffix\n        return false;\n      }\n    }\n    return true;\n  }\n  setExpires(exp) {\n    if (exp instanceof Date) {\n      this.expires = exp;\n    } else {\n      this.expires = parseDate(exp) || \"Infinity\";\n    }\n  }\n  setMaxAge(age) {\n    if (age === Infinity || age === -Infinity) {\n      this.maxAge = age.toString(); // so JSON.stringify() works\n    } else {\n      this.maxAge = age;\n    }\n  }\n  cookieString() {\n    let val = this.value;\n    if (val == null) {\n      val = \"\";\n    }\n    if (this.key === \"\") {\n      return val;\n    }\n    return `${this.key}=${val}`;\n  }\n\n  // gives Set-Cookie header format\n  toString() {\n    let str = this.cookieString();\n    if (this.expires != Infinity) {\n      if (this.expires instanceof Date) {\n        str += `; Expires=${formatDate(this.expires)}`;\n      } else {\n        str += `; Expires=${this.expires}`;\n      }\n    }\n    if (this.maxAge != null && this.maxAge != Infinity) {\n      str += `; Max-Age=${this.maxAge}`;\n    }\n    if (this.domain && !this.hostOnly) {\n      str += `; Domain=${this.domain}`;\n    }\n    if (this.path) {\n      str += `; Path=${this.path}`;\n    }\n    if (this.secure) {\n      str += \"; Secure\";\n    }\n    if (this.httpOnly) {\n      str += \"; HttpOnly\";\n    }\n    if (this.sameSite && this.sameSite !== \"none\") {\n      const ssCanon = Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\n      str += `; SameSite=${ssCanon ? ssCanon : this.sameSite}`;\n    }\n    if (this.extensions) {\n      this.extensions.forEach(ext => {\n        str += `; ${ext}`;\n      });\n    }\n    return str;\n  }\n\n  // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  // S5.3 says to give the \"latest representable date\" for which we use Infinity\n  // For \"expired\" we use 0\n  TTL(now) {\n    /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\r\n     * attribute, the Max-Age attribute has precedence and controls the\r\n     * expiration date of the cookie.\r\n     * (Concurs with S5.3 step 3)\r\n     */\n    if (this.maxAge != null) {\n      return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n    }\n    let expires = this.expires;\n    if (expires != Infinity) {\n      if (!(expires instanceof Date)) {\n        expires = parseDate(expires) || Infinity;\n      }\n      if (expires == Infinity) {\n        return Infinity;\n      }\n      return expires.getTime() - (now || Date.now());\n    }\n    return Infinity;\n  }\n\n  // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  expiryTime(now) {\n    if (this.maxAge != null) {\n      const relativeTo = now || this.creation || new Date();\n      const age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n      return relativeTo.getTime() + age;\n    }\n    if (this.expires == Infinity) {\n      return Infinity;\n    }\n    return this.expires.getTime();\n  }\n\n  // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere), except it returns a Date\n  expiryDate(now) {\n    const millisec = this.expiryTime(now);\n    if (millisec == Infinity) {\n      return new Date(MAX_TIME);\n    } else if (millisec == -Infinity) {\n      return new Date(MIN_TIME);\n    } else {\n      return new Date(millisec);\n    }\n  }\n\n  // This replaces the \"persistent-flag\" parts of S5.3 step 3\n  isPersistent() {\n    return this.maxAge != null || this.expires != Infinity;\n  }\n\n  // Mostly S5.1.2 and S5.2.3:\n  canonicalizedDomain() {\n    if (this.domain == null) {\n      return null;\n    }\n    return canonicalDomain(this.domain);\n  }\n  cdomain() {\n    return this.canonicalizedDomain();\n  }\n}\nCookie.cookiesCreated = 0;\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.serializableProperties = Object.keys(cookieDefaults);\nCookie.sameSiteLevel = {\n  strict: 3,\n  lax: 2,\n  none: 1\n};\nCookie.sameSiteCanonical = {\n  strict: \"Strict\",\n  lax: \"Lax\"\n};\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\n  if (prefixSecurity != null) {\n    const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n    /* The three supported options */\n    switch (normalizedPrefixSecurity) {\n      case PrefixSecurityEnum.STRICT:\n      case PrefixSecurityEnum.SILENT:\n      case PrefixSecurityEnum.DISABLED:\n        return normalizedPrefixSecurity;\n    }\n  }\n  /* Default is SILENT */\n  return PrefixSecurityEnum.SILENT;\n}\nclass CookieJar {\n  constructor(store) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      rejectPublicSuffixes: true\n    };\n    if (typeof options === \"boolean\") {\n      options = {\n        rejectPublicSuffixes: options\n      };\n    }\n    validators.validate(validators.isObject(options), options);\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n    this.enableLooseMode = !!options.looseMode;\n    this.allowSpecialUseDomain = typeof options.allowSpecialUseDomain === \"boolean\" ? options.allowSpecialUseDomain : true;\n    this.store = store || new MemoryCookieStore();\n    this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\n    this._cloneSync = syncWrap(\"clone\");\n    this._importCookiesSync = syncWrap(\"_importCookies\");\n    this.getCookiesSync = syncWrap(\"getCookies\");\n    this.getCookieStringSync = syncWrap(\"getCookieString\");\n    this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\n    this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\n    this.setCookieSync = syncWrap(\"setCookie\");\n    this.serializeSync = syncWrap(\"serialize\");\n  }\n  setCookie(cookie, url, options, cb) {\n    validators.validate(validators.isNonEmptyString(url), cb, options);\n    let err;\n    if (validators.isFunction(url)) {\n      cb = url;\n      return cb(new Error(\"No URL was specified\"));\n    }\n    const context = getCookieContext(url);\n    if (validators.isFunction(options)) {\n      cb = options;\n      options = {};\n    }\n    validators.validate(validators.isFunction(cb), cb);\n    if (!validators.isNonEmptyString(cookie) && !validators.isObject(cookie) && cookie instanceof String && cookie.length == 0) {\n      return cb(null);\n    }\n    const host = canonicalDomain(context.hostname);\n    const loose = options.loose || this.enableLooseMode;\n    let sameSiteContext = null;\n    if (options.sameSiteContext) {\n      sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      if (!sameSiteContext) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    // S5.3 step 1\n    if (typeof cookie === \"string\" || cookie instanceof String) {\n      cookie = Cookie.parse(cookie, {\n        loose: loose\n      });\n      if (!cookie) {\n        err = new Error(\"Cookie failed to parse\");\n        return cb(options.ignoreError ? null : err);\n      }\n    } else if (!(cookie instanceof Cookie)) {\n      // If you're seeing this error, and are passing in a Cookie object,\n      // it *might* be a Cookie object from another loaded version of tough-cookie.\n      err = new Error(\"First argument to setCookie must be a Cookie object or string\");\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // S5.3 step 2\n    const now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n    // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n    // S5.3 step 4: NOOP; domain is null by default\n\n    // S5.3 step 5: public suffixes\n    if (this.rejectPublicSuffixes && cookie.domain) {\n      const suffix = pubsuffix.getPublicSuffix(cookie.cdomain(), {\n        allowSpecialUseDomain: this.allowSpecialUseDomain,\n        ignoreError: options.ignoreError\n      });\n      if (suffix == null && !IP_V6_REGEX_OBJECT.test(cookie.domain)) {\n        // e.g. \"com\"\n        err = new Error(\"Cookie has domain set to a public suffix\");\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    // S5.3 step 6:\n    if (cookie.domain) {\n      if (!domainMatch(host, cookie.cdomain(), false)) {\n        err = new Error(`Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`);\n        return cb(options.ignoreError ? null : err);\n      }\n      if (cookie.hostOnly == null) {\n        // don't reset if already set\n        cookie.hostOnly = false;\n      }\n    } else {\n      cookie.hostOnly = true;\n      cookie.domain = host;\n    }\n\n    //S5.2.4 If the attribute-value is empty or if the first character of the\n    //attribute-value is not %x2F (\"/\"):\n    //Let cookie-path be the default-path.\n    if (!cookie.path || cookie.path[0] !== \"/\") {\n      cookie.path = defaultPath(context.pathname);\n      cookie.pathIsDefault = true;\n    }\n\n    // S5.3 step 8: NOOP; secure attribute\n    // S5.3 step 9: NOOP; httpOnly attribute\n\n    // S5.3 step 10\n    if (options.http === false && cookie.httpOnly) {\n      err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // 6252bis-02 S5.4 Step 13 & 14:\n    if (cookie.sameSite !== \"none\" && cookie.sameSite !== undefined && sameSiteContext) {\n      // \"If the cookie's \"same-site-flag\" is not \"None\", and the cookie\n      //  is being set from a context whose \"site for cookies\" is not an\n      //  exact match for request-uri's host's registered domain, then\n      //  abort these steps and ignore the newly created cookie entirely.\"\n      if (sameSiteContext === \"none\") {\n        err = new Error(\"Cookie is SameSite but this is a cross-origin request\");\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    /* 6265bis-02 S5.4 Steps 15 & 16 */\n    const ignoreErrorForPrefixSecurity = this.prefixSecurity === PrefixSecurityEnum.SILENT;\n    const prefixSecurityDisabled = this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n    /* If prefix checking is not disabled ...*/\n    if (!prefixSecurityDisabled) {\n      let errorFound = false;\n      let errorMsg;\n      /* Check secure prefix condition */\n      if (!isSecurePrefixConditionMet(cookie)) {\n        errorFound = true;\n        errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n      } else if (!isHostPrefixConditionMet(cookie)) {\n        /* Check host prefix condition */\n        errorFound = true;\n        errorMsg = \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n      }\n      if (errorFound) {\n        return cb(options.ignoreError || ignoreErrorForPrefixSecurity ? null : new Error(errorMsg));\n      }\n    }\n    const store = this.store;\n    if (!store.updateCookie) {\n      store.updateCookie = function (oldCookie, newCookie, cb) {\n        this.putCookie(newCookie, cb);\n      };\n    }\n    function withCookie(err, oldCookie) {\n      if (err) {\n        return cb(err);\n      }\n      const next = function (err) {\n        if (err) {\n          return cb(err);\n        } else {\n          cb(null, cookie);\n        }\n      };\n      if (oldCookie) {\n        // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n        // domain, and path as the newly created cookie:\"\n        if (options.http === false && oldCookie.httpOnly) {\n          // step 11.2\n          err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n          return cb(options.ignoreError ? null : err);\n        }\n        cookie.creation = oldCookie.creation; // step 11.3\n        cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n        cookie.lastAccessed = now;\n        // Step 11.4 (delete cookie) is implied by just setting the new one:\n        store.updateCookie(oldCookie, cookie, next); // step 12\n      } else {\n        cookie.creation = cookie.lastAccessed = now;\n        store.putCookie(cookie, next); // step 12\n      }\n    }\n\n    store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n  }\n\n  // RFC6365 S5.4\n  getCookies(url, options, cb) {\n    validators.validate(validators.isNonEmptyString(url), cb, url);\n    const context = getCookieContext(url);\n    if (validators.isFunction(options)) {\n      cb = options;\n      options = {};\n    }\n    validators.validate(validators.isObject(options), cb, options);\n    validators.validate(validators.isFunction(cb), cb);\n    const host = canonicalDomain(context.hostname);\n    const path = context.pathname || \"/\";\n    let secure = options.secure;\n    if (secure == null && context.protocol && (context.protocol == \"https:\" || context.protocol == \"wss:\")) {\n      secure = true;\n    }\n    let sameSiteLevel = 0;\n    if (options.sameSiteContext) {\n      const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n      if (!sameSiteLevel) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n    let http = options.http;\n    if (http == null) {\n      http = true;\n    }\n    const now = options.now || Date.now();\n    const expireCheck = options.expire !== false;\n    const allPaths = !!options.allPaths;\n    const store = this.store;\n    function matchingCookie(c) {\n      // \"Either:\n      //   The cookie's host-only-flag is true and the canonicalized\n      //   request-host is identical to the cookie's domain.\n      // Or:\n      //   The cookie's host-only-flag is false and the canonicalized\n      //   request-host domain-matches the cookie's domain.\"\n      if (c.hostOnly) {\n        if (c.domain != host) {\n          return false;\n        }\n      } else {\n        if (!domainMatch(host, c.domain, false)) {\n          return false;\n        }\n      }\n\n      // \"The request-uri's path path-matches the cookie's path.\"\n      if (!allPaths && !pathMatch(path, c.path)) {\n        return false;\n      }\n\n      // \"If the cookie's secure-only-flag is true, then the request-uri's\n      // scheme must denote a \"secure\" protocol\"\n      if (c.secure && !secure) {\n        return false;\n      }\n\n      // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n      // cookie-string is being generated for a \"non-HTTP\" API\"\n      if (c.httpOnly && !http) {\n        return false;\n      }\n\n      // RFC6265bis-02 S5.3.7\n      if (sameSiteLevel) {\n        const cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\n        if (cookieLevel > sameSiteLevel) {\n          // only allow cookies at or below the request level\n          return false;\n        }\n      }\n\n      // deferred from S5.3\n      // non-RFC: allow retention of expired cookies by choice\n      if (expireCheck && c.expiryTime() <= now) {\n        store.removeCookie(c.domain, c.path, c.key, () => {}); // result ignored\n        return false;\n      }\n      return true;\n    }\n    store.findCookies(host, allPaths ? null : path, this.allowSpecialUseDomain, (err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n      cookies = cookies.filter(matchingCookie);\n\n      // sorting of S5.4 part 2\n      if (options.sort !== false) {\n        cookies = cookies.sort(cookieCompare);\n      }\n\n      // S5.4 part 3\n      const now = new Date();\n      for (const cookie of cookies) {\n        cookie.lastAccessed = now;\n      }\n      // TODO persist lastAccessed\n\n      cb(null, cookies);\n    });\n  }\n  getCookieString() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const cb = args.pop();\n    validators.validate(validators.isFunction(cb), cb);\n    const next = function (err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(null, cookies.sort(cookieCompare).map(c => c.cookieString()).join(\"; \"));\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n  getSetCookieStrings() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const cb = args.pop();\n    validators.validate(validators.isFunction(cb), cb);\n    const next = function (err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(null, cookies.map(c => {\n          return c.toString();\n        }));\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n  serialize(cb) {\n    validators.validate(validators.isFunction(cb), cb);\n    let type = this.store.constructor.name;\n    if (validators.isObject(type)) {\n      type = null;\n    }\n\n    // update README.md \"Serialization Format\" if you change this, please!\n    const serialized = {\n      // The version of tough-cookie that serialized this jar. Generally a good\n      // practice since future versions can make data import decisions based on\n      // known past behavior. When/if this matters, use `semver`.\n      version: `tough-cookie@${VERSION}`,\n      // add the store type, to make humans happy:\n      storeType: type,\n      // CookieJar configuration:\n      rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n      enableLooseMode: !!this.enableLooseMode,\n      allowSpecialUseDomain: !!this.allowSpecialUseDomain,\n      prefixSecurity: getNormalizedPrefixSecurity(this.prefixSecurity),\n      // this gets filled from getAllCookies:\n      cookies: []\n    };\n    if (!(this.store.getAllCookies && typeof this.store.getAllCookies === \"function\")) {\n      return cb(new Error(\"store does not support getAllCookies and cannot be serialized\"));\n    }\n    this.store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n      serialized.cookies = cookies.map(cookie => {\n        // convert to serialized 'raw' cookies\n        cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\n\n        // Remove the index so new ones get assigned during deserialization\n        delete cookie.creationIndex;\n        return cookie;\n      });\n      return cb(null, serialized);\n    });\n  }\n  toJSON() {\n    return this.serializeSync();\n  }\n\n  // use the class method CookieJar.deserialize instead of calling this directly\n  _importCookies(serialized, cb) {\n    let cookies = serialized.cookies;\n    if (!cookies || !Array.isArray(cookies)) {\n      return cb(new Error(\"serialized jar has no cookies array\"));\n    }\n    cookies = cookies.slice(); // do not modify the original\n\n    const putNext = err => {\n      if (err) {\n        return cb(err);\n      }\n      if (!cookies.length) {\n        return cb(err, this);\n      }\n      let cookie;\n      try {\n        cookie = fromJSON(cookies.shift());\n      } catch (e) {\n        return cb(e);\n      }\n      if (cookie === null) {\n        return putNext(null); // skip this cookie\n      }\n\n      this.store.putCookie(cookie, putNext);\n    };\n    putNext();\n  }\n  clone(newStore, cb) {\n    if (arguments.length === 1) {\n      cb = newStore;\n      newStore = null;\n    }\n    this.serialize((err, serialized) => {\n      if (err) {\n        return cb(err);\n      }\n      CookieJar.deserialize(serialized, newStore, cb);\n    });\n  }\n  cloneSync(newStore) {\n    if (arguments.length === 0) {\n      return this._cloneSync();\n    }\n    if (!newStore.synchronous) {\n      throw new Error(\"CookieJar clone destination store is not synchronous; use async API instead.\");\n    }\n    return this._cloneSync(newStore);\n  }\n  removeAllCookies(cb) {\n    validators.validate(validators.isFunction(cb), cb);\n    const store = this.store;\n\n    // Check that the store implements its own removeAllCookies(). The default\n    // implementation in Store will immediately call the callback with a \"not\n    // implemented\" Error.\n    if (typeof store.removeAllCookies === \"function\" && store.removeAllCookies !== Store.prototype.removeAllCookies) {\n      return store.removeAllCookies(cb);\n    }\n    store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n      if (cookies.length === 0) {\n        return cb(null);\n      }\n      let completedCount = 0;\n      const removeErrors = [];\n      function removeCookieCb(removeErr) {\n        if (removeErr) {\n          removeErrors.push(removeErr);\n        }\n        completedCount++;\n        if (completedCount === cookies.length) {\n          return cb(removeErrors.length ? removeErrors[0] : null);\n        }\n      }\n      cookies.forEach(cookie => {\n        store.removeCookie(cookie.domain, cookie.path, cookie.key, removeCookieCb);\n      });\n    });\n  }\n  static deserialize(strOrObj, store, cb) {\n    if (arguments.length !== 3) {\n      // store is optional\n      cb = store;\n      store = null;\n    }\n    validators.validate(validators.isFunction(cb), cb);\n    let serialized;\n    if (typeof strOrObj === \"string\") {\n      serialized = jsonParse(strOrObj);\n      if (serialized instanceof Error) {\n        return cb(serialized);\n      }\n    } else {\n      serialized = strOrObj;\n    }\n    const jar = new CookieJar(store, {\n      rejectPublicSuffixes: serialized.rejectPublicSuffixes,\n      looseMode: serialized.enableLooseMode,\n      allowSpecialUseDomain: serialized.allowSpecialUseDomain,\n      prefixSecurity: serialized.prefixSecurity\n    });\n    jar._importCookies(serialized, err => {\n      if (err) {\n        return cb(err);\n      }\n      cb(null, jar);\n    });\n  }\n  static deserializeSync(strOrObj, store) {\n    const serialized = typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n    const jar = new CookieJar(store, {\n      rejectPublicSuffixes: serialized.rejectPublicSuffixes,\n      looseMode: serialized.enableLooseMode\n    });\n\n    // catch this mistake early:\n    if (!jar.store.synchronous) {\n      throw new Error(\"CookieJar store is not synchronous; use async API instead.\");\n    }\n    jar._importCookiesSync(serialized);\n    return jar;\n  }\n}\nCookieJar.fromJSON = CookieJar.deserializeSync;\n[\"_importCookies\", \"clone\", \"getCookies\", \"getCookieString\", \"getSetCookieStrings\", \"removeAllCookies\", \"serialize\", \"setCookie\"].forEach(name => {\n  CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\n});\nCookieJar.deserialize = fromCallback(CookieJar.deserialize);\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function () {\n    if (!this.store.synchronous) {\n      throw new Error(\"CookieJar store is not synchronous; use async API instead.\");\n    }\n    let syncErr, syncResult;\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this[method](...args, (err, result) => {\n      syncErr = err;\n      syncResult = result;\n    });\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require(\"./permuteDomain\").permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;\nexports.PrefixSecurityEnum = PrefixSecurityEnum;\nexports.ParameterError = validators.ParameterError;","map":{"version":3,"names":["punycode","require","urlParse","pubsuffix","Store","MemoryCookieStore","pathMatch","validators","VERSION","fromCallback","getCustomInspectSymbol","COOKIE_OCTETS","CONTROL_CHARS","TERMINATORS","PATH_VALUE","DATE_DELIM","MONTH_TO_NUM","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","MAX_TIME","MIN_TIME","SAME_SITE_CONTEXT_VAL_ERR","checkSameSiteContext","value","validate","isNonEmptyString","context","String","toLowerCase","PrefixSecurityEnum","Object","freeze","SILENT","STRICT","DISABLED","IP_REGEX_LOWERCASE","IP_V6_REGEX","replace","trim","IP_V6_REGEX_OBJECT","RegExp","parseDigits","token","minDigits","maxDigits","trailingOK","count","length","c","charCodeAt","parseInt","substr","parseTime","parts","split","result","i","num","parseMonth","parseDate","str","tokens","hour","minute","second","dayOfMonth","month","year","Date","UTC","formatDate","date","isDate","toUTCString","canonicalDomain","test","toASCII","domainMatch","domStr","canonicalize","idx","lastIndexOf","defaultPath","path","rightSlash","slice","trimTerminator","isEmptyString","t","terminatorIdx","indexOf","parseCookiePair","cookiePair","looseMode","isString","firstEq","cookieName","cookieValue","Cookie","key","parse","options","firstSemi","loose","unparsed","cookie_avs","av","shift","av_sep","av_key","av_value","exp","expires","delta","setMaxAge","domain","secure","httpOnly","enforcement","sameSite","undefined","extensions","push","isSecurePrefixConditionMet","cookie","isObject","startsWith","isHostPrefixConditionMet","hostOnly","jsonParse","obj","JSON","e","fromJSON","Error","serializableProperties","prop","cookieDefaults","cookieCompare","a","b","cmp","aPathLen","bPathLen","aTime","creation","getTime","bTime","creationIndex","permutePath","permutations","lindex","getCookieContext","url","decodeURI","err","maxAge","pathIsDefault","lastAccessed","constructor","arguments","customInspectSymbol","inspect","assign","defineProperty","configurable","enumerable","writable","cookiesCreated","now","createAge","accessAge","toString","toJSON","toISOString","Infinity","clone","cdomain","match","suffix","getPublicSuffix","setExpires","age","cookieString","val","ssCanon","sameSiteCanonical","forEach","ext","TTL","expiryTime","relativeTo","expiryDate","millisec","isPersistent","canonicalizedDomain","keys","sameSiteLevel","strict","lax","none","getNormalizedPrefixSecurity","prefixSecurity","normalizedPrefixSecurity","CookieJar","store","rejectPublicSuffixes","enableLooseMode","allowSpecialUseDomain","_cloneSync","syncWrap","_importCookiesSync","getCookiesSync","getCookieStringSync","getSetCookieStringsSync","removeAllCookiesSync","setCookieSync","serializeSync","setCookie","cb","isFunction","host","hostname","sameSiteContext","ignoreError","pathname","http","ignoreErrorForPrefixSecurity","prefixSecurityDisabled","errorFound","errorMsg","updateCookie","oldCookie","newCookie","putCookie","withCookie","next","findCookie","getCookies","protocol","expireCheck","expire","allPaths","matchingCookie","cookieLevel","removeCookie","findCookies","cookies","filter","sort","getCookieString","_len","args","Array","_key","pop","map","join","apply","getSetCookieStrings","_len2","_key2","serialize","type","name","serialized","version","storeType","getAllCookies","_importCookies","isArray","putNext","newStore","deserialize","cloneSync","synchronous","removeAllCookies","prototype","completedCount","removeErrors","removeCookieCb","removeErr","strOrObj","jar","deserializeSync","method","syncErr","syncResult","_len3","_key3","exports","permuteDomain","ParameterError"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/tough-cookie/lib/cookie.js"],"sourcesContent":["/*!\r\n * Copyright (c) 2015-2020, Salesforce.com, Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n * this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n * this list of conditions and the following disclaimer in the documentation\r\n * and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\r\n * be used to endorse or promote products derived from this software without\r\n * specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\"use strict\";\r\nconst punycode = require(\"punycode/\");\r\nconst urlParse = require(\"url-parse\");\r\nconst pubsuffix = require(\"./pubsuffix-psl\");\r\nconst Store = require(\"./store\").Store;\r\nconst MemoryCookieStore = require(\"./memstore\").MemoryCookieStore;\r\nconst pathMatch = require(\"./pathMatch\").pathMatch;\r\nconst validators = require(\"./validators.js\");\r\nconst VERSION = require(\"./version\");\r\nconst { fromCallback } = require(\"universalify\");\r\nconst { getCustomInspectSymbol } = require(\"./utilHelper\");\r\n\r\n// From RFC6265 S4.1.1\r\n// note that it excludes \\x3B \";\"\r\nconst COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\r\n\r\nconst CONTROL_CHARS = /[\\x00-\\x1F]/;\r\n\r\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\r\n// the \"relaxed\" mode, see:\r\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\r\nconst TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\r\n\r\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\r\n// Note ';' is \\x3B\r\nconst PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\r\n\r\n// date-time parsing constants (RFC6265 S5.1.1)\r\n\r\nconst DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\r\n\r\nconst MONTH_TO_NUM = {\r\n  jan: 0,\r\n  feb: 1,\r\n  mar: 2,\r\n  apr: 3,\r\n  may: 4,\r\n  jun: 5,\r\n  jul: 6,\r\n  aug: 7,\r\n  sep: 8,\r\n  oct: 9,\r\n  nov: 10,\r\n  dec: 11\r\n};\r\n\r\nconst MAX_TIME = 2147483647000; // 31-bit max\r\nconst MIN_TIME = 0; // 31-bit min\r\nconst SAME_SITE_CONTEXT_VAL_ERR =\r\n  'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\r\n\r\nfunction checkSameSiteContext(value) {\r\n  validators.validate(validators.isNonEmptyString(value), value);\r\n  const context = String(value).toLowerCase();\r\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\r\n    return context;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst PrefixSecurityEnum = Object.freeze({\r\n  SILENT: \"silent\",\r\n  STRICT: \"strict\",\r\n  DISABLED: \"unsafe-disabled\"\r\n});\r\n\r\n// Dumped from ip-regex@4.0.0, with the following changes:\r\n// * all capturing groups converted to non-capturing -- \"(?:)\"\r\n// * support for IPv6 Scoped Literal (\"%eth1\") removed\r\n// * lowercase hexadecimal only\r\nconst IP_REGEX_LOWERCASE = /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\r\nconst IP_V6_REGEX = `\r\n\\\\[?(?:\r\n(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|\r\n(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|\r\n(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|\r\n(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|\r\n(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|\r\n(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|\r\n(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|\r\n(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:))\r\n)(?:%[0-9a-zA-Z]{1,})?\\\\]?\r\n`\r\n  .replace(/\\s*\\/\\/.*$/gm, \"\")\r\n  .replace(/\\n/g, \"\")\r\n  .trim();\r\nconst IP_V6_REGEX_OBJECT = new RegExp(`^${IP_V6_REGEX}$`);\r\n\r\n/*\r\n * Parses a Natural number (i.e., non-negative integer) with either the\r\n *    <min>*<max>DIGIT ( non-digit *OCTET )\r\n * or\r\n *    <min>*<max>DIGIT\r\n * grammar (RFC6265 S5.1.1).\r\n *\r\n * The \"trailingOK\" boolean controls if the grammar accepts a\r\n * \"( non-digit *OCTET )\" trailer.\r\n */\r\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\r\n  let count = 0;\r\n  while (count < token.length) {\r\n    const c = token.charCodeAt(count);\r\n    // \"non-digit = %x00-2F / %x3A-FF\"\r\n    if (c <= 0x2f || c >= 0x3a) {\r\n      break;\r\n    }\r\n    count++;\r\n  }\r\n\r\n  // constrain to a minimum and maximum number of digits.\r\n  if (count < minDigits || count > maxDigits) {\r\n    return null;\r\n  }\r\n\r\n  if (!trailingOK && count != token.length) {\r\n    return null;\r\n  }\r\n\r\n  return parseInt(token.substr(0, count), 10);\r\n}\r\n\r\nfunction parseTime(token) {\r\n  const parts = token.split(\":\");\r\n  const result = [0, 0, 0];\r\n\r\n  /* RF6256 S5.1.1:\r\n   *      time            = hms-time ( non-digit *OCTET )\r\n   *      hms-time        = time-field \":\" time-field \":\" time-field\r\n   *      time-field      = 1*2DIGIT\r\n   */\r\n\r\n  if (parts.length !== 3) {\r\n    return null;\r\n  }\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\r\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\r\n    // have a trailer\r\n    const trailingOK = i == 2;\r\n    const num = parseDigits(parts[i], 1, 2, trailingOK);\r\n    if (num === null) {\r\n      return null;\r\n    }\r\n    result[i] = num;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction parseMonth(token) {\r\n  token = String(token)\r\n    .substr(0, 3)\r\n    .toLowerCase();\r\n  const num = MONTH_TO_NUM[token];\r\n  return num >= 0 ? num : null;\r\n}\r\n\r\n/*\r\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\r\n */\r\nfunction parseDate(str) {\r\n  if (!str) {\r\n    return;\r\n  }\r\n\r\n  /* RFC6265 S5.1.1:\r\n   * 2. Process each date-token sequentially in the order the date-tokens\r\n   * appear in the cookie-date\r\n   */\r\n  const tokens = str.split(DATE_DELIM);\r\n  if (!tokens) {\r\n    return;\r\n  }\r\n\r\n  let hour = null;\r\n  let minute = null;\r\n  let second = null;\r\n  let dayOfMonth = null;\r\n  let month = null;\r\n  let year = null;\r\n\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const token = tokens[i].trim();\r\n    if (!token.length) {\r\n      continue;\r\n    }\r\n\r\n    let result;\r\n\r\n    /* 2.1. If the found-time flag is not set and the token matches the time\r\n     * production, set the found-time flag and set the hour- value,\r\n     * minute-value, and second-value to the numbers denoted by the digits in\r\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\r\n     * to the next date-token.\r\n     */\r\n    if (second === null) {\r\n      result = parseTime(token);\r\n      if (result) {\r\n        hour = result[0];\r\n        minute = result[1];\r\n        second = result[2];\r\n        continue;\r\n      }\r\n    }\r\n\r\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\r\n     * the day-of-month production, set the found-day-of- month flag and set\r\n     * the day-of-month-value to the number denoted by the date-token.  Skip\r\n     * the remaining sub-steps and continue to the next date-token.\r\n     */\r\n    if (dayOfMonth === null) {\r\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\r\n      result = parseDigits(token, 1, 2, true);\r\n      if (result !== null) {\r\n        dayOfMonth = result;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    /* 2.3. If the found-month flag is not set and the date-token matches the\r\n     * month production, set the found-month flag and set the month-value to\r\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\r\n     * continue to the next date-token.\r\n     */\r\n    if (month === null) {\r\n      result = parseMonth(token);\r\n      if (result !== null) {\r\n        month = result;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    /* 2.4. If the found-year flag is not set and the date-token matches the\r\n     * year production, set the found-year flag and set the year-value to the\r\n     * number denoted by the date-token.  Skip the remaining sub-steps and\r\n     * continue to the next date-token.\r\n     */\r\n    if (year === null) {\r\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\r\n      result = parseDigits(token, 2, 4, true);\r\n      if (result !== null) {\r\n        year = result;\r\n        /* From S5.1.1:\r\n         * 3.  If the year-value is greater than or equal to 70 and less\r\n         * than or equal to 99, increment the year-value by 1900.\r\n         * 4.  If the year-value is greater than or equal to 0 and less\r\n         * than or equal to 69, increment the year-value by 2000.\r\n         */\r\n        if (year >= 70 && year <= 99) {\r\n          year += 1900;\r\n        } else if (year >= 0 && year <= 69) {\r\n          year += 2000;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* RFC 6265 S5.1.1\r\n   * \"5. Abort these steps and fail to parse the cookie-date if:\r\n   *     *  at least one of the found-day-of-month, found-month, found-\r\n   *        year, or found-time flags is not set,\r\n   *     *  the day-of-month-value is less than 1 or greater than 31,\r\n   *     *  the year-value is less than 1601,\r\n   *     *  the hour-value is greater than 23,\r\n   *     *  the minute-value is greater than 59, or\r\n   *     *  the second-value is greater than 59.\r\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\r\n   *\r\n   * So, in order as above:\r\n   */\r\n  if (\r\n    dayOfMonth === null ||\r\n    month === null ||\r\n    year === null ||\r\n    second === null ||\r\n    dayOfMonth < 1 ||\r\n    dayOfMonth > 31 ||\r\n    year < 1601 ||\r\n    hour > 23 ||\r\n    minute > 59 ||\r\n    second > 59\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\r\n}\r\n\r\nfunction formatDate(date) {\r\n  validators.validate(validators.isDate(date), date);\r\n  return date.toUTCString();\r\n}\r\n\r\n// S5.1.2 Canonicalized Host Names\r\nfunction canonicalDomain(str) {\r\n  if (str == null) {\r\n    return null;\r\n  }\r\n  str = str.trim().replace(/^\\./, \"\"); // S4.1.2.3 & S5.2.3: ignore leading .\r\n\r\n  if (IP_V6_REGEX_OBJECT.test(str)) {\r\n    str = str.replace(\"[\", \"\").replace(\"]\", \"\");\r\n  }\r\n\r\n  // convert to IDN if any non-ASCII characters\r\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\r\n    str = punycode.toASCII(str);\r\n  }\r\n\r\n  return str.toLowerCase();\r\n}\r\n\r\n// S5.1.3 Domain Matching\r\nfunction domainMatch(str, domStr, canonicalize) {\r\n  if (str == null || domStr == null) {\r\n    return null;\r\n  }\r\n  if (canonicalize !== false) {\r\n    str = canonicalDomain(str);\r\n    domStr = canonicalDomain(domStr);\r\n  }\r\n\r\n  /*\r\n   * S5.1.3:\r\n   * \"A string domain-matches a given domain string if at least one of the\r\n   * following conditions hold:\"\r\n   *\r\n   * \" o The domain string and the string are identical. (Note that both the\r\n   * domain string and the string will have been canonicalized to lower case at\r\n   * this point)\"\r\n   */\r\n  if (str == domStr) {\r\n    return true;\r\n  }\r\n\r\n  /* \" o All of the following [three] conditions hold:\" */\r\n\r\n  /* \"* The domain string is a suffix of the string\" */\r\n  const idx = str.lastIndexOf(domStr);\r\n  if (idx <= 0) {\r\n    return false; // it's a non-match (-1) or prefix (0)\r\n  }\r\n\r\n  // next, check it's a proper suffix\r\n  // e.g., \"a.b.c\".indexOf(\"b.c\") === 2\r\n  // 5 === 3+2\r\n  if (str.length !== domStr.length + idx) {\r\n    return false; // it's not a suffix\r\n  }\r\n\r\n  /* \"  * The last character of the string that is not included in the\r\n   * domain string is a %x2E (\".\") character.\" */\r\n  if (str.substr(idx - 1, 1) !== \".\") {\r\n    return false; // doesn't align on \".\"\r\n  }\r\n\r\n  /* \"  * The string is a host name (i.e., not an IP address).\" */\r\n  if (IP_REGEX_LOWERCASE.test(str)) {\r\n    return false; // it's an IP address\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// RFC6265 S5.1.4 Paths and Path-Match\r\n\r\n/*\r\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\r\n * to compute the default-path of a cookie:\"\r\n *\r\n * Assumption: the path (and not query part or absolute uri) is passed in.\r\n */\r\nfunction defaultPath(path) {\r\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\r\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\r\n  if (!path || path.substr(0, 1) !== \"/\") {\r\n    return \"/\";\r\n  }\r\n\r\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\r\n  // %x2F (\"/\") and skip the remaining step.\"\r\n  if (path === \"/\") {\r\n    return path;\r\n  }\r\n\r\n  const rightSlash = path.lastIndexOf(\"/\");\r\n  if (rightSlash === 0) {\r\n    return \"/\";\r\n  }\r\n\r\n  // \"4. Output the characters of the uri-path from the first character up to,\r\n  // but not including, the right-most %x2F (\"/\").\"\r\n  return path.slice(0, rightSlash);\r\n}\r\n\r\nfunction trimTerminator(str) {\r\n  if (validators.isEmptyString(str)) return str;\r\n  for (let t = 0; t < TERMINATORS.length; t++) {\r\n    const terminatorIdx = str.indexOf(TERMINATORS[t]);\r\n    if (terminatorIdx !== -1) {\r\n      str = str.substr(0, terminatorIdx);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction parseCookiePair(cookiePair, looseMode) {\r\n  cookiePair = trimTerminator(cookiePair);\r\n  validators.validate(validators.isString(cookiePair), cookiePair);\r\n\r\n  let firstEq = cookiePair.indexOf(\"=\");\r\n  if (looseMode) {\r\n    if (firstEq === 0) {\r\n      // '=' is immediately at start\r\n      cookiePair = cookiePair.substr(1);\r\n      firstEq = cookiePair.indexOf(\"=\"); // might still need to split on '='\r\n    }\r\n  } else {\r\n    // non-loose mode\r\n    if (firstEq <= 0) {\r\n      // no '=' or is at start\r\n      return; // needs to have non-empty \"cookie-name\"\r\n    }\r\n  }\r\n\r\n  let cookieName, cookieValue;\r\n  if (firstEq <= 0) {\r\n    cookieName = \"\";\r\n    cookieValue = cookiePair.trim();\r\n  } else {\r\n    cookieName = cookiePair.substr(0, firstEq).trim();\r\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\r\n  }\r\n\r\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\r\n    return;\r\n  }\r\n\r\n  const c = new Cookie();\r\n  c.key = cookieName;\r\n  c.value = cookieValue;\r\n  return c;\r\n}\r\n\r\nfunction parse(str, options) {\r\n  if (!options || typeof options !== \"object\") {\r\n    options = {};\r\n  }\r\n\r\n  if (validators.isEmptyString(str) || !validators.isString(str)) {\r\n    return null;\r\n  }\r\n\r\n  str = str.trim();\r\n\r\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\r\n  const firstSemi = str.indexOf(\";\"); // S5.2 step 1\r\n  const cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\r\n  const c = parseCookiePair(cookiePair, !!options.loose);\r\n  if (!c) {\r\n    return;\r\n  }\r\n\r\n  if (firstSemi === -1) {\r\n    return c;\r\n  }\r\n\r\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\r\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\r\n  // \"discard the first \";\" and trim\".\r\n  const unparsed = str.slice(firstSemi + 1).trim();\r\n\r\n  // \"If the unparsed-attributes string is empty, skip the rest of these\r\n  // steps.\"\r\n  if (unparsed.length === 0) {\r\n    return c;\r\n  }\r\n\r\n  /*\r\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\r\n   * and attribute-value according to the requirements in the following\r\n   * subsections\" for every item.  Plus, for many of the individual attributes\r\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\r\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\r\n   * the previous value.\r\n   */\r\n  const cookie_avs = unparsed.split(\";\");\r\n  while (cookie_avs.length) {\r\n    const av = cookie_avs.shift().trim();\r\n    if (av.length === 0) {\r\n      // happens if \";;\" appears\r\n      continue;\r\n    }\r\n    const av_sep = av.indexOf(\"=\");\r\n    let av_key, av_value;\r\n\r\n    if (av_sep === -1) {\r\n      av_key = av;\r\n      av_value = null;\r\n    } else {\r\n      av_key = av.substr(0, av_sep);\r\n      av_value = av.substr(av_sep + 1);\r\n    }\r\n\r\n    av_key = av_key.trim().toLowerCase();\r\n\r\n    if (av_value) {\r\n      av_value = av_value.trim();\r\n    }\r\n\r\n    switch (av_key) {\r\n      case \"expires\": // S5.2.1\r\n        if (av_value) {\r\n          const exp = parseDate(av_value);\r\n          // \"If the attribute-value failed to parse as a cookie date, ignore the\r\n          // cookie-av.\"\r\n          if (exp) {\r\n            // over and underflow not realistically a concern: V8's getTime() seems to\r\n            // store something larger than a 32-bit time_t (even with 32-bit node)\r\n            c.expires = exp;\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"max-age\": // S5.2.2\r\n        if (av_value) {\r\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\r\n          // character ...[or]... If the remainder of attribute-value contains a\r\n          // non-DIGIT character, ignore the cookie-av.\"\r\n          if (/^-?[0-9]+$/.test(av_value)) {\r\n            const delta = parseInt(av_value, 10);\r\n            // \"If delta-seconds is less than or equal to zero (0), let expiry-time\r\n            // be the earliest representable date and time.\"\r\n            c.setMaxAge(delta);\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"domain\": // S5.2.3\r\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\r\n        // the user agent SHOULD ignore the cookie-av entirely.\"\r\n        if (av_value) {\r\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\r\n          // (\".\") character.\"\r\n          const domain = av_value.trim().replace(/^\\./, \"\");\r\n          if (domain) {\r\n            // \"Convert the cookie-domain to lower case.\"\r\n            c.domain = domain.toLowerCase();\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"path\": // S5.2.4\r\n        /*\r\n         * \"If the attribute-value is empty or if the first character of the\r\n         * attribute-value is not %x2F (\"/\"):\r\n         *   Let cookie-path be the default-path.\r\n         * Otherwise:\r\n         *   Let cookie-path be the attribute-value.\"\r\n         *\r\n         * We'll represent the default-path as null since it depends on the\r\n         * context of the parsing.\r\n         */\r\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\r\n        break;\r\n\r\n      case \"secure\": // S5.2.5\r\n        /*\r\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\r\n         * the user agent MUST append an attribute to the cookie-attribute-list\r\n         * with an attribute-name of Secure and an empty attribute-value.\"\r\n         */\r\n        c.secure = true;\r\n        break;\r\n\r\n      case \"httponly\": // S5.2.6 -- effectively the same as 'secure'\r\n        c.httpOnly = true;\r\n        break;\r\n\r\n      case \"samesite\": // RFC6265bis-02 S5.3.7\r\n        const enforcement = av_value ? av_value.toLowerCase() : \"\";\r\n        switch (enforcement) {\r\n          case \"strict\":\r\n            c.sameSite = \"strict\";\r\n            break;\r\n          case \"lax\":\r\n            c.sameSite = \"lax\";\r\n            break;\r\n          case \"none\":\r\n            c.sameSite = \"none\";\r\n            break;\r\n          default:\r\n            c.sameSite = undefined;\r\n            break;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        c.extensions = c.extensions || [];\r\n        c.extensions.push(av);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return c;\r\n}\r\n\r\n/**\r\n *  If the cookie-name begins with a case-sensitive match for the\r\n *  string \"__Secure-\", abort these steps and ignore the cookie\r\n *  entirely unless the cookie's secure-only-flag is true.\r\n * @param cookie\r\n * @returns boolean\r\n */\r\nfunction isSecurePrefixConditionMet(cookie) {\r\n  validators.validate(validators.isObject(cookie), cookie);\r\n  return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\r\n}\r\n\r\n/**\r\n *  If the cookie-name begins with a case-sensitive match for the\r\n *  string \"__Host-\", abort these steps and ignore the cookie\r\n *  entirely unless the cookie meets all the following criteria:\r\n *    1.  The cookie's secure-only-flag is true.\r\n *    2.  The cookie's host-only-flag is true.\r\n *    3.  The cookie-attribute-list contains an attribute with an\r\n *        attribute-name of \"Path\", and the cookie's path is \"/\".\r\n * @param cookie\r\n * @returns boolean\r\n */\r\nfunction isHostPrefixConditionMet(cookie) {\r\n  validators.validate(validators.isObject(cookie));\r\n  return (\r\n    !cookie.key.startsWith(\"__Host-\") ||\r\n    (cookie.secure &&\r\n      cookie.hostOnly &&\r\n      cookie.path != null &&\r\n      cookie.path === \"/\")\r\n  );\r\n}\r\n\r\n// avoid the V8 deoptimization monster!\r\nfunction jsonParse(str) {\r\n  let obj;\r\n  try {\r\n    obj = JSON.parse(str);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction fromJSON(str) {\r\n  if (!str || validators.isEmptyString(str)) {\r\n    return null;\r\n  }\r\n\r\n  let obj;\r\n  if (typeof str === \"string\") {\r\n    obj = jsonParse(str);\r\n    if (obj instanceof Error) {\r\n      return null;\r\n    }\r\n  } else {\r\n    // assume it's an Object\r\n    obj = str;\r\n  }\r\n\r\n  const c = new Cookie();\r\n  for (let i = 0; i < Cookie.serializableProperties.length; i++) {\r\n    const prop = Cookie.serializableProperties[i];\r\n    if (obj[prop] === undefined || obj[prop] === cookieDefaults[prop]) {\r\n      continue; // leave as prototype default\r\n    }\r\n\r\n    if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\r\n      if (obj[prop] === null) {\r\n        c[prop] = null;\r\n      } else {\r\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\r\n      }\r\n    } else {\r\n      c[prop] = obj[prop];\r\n    }\r\n  }\r\n\r\n  return c;\r\n}\r\n\r\n/* Section 5.4 part 2:\r\n * \"*  Cookies with longer paths are listed before cookies with\r\n *     shorter paths.\r\n *\r\n *  *  Among cookies that have equal-length path fields, cookies with\r\n *     earlier creation-times are listed before cookies with later\r\n *     creation-times.\"\r\n */\r\n\r\nfunction cookieCompare(a, b) {\r\n  validators.validate(validators.isObject(a), a);\r\n  validators.validate(validators.isObject(b), b);\r\n  let cmp = 0;\r\n\r\n  // descending for length: b CMP a\r\n  const aPathLen = a.path ? a.path.length : 0;\r\n  const bPathLen = b.path ? b.path.length : 0;\r\n  cmp = bPathLen - aPathLen;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  // ascending for time: a CMP b\r\n  const aTime = a.creation ? a.creation.getTime() : MAX_TIME;\r\n  const bTime = b.creation ? b.creation.getTime() : MAX_TIME;\r\n  cmp = aTime - bTime;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  // break ties for the same millisecond (precision of JavaScript's clock)\r\n  cmp = a.creationIndex - b.creationIndex;\r\n\r\n  return cmp;\r\n}\r\n\r\n// Gives the permutation of all possible pathMatch()es of a given path. The\r\n// array is in longest-to-shortest order.  Handy for indexing.\r\nfunction permutePath(path) {\r\n  validators.validate(validators.isString(path));\r\n  if (path === \"/\") {\r\n    return [\"/\"];\r\n  }\r\n  const permutations = [path];\r\n  while (path.length > 1) {\r\n    const lindex = path.lastIndexOf(\"/\");\r\n    if (lindex === 0) {\r\n      break;\r\n    }\r\n    path = path.substr(0, lindex);\r\n    permutations.push(path);\r\n  }\r\n  permutations.push(\"/\");\r\n  return permutations;\r\n}\r\n\r\nfunction getCookieContext(url) {\r\n  if (url instanceof Object) {\r\n    return url;\r\n  }\r\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\r\n  // Therefore, we will just skip decoding for such URIs.\r\n  try {\r\n    url = decodeURI(url);\r\n  } catch (err) {\r\n    // Silently swallow error\r\n  }\r\n\r\n  return urlParse(url);\r\n}\r\n\r\nconst cookieDefaults = {\r\n  // the order in which the RFC has them:\r\n  key: \"\",\r\n  value: \"\",\r\n  expires: \"Infinity\",\r\n  maxAge: null,\r\n  domain: null,\r\n  path: null,\r\n  secure: false,\r\n  httpOnly: false,\r\n  extensions: null,\r\n  // set by the CookieJar:\r\n  hostOnly: null,\r\n  pathIsDefault: null,\r\n  creation: null,\r\n  lastAccessed: null,\r\n  sameSite: undefined\r\n};\r\n\r\nclass Cookie {\r\n  constructor(options = {}) {\r\n    const customInspectSymbol = getCustomInspectSymbol();\r\n    if (customInspectSymbol) {\r\n      this[customInspectSymbol] = this.inspect;\r\n    }\r\n\r\n    Object.assign(this, cookieDefaults, options);\r\n    this.creation = this.creation || new Date();\r\n\r\n    // used to break creation ties in cookieCompare():\r\n    Object.defineProperty(this, \"creationIndex\", {\r\n      configurable: false,\r\n      enumerable: false, // important for assert.deepEqual checks\r\n      writable: true,\r\n      value: ++Cookie.cookiesCreated\r\n    });\r\n  }\r\n\r\n  inspect() {\r\n    const now = Date.now();\r\n    const hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\r\n    const createAge = this.creation\r\n      ? `${now - this.creation.getTime()}ms`\r\n      : \"?\";\r\n    const accessAge = this.lastAccessed\r\n      ? `${now - this.lastAccessed.getTime()}ms`\r\n      : \"?\";\r\n    return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\r\n  }\r\n\r\n  toJSON() {\r\n    const obj = {};\r\n\r\n    for (const prop of Cookie.serializableProperties) {\r\n      if (this[prop] === cookieDefaults[prop]) {\r\n        continue; // leave as prototype default\r\n      }\r\n\r\n      if (\r\n        prop === \"expires\" ||\r\n        prop === \"creation\" ||\r\n        prop === \"lastAccessed\"\r\n      ) {\r\n        if (this[prop] === null) {\r\n          obj[prop] = null;\r\n        } else {\r\n          obj[prop] =\r\n            this[prop] == \"Infinity\" // intentionally not ===\r\n              ? \"Infinity\"\r\n              : this[prop].toISOString();\r\n        }\r\n      } else if (prop === \"maxAge\") {\r\n        if (this[prop] !== null) {\r\n          // again, intentionally not ===\r\n          obj[prop] =\r\n            this[prop] == Infinity || this[prop] == -Infinity\r\n              ? this[prop].toString()\r\n              : this[prop];\r\n        }\r\n      } else {\r\n        if (this[prop] !== cookieDefaults[prop]) {\r\n          obj[prop] = this[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  clone() {\r\n    return fromJSON(this.toJSON());\r\n  }\r\n\r\n  validate() {\r\n    if (!COOKIE_OCTETS.test(this.value)) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.expires != Infinity &&\r\n      !(this.expires instanceof Date) &&\r\n      !parseDate(this.expires)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (this.maxAge != null && this.maxAge <= 0) {\r\n      return false; // \"Max-Age=\" non-zero-digit *DIGIT\r\n    }\r\n    if (this.path != null && !PATH_VALUE.test(this.path)) {\r\n      return false;\r\n    }\r\n\r\n    const cdomain = this.cdomain();\r\n    if (cdomain) {\r\n      if (cdomain.match(/\\.$/)) {\r\n        return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\r\n      }\r\n      const suffix = pubsuffix.getPublicSuffix(cdomain);\r\n      if (suffix == null) {\r\n        // it's a public suffix\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setExpires(exp) {\r\n    if (exp instanceof Date) {\r\n      this.expires = exp;\r\n    } else {\r\n      this.expires = parseDate(exp) || \"Infinity\";\r\n    }\r\n  }\r\n\r\n  setMaxAge(age) {\r\n    if (age === Infinity || age === -Infinity) {\r\n      this.maxAge = age.toString(); // so JSON.stringify() works\r\n    } else {\r\n      this.maxAge = age;\r\n    }\r\n  }\r\n\r\n  cookieString() {\r\n    let val = this.value;\r\n    if (val == null) {\r\n      val = \"\";\r\n    }\r\n    if (this.key === \"\") {\r\n      return val;\r\n    }\r\n    return `${this.key}=${val}`;\r\n  }\r\n\r\n  // gives Set-Cookie header format\r\n  toString() {\r\n    let str = this.cookieString();\r\n\r\n    if (this.expires != Infinity) {\r\n      if (this.expires instanceof Date) {\r\n        str += `; Expires=${formatDate(this.expires)}`;\r\n      } else {\r\n        str += `; Expires=${this.expires}`;\r\n      }\r\n    }\r\n\r\n    if (this.maxAge != null && this.maxAge != Infinity) {\r\n      str += `; Max-Age=${this.maxAge}`;\r\n    }\r\n\r\n    if (this.domain && !this.hostOnly) {\r\n      str += `; Domain=${this.domain}`;\r\n    }\r\n    if (this.path) {\r\n      str += `; Path=${this.path}`;\r\n    }\r\n\r\n    if (this.secure) {\r\n      str += \"; Secure\";\r\n    }\r\n    if (this.httpOnly) {\r\n      str += \"; HttpOnly\";\r\n    }\r\n    if (this.sameSite && this.sameSite !== \"none\") {\r\n      const ssCanon = Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\r\n      str += `; SameSite=${ssCanon ? ssCanon : this.sameSite}`;\r\n    }\r\n    if (this.extensions) {\r\n      this.extensions.forEach(ext => {\r\n        str += `; ${ext}`;\r\n      });\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\r\n  // elsewhere)\r\n  // S5.3 says to give the \"latest representable date\" for which we use Infinity\r\n  // For \"expired\" we use 0\r\n  TTL(now) {\r\n    /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\r\n     * attribute, the Max-Age attribute has precedence and controls the\r\n     * expiration date of the cookie.\r\n     * (Concurs with S5.3 step 3)\r\n     */\r\n    if (this.maxAge != null) {\r\n      return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\r\n    }\r\n\r\n    let expires = this.expires;\r\n    if (expires != Infinity) {\r\n      if (!(expires instanceof Date)) {\r\n        expires = parseDate(expires) || Infinity;\r\n      }\r\n\r\n      if (expires == Infinity) {\r\n        return Infinity;\r\n      }\r\n\r\n      return expires.getTime() - (now || Date.now());\r\n    }\r\n\r\n    return Infinity;\r\n  }\r\n\r\n  // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\r\n  // elsewhere)\r\n  expiryTime(now) {\r\n    if (this.maxAge != null) {\r\n      const relativeTo = now || this.creation || new Date();\r\n      const age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\r\n      return relativeTo.getTime() + age;\r\n    }\r\n\r\n    if (this.expires == Infinity) {\r\n      return Infinity;\r\n    }\r\n    return this.expires.getTime();\r\n  }\r\n\r\n  // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\r\n  // elsewhere), except it returns a Date\r\n  expiryDate(now) {\r\n    const millisec = this.expiryTime(now);\r\n    if (millisec == Infinity) {\r\n      return new Date(MAX_TIME);\r\n    } else if (millisec == -Infinity) {\r\n      return new Date(MIN_TIME);\r\n    } else {\r\n      return new Date(millisec);\r\n    }\r\n  }\r\n\r\n  // This replaces the \"persistent-flag\" parts of S5.3 step 3\r\n  isPersistent() {\r\n    return this.maxAge != null || this.expires != Infinity;\r\n  }\r\n\r\n  // Mostly S5.1.2 and S5.2.3:\r\n  canonicalizedDomain() {\r\n    if (this.domain == null) {\r\n      return null;\r\n    }\r\n    return canonicalDomain(this.domain);\r\n  }\r\n\r\n  cdomain() {\r\n    return this.canonicalizedDomain();\r\n  }\r\n}\r\n\r\nCookie.cookiesCreated = 0;\r\nCookie.parse = parse;\r\nCookie.fromJSON = fromJSON;\r\nCookie.serializableProperties = Object.keys(cookieDefaults);\r\nCookie.sameSiteLevel = {\r\n  strict: 3,\r\n  lax: 2,\r\n  none: 1\r\n};\r\n\r\nCookie.sameSiteCanonical = {\r\n  strict: \"Strict\",\r\n  lax: \"Lax\"\r\n};\r\n\r\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\r\n  if (prefixSecurity != null) {\r\n    const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\r\n    /* The three supported options */\r\n    switch (normalizedPrefixSecurity) {\r\n      case PrefixSecurityEnum.STRICT:\r\n      case PrefixSecurityEnum.SILENT:\r\n      case PrefixSecurityEnum.DISABLED:\r\n        return normalizedPrefixSecurity;\r\n    }\r\n  }\r\n  /* Default is SILENT */\r\n  return PrefixSecurityEnum.SILENT;\r\n}\r\n\r\nclass CookieJar {\r\n  constructor(store, options = { rejectPublicSuffixes: true }) {\r\n    if (typeof options === \"boolean\") {\r\n      options = { rejectPublicSuffixes: options };\r\n    }\r\n    validators.validate(validators.isObject(options), options);\r\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\r\n    this.enableLooseMode = !!options.looseMode;\r\n    this.allowSpecialUseDomain =\r\n      typeof options.allowSpecialUseDomain === \"boolean\"\r\n        ? options.allowSpecialUseDomain\r\n        : true;\r\n    this.store = store || new MemoryCookieStore();\r\n    this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\r\n    this._cloneSync = syncWrap(\"clone\");\r\n    this._importCookiesSync = syncWrap(\"_importCookies\");\r\n    this.getCookiesSync = syncWrap(\"getCookies\");\r\n    this.getCookieStringSync = syncWrap(\"getCookieString\");\r\n    this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\r\n    this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\r\n    this.setCookieSync = syncWrap(\"setCookie\");\r\n    this.serializeSync = syncWrap(\"serialize\");\r\n  }\r\n\r\n  setCookie(cookie, url, options, cb) {\r\n    validators.validate(validators.isNonEmptyString(url), cb, options);\r\n    let err;\r\n\r\n    if (validators.isFunction(url)) {\r\n      cb = url;\r\n      return cb(new Error(\"No URL was specified\"));\r\n    }\r\n\r\n    const context = getCookieContext(url);\r\n    if (validators.isFunction(options)) {\r\n      cb = options;\r\n      options = {};\r\n    }\r\n\r\n    validators.validate(validators.isFunction(cb), cb);\r\n\r\n    if (\r\n      !validators.isNonEmptyString(cookie) &&\r\n      !validators.isObject(cookie) &&\r\n      cookie instanceof String &&\r\n      cookie.length == 0\r\n    ) {\r\n      return cb(null);\r\n    }\r\n\r\n    const host = canonicalDomain(context.hostname);\r\n    const loose = options.loose || this.enableLooseMode;\r\n\r\n    let sameSiteContext = null;\r\n    if (options.sameSiteContext) {\r\n      sameSiteContext = checkSameSiteContext(options.sameSiteContext);\r\n      if (!sameSiteContext) {\r\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\r\n      }\r\n    }\r\n\r\n    // S5.3 step 1\r\n    if (typeof cookie === \"string\" || cookie instanceof String) {\r\n      cookie = Cookie.parse(cookie, { loose: loose });\r\n      if (!cookie) {\r\n        err = new Error(\"Cookie failed to parse\");\r\n        return cb(options.ignoreError ? null : err);\r\n      }\r\n    } else if (!(cookie instanceof Cookie)) {\r\n      // If you're seeing this error, and are passing in a Cookie object,\r\n      // it *might* be a Cookie object from another loaded version of tough-cookie.\r\n      err = new Error(\r\n        \"First argument to setCookie must be a Cookie object or string\"\r\n      );\r\n      return cb(options.ignoreError ? null : err);\r\n    }\r\n\r\n    // S5.3 step 2\r\n    const now = options.now || new Date(); // will assign later to save effort in the face of errors\r\n\r\n    // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\r\n\r\n    // S5.3 step 4: NOOP; domain is null by default\r\n\r\n    // S5.3 step 5: public suffixes\r\n    if (this.rejectPublicSuffixes && cookie.domain) {\r\n      const suffix = pubsuffix.getPublicSuffix(cookie.cdomain(), {\r\n        allowSpecialUseDomain: this.allowSpecialUseDomain,\r\n        ignoreError: options.ignoreError\r\n      });\r\n      if (suffix == null && !IP_V6_REGEX_OBJECT.test(cookie.domain)) {\r\n        // e.g. \"com\"\r\n        err = new Error(\"Cookie has domain set to a public suffix\");\r\n        return cb(options.ignoreError ? null : err);\r\n      }\r\n    }\r\n\r\n    // S5.3 step 6:\r\n    if (cookie.domain) {\r\n      if (!domainMatch(host, cookie.cdomain(), false)) {\r\n        err = new Error(\r\n          `Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`\r\n        );\r\n        return cb(options.ignoreError ? null : err);\r\n      }\r\n\r\n      if (cookie.hostOnly == null) {\r\n        // don't reset if already set\r\n        cookie.hostOnly = false;\r\n      }\r\n    } else {\r\n      cookie.hostOnly = true;\r\n      cookie.domain = host;\r\n    }\r\n\r\n    //S5.2.4 If the attribute-value is empty or if the first character of the\r\n    //attribute-value is not %x2F (\"/\"):\r\n    //Let cookie-path be the default-path.\r\n    if (!cookie.path || cookie.path[0] !== \"/\") {\r\n      cookie.path = defaultPath(context.pathname);\r\n      cookie.pathIsDefault = true;\r\n    }\r\n\r\n    // S5.3 step 8: NOOP; secure attribute\r\n    // S5.3 step 9: NOOP; httpOnly attribute\r\n\r\n    // S5.3 step 10\r\n    if (options.http === false && cookie.httpOnly) {\r\n      err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\r\n      return cb(options.ignoreError ? null : err);\r\n    }\r\n\r\n    // 6252bis-02 S5.4 Step 13 & 14:\r\n    if (\r\n      cookie.sameSite !== \"none\" &&\r\n      cookie.sameSite !== undefined &&\r\n      sameSiteContext\r\n    ) {\r\n      // \"If the cookie's \"same-site-flag\" is not \"None\", and the cookie\r\n      //  is being set from a context whose \"site for cookies\" is not an\r\n      //  exact match for request-uri's host's registered domain, then\r\n      //  abort these steps and ignore the newly created cookie entirely.\"\r\n      if (sameSiteContext === \"none\") {\r\n        err = new Error(\r\n          \"Cookie is SameSite but this is a cross-origin request\"\r\n        );\r\n        return cb(options.ignoreError ? null : err);\r\n      }\r\n    }\r\n\r\n    /* 6265bis-02 S5.4 Steps 15 & 16 */\r\n    const ignoreErrorForPrefixSecurity =\r\n      this.prefixSecurity === PrefixSecurityEnum.SILENT;\r\n    const prefixSecurityDisabled =\r\n      this.prefixSecurity === PrefixSecurityEnum.DISABLED;\r\n    /* If prefix checking is not disabled ...*/\r\n    if (!prefixSecurityDisabled) {\r\n      let errorFound = false;\r\n      let errorMsg;\r\n      /* Check secure prefix condition */\r\n      if (!isSecurePrefixConditionMet(cookie)) {\r\n        errorFound = true;\r\n        errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\r\n      } else if (!isHostPrefixConditionMet(cookie)) {\r\n        /* Check host prefix condition */\r\n        errorFound = true;\r\n        errorMsg =\r\n          \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\r\n      }\r\n      if (errorFound) {\r\n        return cb(\r\n          options.ignoreError || ignoreErrorForPrefixSecurity\r\n            ? null\r\n            : new Error(errorMsg)\r\n        );\r\n      }\r\n    }\r\n\r\n    const store = this.store;\r\n\r\n    if (!store.updateCookie) {\r\n      store.updateCookie = function(oldCookie, newCookie, cb) {\r\n        this.putCookie(newCookie, cb);\r\n      };\r\n    }\r\n\r\n    function withCookie(err, oldCookie) {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n\r\n      const next = function(err) {\r\n        if (err) {\r\n          return cb(err);\r\n        } else {\r\n          cb(null, cookie);\r\n        }\r\n      };\r\n\r\n      if (oldCookie) {\r\n        // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\r\n        // domain, and path as the newly created cookie:\"\r\n        if (options.http === false && oldCookie.httpOnly) {\r\n          // step 11.2\r\n          err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\r\n          return cb(options.ignoreError ? null : err);\r\n        }\r\n        cookie.creation = oldCookie.creation; // step 11.3\r\n        cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\r\n        cookie.lastAccessed = now;\r\n        // Step 11.4 (delete cookie) is implied by just setting the new one:\r\n        store.updateCookie(oldCookie, cookie, next); // step 12\r\n      } else {\r\n        cookie.creation = cookie.lastAccessed = now;\r\n        store.putCookie(cookie, next); // step 12\r\n      }\r\n    }\r\n\r\n    store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\r\n  }\r\n\r\n  // RFC6365 S5.4\r\n  getCookies(url, options, cb) {\r\n    validators.validate(validators.isNonEmptyString(url), cb, url);\r\n    const context = getCookieContext(url);\r\n    if (validators.isFunction(options)) {\r\n      cb = options;\r\n      options = {};\r\n    }\r\n    validators.validate(validators.isObject(options), cb, options);\r\n    validators.validate(validators.isFunction(cb), cb);\r\n\r\n    const host = canonicalDomain(context.hostname);\r\n    const path = context.pathname || \"/\";\r\n\r\n    let secure = options.secure;\r\n    if (\r\n      secure == null &&\r\n      context.protocol &&\r\n      (context.protocol == \"https:\" || context.protocol == \"wss:\")\r\n    ) {\r\n      secure = true;\r\n    }\r\n\r\n    let sameSiteLevel = 0;\r\n    if (options.sameSiteContext) {\r\n      const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\r\n      sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\r\n      if (!sameSiteLevel) {\r\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\r\n      }\r\n    }\r\n\r\n    let http = options.http;\r\n    if (http == null) {\r\n      http = true;\r\n    }\r\n\r\n    const now = options.now || Date.now();\r\n    const expireCheck = options.expire !== false;\r\n    const allPaths = !!options.allPaths;\r\n    const store = this.store;\r\n\r\n    function matchingCookie(c) {\r\n      // \"Either:\r\n      //   The cookie's host-only-flag is true and the canonicalized\r\n      //   request-host is identical to the cookie's domain.\r\n      // Or:\r\n      //   The cookie's host-only-flag is false and the canonicalized\r\n      //   request-host domain-matches the cookie's domain.\"\r\n      if (c.hostOnly) {\r\n        if (c.domain != host) {\r\n          return false;\r\n        }\r\n      } else {\r\n        if (!domainMatch(host, c.domain, false)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // \"The request-uri's path path-matches the cookie's path.\"\r\n      if (!allPaths && !pathMatch(path, c.path)) {\r\n        return false;\r\n      }\r\n\r\n      // \"If the cookie's secure-only-flag is true, then the request-uri's\r\n      // scheme must denote a \"secure\" protocol\"\r\n      if (c.secure && !secure) {\r\n        return false;\r\n      }\r\n\r\n      // \"If the cookie's http-only-flag is true, then exclude the cookie if the\r\n      // cookie-string is being generated for a \"non-HTTP\" API\"\r\n      if (c.httpOnly && !http) {\r\n        return false;\r\n      }\r\n\r\n      // RFC6265bis-02 S5.3.7\r\n      if (sameSiteLevel) {\r\n        const cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\r\n        if (cookieLevel > sameSiteLevel) {\r\n          // only allow cookies at or below the request level\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // deferred from S5.3\r\n      // non-RFC: allow retention of expired cookies by choice\r\n      if (expireCheck && c.expiryTime() <= now) {\r\n        store.removeCookie(c.domain, c.path, c.key, () => {}); // result ignored\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    store.findCookies(\r\n      host,\r\n      allPaths ? null : path,\r\n      this.allowSpecialUseDomain,\r\n      (err, cookies) => {\r\n        if (err) {\r\n          return cb(err);\r\n        }\r\n\r\n        cookies = cookies.filter(matchingCookie);\r\n\r\n        // sorting of S5.4 part 2\r\n        if (options.sort !== false) {\r\n          cookies = cookies.sort(cookieCompare);\r\n        }\r\n\r\n        // S5.4 part 3\r\n        const now = new Date();\r\n        for (const cookie of cookies) {\r\n          cookie.lastAccessed = now;\r\n        }\r\n        // TODO persist lastAccessed\r\n\r\n        cb(null, cookies);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCookieString(...args) {\r\n    const cb = args.pop();\r\n    validators.validate(validators.isFunction(cb), cb);\r\n    const next = function(err, cookies) {\r\n      if (err) {\r\n        cb(err);\r\n      } else {\r\n        cb(\r\n          null,\r\n          cookies\r\n            .sort(cookieCompare)\r\n            .map(c => c.cookieString())\r\n            .join(\"; \")\r\n        );\r\n      }\r\n    };\r\n    args.push(next);\r\n    this.getCookies.apply(this, args);\r\n  }\r\n\r\n  getSetCookieStrings(...args) {\r\n    const cb = args.pop();\r\n    validators.validate(validators.isFunction(cb), cb);\r\n    const next = function(err, cookies) {\r\n      if (err) {\r\n        cb(err);\r\n      } else {\r\n        cb(\r\n          null,\r\n          cookies.map(c => {\r\n            return c.toString();\r\n          })\r\n        );\r\n      }\r\n    };\r\n    args.push(next);\r\n    this.getCookies.apply(this, args);\r\n  }\r\n\r\n  serialize(cb) {\r\n    validators.validate(validators.isFunction(cb), cb);\r\n    let type = this.store.constructor.name;\r\n    if (validators.isObject(type)) {\r\n      type = null;\r\n    }\r\n\r\n    // update README.md \"Serialization Format\" if you change this, please!\r\n    const serialized = {\r\n      // The version of tough-cookie that serialized this jar. Generally a good\r\n      // practice since future versions can make data import decisions based on\r\n      // known past behavior. When/if this matters, use `semver`.\r\n      version: `tough-cookie@${VERSION}`,\r\n\r\n      // add the store type, to make humans happy:\r\n      storeType: type,\r\n\r\n      // CookieJar configuration:\r\n      rejectPublicSuffixes: !!this.rejectPublicSuffixes,\r\n      enableLooseMode: !!this.enableLooseMode,\r\n      allowSpecialUseDomain: !!this.allowSpecialUseDomain,\r\n      prefixSecurity: getNormalizedPrefixSecurity(this.prefixSecurity),\r\n\r\n      // this gets filled from getAllCookies:\r\n      cookies: []\r\n    };\r\n\r\n    if (\r\n      !(\r\n        this.store.getAllCookies &&\r\n        typeof this.store.getAllCookies === \"function\"\r\n      )\r\n    ) {\r\n      return cb(\r\n        new Error(\r\n          \"store does not support getAllCookies and cannot be serialized\"\r\n        )\r\n      );\r\n    }\r\n\r\n    this.store.getAllCookies((err, cookies) => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n\r\n      serialized.cookies = cookies.map(cookie => {\r\n        // convert to serialized 'raw' cookies\r\n        cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\r\n\r\n        // Remove the index so new ones get assigned during deserialization\r\n        delete cookie.creationIndex;\r\n\r\n        return cookie;\r\n      });\r\n\r\n      return cb(null, serialized);\r\n    });\r\n  }\r\n\r\n  toJSON() {\r\n    return this.serializeSync();\r\n  }\r\n\r\n  // use the class method CookieJar.deserialize instead of calling this directly\r\n  _importCookies(serialized, cb) {\r\n    let cookies = serialized.cookies;\r\n    if (!cookies || !Array.isArray(cookies)) {\r\n      return cb(new Error(\"serialized jar has no cookies array\"));\r\n    }\r\n    cookies = cookies.slice(); // do not modify the original\r\n\r\n    const putNext = err => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n\r\n      if (!cookies.length) {\r\n        return cb(err, this);\r\n      }\r\n\r\n      let cookie;\r\n      try {\r\n        cookie = fromJSON(cookies.shift());\r\n      } catch (e) {\r\n        return cb(e);\r\n      }\r\n\r\n      if (cookie === null) {\r\n        return putNext(null); // skip this cookie\r\n      }\r\n\r\n      this.store.putCookie(cookie, putNext);\r\n    };\r\n\r\n    putNext();\r\n  }\r\n\r\n  clone(newStore, cb) {\r\n    if (arguments.length === 1) {\r\n      cb = newStore;\r\n      newStore = null;\r\n    }\r\n\r\n    this.serialize((err, serialized) => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n      CookieJar.deserialize(serialized, newStore, cb);\r\n    });\r\n  }\r\n\r\n  cloneSync(newStore) {\r\n    if (arguments.length === 0) {\r\n      return this._cloneSync();\r\n    }\r\n    if (!newStore.synchronous) {\r\n      throw new Error(\r\n        \"CookieJar clone destination store is not synchronous; use async API instead.\"\r\n      );\r\n    }\r\n    return this._cloneSync(newStore);\r\n  }\r\n\r\n  removeAllCookies(cb) {\r\n    validators.validate(validators.isFunction(cb), cb);\r\n    const store = this.store;\r\n\r\n    // Check that the store implements its own removeAllCookies(). The default\r\n    // implementation in Store will immediately call the callback with a \"not\r\n    // implemented\" Error.\r\n    if (\r\n      typeof store.removeAllCookies === \"function\" &&\r\n      store.removeAllCookies !== Store.prototype.removeAllCookies\r\n    ) {\r\n      return store.removeAllCookies(cb);\r\n    }\r\n\r\n    store.getAllCookies((err, cookies) => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n\r\n      if (cookies.length === 0) {\r\n        return cb(null);\r\n      }\r\n\r\n      let completedCount = 0;\r\n      const removeErrors = [];\r\n\r\n      function removeCookieCb(removeErr) {\r\n        if (removeErr) {\r\n          removeErrors.push(removeErr);\r\n        }\r\n\r\n        completedCount++;\r\n\r\n        if (completedCount === cookies.length) {\r\n          return cb(removeErrors.length ? removeErrors[0] : null);\r\n        }\r\n      }\r\n\r\n      cookies.forEach(cookie => {\r\n        store.removeCookie(\r\n          cookie.domain,\r\n          cookie.path,\r\n          cookie.key,\r\n          removeCookieCb\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  static deserialize(strOrObj, store, cb) {\r\n    if (arguments.length !== 3) {\r\n      // store is optional\r\n      cb = store;\r\n      store = null;\r\n    }\r\n    validators.validate(validators.isFunction(cb), cb);\r\n\r\n    let serialized;\r\n    if (typeof strOrObj === \"string\") {\r\n      serialized = jsonParse(strOrObj);\r\n      if (serialized instanceof Error) {\r\n        return cb(serialized);\r\n      }\r\n    } else {\r\n      serialized = strOrObj;\r\n    }\r\n\r\n    const jar = new CookieJar(store, {\r\n      rejectPublicSuffixes: serialized.rejectPublicSuffixes,\r\n      looseMode: serialized.enableLooseMode,\r\n      allowSpecialUseDomain: serialized.allowSpecialUseDomain,\r\n      prefixSecurity: serialized.prefixSecurity\r\n    });\r\n    jar._importCookies(serialized, err => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n      cb(null, jar);\r\n    });\r\n  }\r\n\r\n  static deserializeSync(strOrObj, store) {\r\n    const serialized =\r\n      typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\r\n    const jar = new CookieJar(store, {\r\n      rejectPublicSuffixes: serialized.rejectPublicSuffixes,\r\n      looseMode: serialized.enableLooseMode\r\n    });\r\n\r\n    // catch this mistake early:\r\n    if (!jar.store.synchronous) {\r\n      throw new Error(\r\n        \"CookieJar store is not synchronous; use async API instead.\"\r\n      );\r\n    }\r\n\r\n    jar._importCookiesSync(serialized);\r\n    return jar;\r\n  }\r\n}\r\nCookieJar.fromJSON = CookieJar.deserializeSync;\r\n\r\n[\r\n  \"_importCookies\",\r\n  \"clone\",\r\n  \"getCookies\",\r\n  \"getCookieString\",\r\n  \"getSetCookieStrings\",\r\n  \"removeAllCookies\",\r\n  \"serialize\",\r\n  \"setCookie\"\r\n].forEach(name => {\r\n  CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\r\n});\r\nCookieJar.deserialize = fromCallback(CookieJar.deserialize);\r\n\r\n// Use a closure to provide a true imperative API for synchronous stores.\r\nfunction syncWrap(method) {\r\n  return function(...args) {\r\n    if (!this.store.synchronous) {\r\n      throw new Error(\r\n        \"CookieJar store is not synchronous; use async API instead.\"\r\n      );\r\n    }\r\n\r\n    let syncErr, syncResult;\r\n    this[method](...args, (err, result) => {\r\n      syncErr = err;\r\n      syncResult = result;\r\n    });\r\n\r\n    if (syncErr) {\r\n      throw syncErr;\r\n    }\r\n    return syncResult;\r\n  };\r\n}\r\n\r\nexports.version = VERSION;\r\nexports.CookieJar = CookieJar;\r\nexports.Cookie = Cookie;\r\nexports.Store = Store;\r\nexports.MemoryCookieStore = MemoryCookieStore;\r\nexports.parseDate = parseDate;\r\nexports.formatDate = formatDate;\r\nexports.parse = parse;\r\nexports.fromJSON = fromJSON;\r\nexports.domainMatch = domainMatch;\r\nexports.defaultPath = defaultPath;\r\nexports.pathMatch = pathMatch;\r\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\r\nexports.cookieCompare = cookieCompare;\r\nexports.permuteDomain = require(\"./permuteDomain\").permuteDomain;\r\nexports.permutePath = permutePath;\r\nexports.canonicalDomain = canonicalDomain;\r\nexports.PrefixSecurityEnum = PrefixSecurityEnum;\r\nexports.ParameterError = validators.ParameterError;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}