{"ast":null,"code":"\"use strict\";\n\nconst webIDLConversions = require(\"webidl-conversions\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst NODE_TYPE = require(\"../node-type\");\nconst {\n  HTML_NS\n} = require(\"../helpers/namespaces\");\nconst {\n  getHTMLElementInterface\n} = require(\"../helpers/create-element\");\nconst {\n  shadowIncludingInclusiveDescendantsIterator\n} = require(\"../helpers/shadow-dom\");\nconst {\n  isValidCustomElementName,\n  tryUpgradeElement,\n  enqueueCEUpgradeReaction\n} = require(\"../helpers/custom-elements\");\nconst idlUtils = require(\"../generated/utils\");\nconst IDLFunction = require(\"../generated/Function.js\");\nconst HTMLUnknownElement = require(\"../generated/HTMLUnknownElement\");\nconst LIFECYCLE_CALLBACKS = [\"connectedCallback\", \"disconnectedCallback\", \"adoptedCallback\", \"attributeChangedCallback\"];\nfunction convertToSequenceDOMString(obj) {\n  if (!obj || !obj[Symbol.iterator]) {\n    throw new TypeError(\"Invalid Sequence\");\n  }\n  return Array.from(obj).map(webIDLConversions.DOMString);\n}\n\n// Returns true is the passed value is a valid constructor.\n// Borrowed from: https://stackoverflow.com/a/39336206/3832710\nfunction isConstructor(value) {\n  if (typeof value !== \"function\") {\n    return false;\n  }\n  try {\n    const P = new Proxy(value, {\n      construct() {\n        return {};\n      }\n    });\n\n    // eslint-disable-next-line no-new\n    new P();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n// https://html.spec.whatwg.org/#customelementregistry\nclass CustomElementRegistryImpl {\n  constructor(globalObject) {\n    this._customElementDefinitions = [];\n    this._elementDefinitionIsRunning = false;\n    this._whenDefinedPromiseMap = Object.create(null);\n    this._globalObject = globalObject;\n  }\n\n  // https://html.spec.whatwg.org/#dom-customelementregistry-define\n  define(name, constructor, options) {\n    const {\n      _globalObject\n    } = this;\n    const ctor = constructor.objectReference;\n    if (!isConstructor(ctor)) {\n      throw new TypeError(\"Constructor argument is not a constructor.\");\n    }\n    if (!isValidCustomElementName(name)) {\n      throw DOMException.create(_globalObject, [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]);\n    }\n    const nameAlreadyRegistered = this._customElementDefinitions.some(entry => entry.name === name);\n    if (nameAlreadyRegistered) {\n      throw DOMException.create(_globalObject, [\"This name has already been registered in the registry.\", \"NotSupportedError\"]);\n    }\n    const ctorAlreadyRegistered = this._customElementDefinitions.some(entry => entry.objectReference === ctor);\n    if (ctorAlreadyRegistered) {\n      throw DOMException.create(_globalObject, [\"This constructor has already been registered in the registry.\", \"NotSupportedError\"]);\n    }\n    let localName = name;\n    let extendsOption = null;\n    if (options !== undefined && options.extends) {\n      extendsOption = options.extends;\n    }\n    if (extendsOption !== null) {\n      if (isValidCustomElementName(extendsOption)) {\n        throw DOMException.create(_globalObject, [\"Option extends value can't be a valid custom element name.\", \"NotSupportedError\"]);\n      }\n      const extendsInterface = getHTMLElementInterface(extendsOption);\n      if (extendsInterface === HTMLUnknownElement) {\n        throw DOMException.create(_globalObject, [`${extendsOption} is an HTMLUnknownElement.`, \"NotSupportedError\"]);\n      }\n      localName = extendsOption;\n    }\n    if (this._elementDefinitionIsRunning) {\n      throw DOMException.create(_globalObject, [\"Invalid nested custom element definition.\", \"NotSupportedError\"]);\n    }\n    this._elementDefinitionIsRunning = true;\n    let disableShadow = false;\n    let observedAttributes = [];\n    const lifecycleCallbacks = {\n      connectedCallback: null,\n      disconnectedCallback: null,\n      adoptedCallback: null,\n      attributeChangedCallback: null\n    };\n    let caughtError;\n    try {\n      const {\n        prototype\n      } = ctor;\n      if (typeof prototype !== \"object\") {\n        throw new TypeError(\"Invalid constructor prototype.\");\n      }\n      for (const callbackName of LIFECYCLE_CALLBACKS) {\n        const callbackValue = prototype[callbackName];\n        if (callbackValue !== undefined) {\n          lifecycleCallbacks[callbackName] = IDLFunction.convert(callbackValue, {\n            context: `The lifecycle callback \"${callbackName}\"`\n          });\n        }\n      }\n      if (lifecycleCallbacks.attributeChangedCallback !== null) {\n        const observedAttributesIterable = ctor.observedAttributes;\n        if (observedAttributesIterable !== undefined) {\n          observedAttributes = convertToSequenceDOMString(observedAttributesIterable);\n        }\n      }\n      let disabledFeatures = [];\n      const disabledFeaturesIterable = ctor.disabledFeatures;\n      if (disabledFeaturesIterable) {\n        disabledFeatures = convertToSequenceDOMString(disabledFeaturesIterable);\n      }\n      disableShadow = disabledFeatures.includes(\"shadow\");\n    } catch (err) {\n      caughtError = err;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n    if (caughtError !== undefined) {\n      throw caughtError;\n    }\n    const definition = {\n      name,\n      localName,\n      constructor,\n      objectReference: ctor,\n      observedAttributes,\n      lifecycleCallbacks,\n      disableShadow,\n      constructionStack: []\n    };\n    this._customElementDefinitions.push(definition);\n    const document = idlUtils.implForWrapper(this._globalObject._document);\n    const upgradeCandidates = [];\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(document)) {\n      if (candidate._namespaceURI === HTML_NS && candidate._localName === localName && (extendsOption === null || candidate._isValue === name)) {\n        upgradeCandidates.push(candidate);\n      }\n    }\n    for (const upgradeCandidate of upgradeCandidates) {\n      enqueueCEUpgradeReaction(upgradeCandidate, definition);\n    }\n    if (this._whenDefinedPromiseMap[name] !== undefined) {\n      this._whenDefinedPromiseMap[name].resolve(ctor);\n      delete this._whenDefinedPromiseMap[name];\n    }\n  }\n\n  // https://html.spec.whatwg.org/#dom-customelementregistry-get\n  get(name) {\n    const definition = this._customElementDefinitions.find(entry => entry.name === name);\n    return definition && definition.objectReference;\n  }\n\n  // https://html.spec.whatwg.org/#dom-customelementregistry-whendefined\n  whenDefined(name) {\n    if (!isValidCustomElementName(name)) {\n      return Promise.reject(DOMException.create(this._globalObject, [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]));\n    }\n    const alreadyRegistered = this._customElementDefinitions.find(entry => entry.name === name);\n    if (alreadyRegistered) {\n      return Promise.resolve(alreadyRegistered.objectReference);\n    }\n    if (this._whenDefinedPromiseMap[name] === undefined) {\n      let resolve;\n      const promise = new Promise(r => {\n        resolve = r;\n      });\n\n      // Store the pending Promise along with the extracted resolve callback to actually resolve the returned Promise,\n      // once the custom element is registered.\n      this._whenDefinedPromiseMap[name] = {\n        promise,\n        resolve\n      };\n    }\n    return this._whenDefinedPromiseMap[name].promise;\n  }\n\n  // https://html.spec.whatwg.org/#dom-customelementregistry-upgrade\n  upgrade(root) {\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(root)) {\n      if (candidate.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        tryUpgradeElement(candidate);\n      }\n    }\n  }\n}\nmodule.exports = {\n  implementation: CustomElementRegistryImpl\n};","map":{"version":3,"names":["webIDLConversions","require","DOMException","NODE_TYPE","HTML_NS","getHTMLElementInterface","shadowIncludingInclusiveDescendantsIterator","isValidCustomElementName","tryUpgradeElement","enqueueCEUpgradeReaction","idlUtils","IDLFunction","HTMLUnknownElement","LIFECYCLE_CALLBACKS","convertToSequenceDOMString","obj","Symbol","iterator","TypeError","Array","from","map","DOMString","isConstructor","value","P","Proxy","construct","CustomElementRegistryImpl","constructor","globalObject","_customElementDefinitions","_elementDefinitionIsRunning","_whenDefinedPromiseMap","Object","create","_globalObject","define","name","options","ctor","objectReference","nameAlreadyRegistered","some","entry","ctorAlreadyRegistered","localName","extendsOption","undefined","extends","extendsInterface","disableShadow","observedAttributes","lifecycleCallbacks","connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback","caughtError","prototype","callbackName","callbackValue","convert","context","observedAttributesIterable","disabledFeatures","disabledFeaturesIterable","includes","err","definition","constructionStack","push","document","implForWrapper","_document","upgradeCandidates","candidate","_namespaceURI","_localName","_isValue","upgradeCandidate","resolve","get","find","whenDefined","Promise","reject","alreadyRegistered","promise","r","upgrade","root","nodeType","ELEMENT_NODE","module","exports","implementation"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/custom-elements/CustomElementRegistry-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst webIDLConversions = require(\"webidl-conversions\");\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\n\r\nconst NODE_TYPE = require(\"../node-type\");\r\n\r\nconst { HTML_NS } = require(\"../helpers/namespaces\");\r\nconst { getHTMLElementInterface } = require(\"../helpers/create-element\");\r\nconst { shadowIncludingInclusiveDescendantsIterator } = require(\"../helpers/shadow-dom\");\r\nconst { isValidCustomElementName, tryUpgradeElement, enqueueCEUpgradeReaction } = require(\"../helpers/custom-elements\");\r\n\r\nconst idlUtils = require(\"../generated/utils\");\r\nconst IDLFunction = require(\"../generated/Function.js\");\r\nconst HTMLUnknownElement = require(\"../generated/HTMLUnknownElement\");\r\n\r\nconst LIFECYCLE_CALLBACKS = [\r\n  \"connectedCallback\",\r\n  \"disconnectedCallback\",\r\n  \"adoptedCallback\",\r\n  \"attributeChangedCallback\"\r\n];\r\n\r\nfunction convertToSequenceDOMString(obj) {\r\n  if (!obj || !obj[Symbol.iterator]) {\r\n    throw new TypeError(\"Invalid Sequence\");\r\n  }\r\n\r\n  return Array.from(obj).map(webIDLConversions.DOMString);\r\n}\r\n\r\n// Returns true is the passed value is a valid constructor.\r\n// Borrowed from: https://stackoverflow.com/a/39336206/3832710\r\nfunction isConstructor(value) {\r\n  if (typeof value !== \"function\") {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const P = new Proxy(value, {\r\n      construct() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line no-new\r\n    new P();\r\n\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// https://html.spec.whatwg.org/#customelementregistry\r\nclass CustomElementRegistryImpl {\r\n  constructor(globalObject) {\r\n    this._customElementDefinitions = [];\r\n    this._elementDefinitionIsRunning = false;\r\n    this._whenDefinedPromiseMap = Object.create(null);\r\n\r\n    this._globalObject = globalObject;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-define\r\n  define(name, constructor, options) {\r\n    const { _globalObject } = this;\r\n    const ctor = constructor.objectReference;\r\n\r\n    if (!isConstructor(ctor)) {\r\n      throw new TypeError(\"Constructor argument is not a constructor.\");\r\n    }\r\n\r\n    if (!isValidCustomElementName(name)) {\r\n      throw DOMException.create(_globalObject, [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]);\r\n    }\r\n\r\n    const nameAlreadyRegistered = this._customElementDefinitions.some(entry => entry.name === name);\r\n    if (nameAlreadyRegistered) {\r\n      throw DOMException.create(_globalObject, [\r\n        \"This name has already been registered in the registry.\",\r\n        \"NotSupportedError\"\r\n      ]);\r\n    }\r\n\r\n    const ctorAlreadyRegistered = this._customElementDefinitions.some(entry => entry.objectReference === ctor);\r\n    if (ctorAlreadyRegistered) {\r\n      throw DOMException.create(_globalObject, [\r\n        \"This constructor has already been registered in the registry.\",\r\n        \"NotSupportedError\"\r\n      ]);\r\n    }\r\n\r\n    let localName = name;\r\n\r\n    let extendsOption = null;\r\n    if (options !== undefined && options.extends) {\r\n      extendsOption = options.extends;\r\n    }\r\n\r\n    if (extendsOption !== null) {\r\n      if (isValidCustomElementName(extendsOption)) {\r\n        throw DOMException.create(_globalObject, [\r\n          \"Option extends value can't be a valid custom element name.\",\r\n          \"NotSupportedError\"\r\n        ]);\r\n      }\r\n\r\n      const extendsInterface = getHTMLElementInterface(extendsOption);\r\n      if (extendsInterface === HTMLUnknownElement) {\r\n        throw DOMException.create(_globalObject, [\r\n          `${extendsOption} is an HTMLUnknownElement.`,\r\n          \"NotSupportedError\"\r\n        ]);\r\n      }\r\n\r\n      localName = extendsOption;\r\n    }\r\n\r\n    if (this._elementDefinitionIsRunning) {\r\n      throw DOMException.create(_globalObject, [\r\n        \"Invalid nested custom element definition.\",\r\n        \"NotSupportedError\"\r\n      ]);\r\n    }\r\n\r\n    this._elementDefinitionIsRunning = true;\r\n\r\n    let disableShadow = false;\r\n    let observedAttributes = [];\r\n    const lifecycleCallbacks = {\r\n      connectedCallback: null,\r\n      disconnectedCallback: null,\r\n      adoptedCallback: null,\r\n      attributeChangedCallback: null\r\n    };\r\n\r\n    let caughtError;\r\n    try {\r\n      const { prototype } = ctor;\r\n\r\n      if (typeof prototype !== \"object\") {\r\n        throw new TypeError(\"Invalid constructor prototype.\");\r\n      }\r\n\r\n      for (const callbackName of LIFECYCLE_CALLBACKS) {\r\n        const callbackValue = prototype[callbackName];\r\n\r\n        if (callbackValue !== undefined) {\r\n          lifecycleCallbacks[callbackName] = IDLFunction.convert(callbackValue, {\r\n            context: `The lifecycle callback \"${callbackName}\"`\r\n          });\r\n        }\r\n      }\r\n\r\n      if (lifecycleCallbacks.attributeChangedCallback !== null) {\r\n        const observedAttributesIterable = ctor.observedAttributes;\r\n\r\n        if (observedAttributesIterable !== undefined) {\r\n          observedAttributes = convertToSequenceDOMString(observedAttributesIterable);\r\n        }\r\n      }\r\n\r\n      let disabledFeatures = [];\r\n      const disabledFeaturesIterable = ctor.disabledFeatures;\r\n      if (disabledFeaturesIterable) {\r\n        disabledFeatures = convertToSequenceDOMString(disabledFeaturesIterable);\r\n      }\r\n\r\n      disableShadow = disabledFeatures.includes(\"shadow\");\r\n    } catch (err) {\r\n      caughtError = err;\r\n    } finally {\r\n      this._elementDefinitionIsRunning = false;\r\n    }\r\n\r\n    if (caughtError !== undefined) {\r\n      throw caughtError;\r\n    }\r\n\r\n    const definition = {\r\n      name,\r\n      localName,\r\n      constructor,\r\n      objectReference: ctor,\r\n      observedAttributes,\r\n      lifecycleCallbacks,\r\n      disableShadow,\r\n      constructionStack: []\r\n    };\r\n\r\n    this._customElementDefinitions.push(definition);\r\n\r\n    const document = idlUtils.implForWrapper(this._globalObject._document);\r\n\r\n    const upgradeCandidates = [];\r\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(document)) {\r\n      if (\r\n        (candidate._namespaceURI === HTML_NS && candidate._localName === localName) &&\r\n        (extendsOption === null || candidate._isValue === name)\r\n      ) {\r\n        upgradeCandidates.push(candidate);\r\n      }\r\n    }\r\n\r\n    for (const upgradeCandidate of upgradeCandidates) {\r\n      enqueueCEUpgradeReaction(upgradeCandidate, definition);\r\n    }\r\n\r\n    if (this._whenDefinedPromiseMap[name] !== undefined) {\r\n      this._whenDefinedPromiseMap[name].resolve(ctor);\r\n      delete this._whenDefinedPromiseMap[name];\r\n    }\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-get\r\n  get(name) {\r\n    const definition = this._customElementDefinitions.find(entry => entry.name === name);\r\n    return definition && definition.objectReference;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-whendefined\r\n  whenDefined(name) {\r\n    if (!isValidCustomElementName(name)) {\r\n      return Promise.reject(DOMException.create(\r\n        this._globalObject,\r\n        [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]\r\n      ));\r\n    }\r\n\r\n    const alreadyRegistered = this._customElementDefinitions.find(entry => entry.name === name);\r\n    if (alreadyRegistered) {\r\n      return Promise.resolve(alreadyRegistered.objectReference);\r\n    }\r\n\r\n    if (this._whenDefinedPromiseMap[name] === undefined) {\r\n      let resolve;\r\n      const promise = new Promise(r => {\r\n        resolve = r;\r\n      });\r\n\r\n      // Store the pending Promise along with the extracted resolve callback to actually resolve the returned Promise,\r\n      // once the custom element is registered.\r\n      this._whenDefinedPromiseMap[name] = {\r\n        promise,\r\n        resolve\r\n      };\r\n    }\r\n\r\n    return this._whenDefinedPromiseMap[name].promise;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-upgrade\r\n  upgrade(root) {\r\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(root)) {\r\n      if (candidate.nodeType === NODE_TYPE.ELEMENT_NODE) {\r\n        tryUpgradeElement(candidate);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: CustomElementRegistryImpl\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}