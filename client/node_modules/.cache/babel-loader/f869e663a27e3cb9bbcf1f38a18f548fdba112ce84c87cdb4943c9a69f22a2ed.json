{"ast":null,"code":"\"use strict\";\n\nconst {\n  findSlot,\n  assignSlot,\n  assignSlotable\n} = require(\"../helpers/shadow-dom\");\n\n// https://dom.spec.whatwg.org/#mixin-slotable\n// https://dom.spec.whatwg.org/#light-tree-slotables\nclass SlotableMixinImpl {\n  _initSlotableMixin() {\n    this._slotableName = \"\";\n  }\n  _attrModifiedSlotableMixin(name, value, oldValue) {\n    if (name === \"slot\") {\n      if (value === oldValue) {\n        return;\n      }\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n      if (value === null || value === \"\") {\n        this._slotableName = \"\";\n      } else {\n        this._slotableName = value;\n      }\n      if (this._assignedSlot) {\n        assignSlotable(this._assignedSlot);\n      }\n      assignSlot(this);\n    }\n  }\n  get assignedSlot() {\n    return findSlot(this, \"open\");\n  }\n}\nmodule.exports = {\n  implementation: SlotableMixinImpl\n};","map":{"version":3,"names":["findSlot","assignSlot","assignSlotable","require","SlotableMixinImpl","_initSlotableMixin","_slotableName","_attrModifiedSlotableMixin","name","value","oldValue","_assignedSlot","assignedSlot","module","exports","implementation"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/Slotable-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst { findSlot, assignSlot, assignSlotable } = require(\"../helpers/shadow-dom\");\r\n\r\n// https://dom.spec.whatwg.org/#mixin-slotable\r\n// https://dom.spec.whatwg.org/#light-tree-slotables\r\nclass SlotableMixinImpl {\r\n  _initSlotableMixin() {\r\n    this._slotableName = \"\";\r\n  }\r\n\r\n  _attrModifiedSlotableMixin(name, value, oldValue) {\r\n    if (name === \"slot\") {\r\n      if (value === oldValue) {\r\n        return;\r\n      }\r\n\r\n      if (value === null && oldValue === \"\") {\r\n        return;\r\n      }\r\n\r\n      if (value === \"\" && oldValue === null) {\r\n        return;\r\n      }\r\n\r\n      if (value === null || value === \"\") {\r\n        this._slotableName = \"\";\r\n      } else {\r\n        this._slotableName = value;\r\n      }\r\n\r\n\r\n      if (this._assignedSlot) {\r\n        assignSlotable(this._assignedSlot);\r\n      }\r\n\r\n      assignSlot(this);\r\n    }\r\n  }\r\n\r\n  get assignedSlot() {\r\n    return findSlot(this, \"open\");\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: SlotableMixinImpl\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,QAAQ;EAAEC,UAAU;EAAEC;AAAe,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAEjF;AACA;AACA,MAAMC,iBAAiB,CAAC;EACtBC,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACC,aAAa,GAAG,EAAE;EACzB;EAEAC,0BAA0BA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IAChD,IAAIF,IAAI,KAAK,MAAM,EAAE;MACnB,IAAIC,KAAK,KAAKC,QAAQ,EAAE;QACtB;MACF;MAEA,IAAID,KAAK,KAAK,IAAI,IAAIC,QAAQ,KAAK,EAAE,EAAE;QACrC;MACF;MAEA,IAAID,KAAK,KAAK,EAAE,IAAIC,QAAQ,KAAK,IAAI,EAAE;QACrC;MACF;MAEA,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE,EAAE;QAClC,IAAI,CAACH,aAAa,GAAG,EAAE;MACzB,CAAC,MAAM;QACL,IAAI,CAACA,aAAa,GAAGG,KAAK;MAC5B;MAGA,IAAI,IAAI,CAACE,aAAa,EAAE;QACtBT,cAAc,CAAC,IAAI,CAACS,aAAa,CAAC;MACpC;MAEAV,UAAU,CAAC,IAAI,CAAC;IAClB;EACF;EAEA,IAAIW,YAAYA,CAAA,EAAG;IACjB,OAAOZ,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;EAC/B;AACF;AAEAa,MAAM,CAACC,OAAO,GAAG;EACfC,cAAc,EAAEX;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}