{"ast":null,"code":"/* eslint-env browser */\n\n\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  parseURL,\n  serializeURL,\n  serializeURLOrigin\n} = require(\"whatwg-url\");\nconst {\n  setupForSimpleEventAccessors\n} = require(\"../helpers/create-event-accessor\");\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst Blob = require(\"../generated/Blob\");\nconst CloseEvent = require(\"../generated/CloseEvent\");\nconst MessageEvent = require(\"../generated/MessageEvent\");\nconst productions = {\n  // https://tools.ietf.org/html/rfc7230#section-3.2.6\n  token: /^[!#$%&'*+\\-.^_`|~\\dA-Za-z]+$/\n};\n\n// https://tools.ietf.org/html/rfc6455#section-4.3\n// See Sec-WebSocket-Protocol-Client, which is for the syntax of an entire header value. This function checks if a\n// single header conforms to the rules.\nfunction verifySecWebSocketProtocol(str) {\n  return productions.token.test(str);\n}\nconst openSockets = new WeakMap();\nclass WebSocketImpl extends EventTargetImpl {\n  constructor(constructorArgs, privateData) {\n    super([], privateData);\n    const {\n      window\n    } = privateData;\n    this._ownerDocument = idlUtils.implForWrapper(window._document);\n    const url = constructorArgs[0];\n    let protocols = constructorArgs[1] !== undefined ? constructorArgs[1] : [];\n    const urlRecord = parseURL(url);\n    if (urlRecord === null) {\n      throw DOMException.create(this._globalObject, [`The URL '${url}' is invalid.`, \"SyntaxError\"]);\n    }\n    if (urlRecord.scheme !== \"ws\" && urlRecord.scheme !== \"wss\") {\n      throw DOMException.create(this._globalObject, [`The URL's scheme must be either 'ws' or 'wss'. '${urlRecord.scheme}' is not allowed.`, \"SyntaxError\"]);\n    }\n    if (urlRecord.fragment !== null) {\n      throw DOMException.create(this._globalObject, [`The URL contains a fragment identifier ('${urlRecord.fragment}'). Fragment identifiers ` + \"are not allowed in WebSocket URLs.\", \"SyntaxError\"]);\n    }\n    if (typeof protocols === \"string\") {\n      protocols = [protocols];\n    }\n    const protocolSet = new Set();\n    for (const protocol of protocols) {\n      if (!verifySecWebSocketProtocol(protocol)) {\n        throw DOMException.create(this._globalObject, [`The subprotocol '${protocol}' is invalid.`, \"SyntaxError\"]);\n      }\n      const lowered = protocol.toLowerCase();\n      if (protocolSet.has(lowered)) {\n        throw DOMException.create(this._globalObject, [`The subprotocol '${protocol}' is duplicated.`, \"SyntaxError\"]);\n      }\n      protocolSet.add(lowered);\n    }\n    this._urlRecord = urlRecord;\n    this.url = serializeURL(urlRecord);\n    this._ws = new WebSocket(this.url, protocols);\n    this._ws.onopen = () => {\n      fireAnEvent(\"open\", this);\n    };\n    this._ws.onerror = () => {\n      fireAnEvent(\"error\", this);\n    };\n    this._ws.onclose = event => {\n      fireAnEvent(\"close\", this, CloseEvent, {\n        wasClean: event.wasClean,\n        code: event.code,\n        reason: event.reason\n      });\n    };\n    this._ws.onmessage = event => {\n      fireAnEvent(\"message\", this, MessageEvent, {\n        data: event.data,\n        origin: serializeURLOrigin(this._urlRecord)\n      });\n    };\n    let openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow === undefined) {\n      openSocketsForWindow = new Set();\n      openSockets.set(window._globalProxy, openSocketsForWindow);\n    }\n    openSocketsForWindow.add(this);\n  }\n\n  // https://html.spec.whatwg.org/multipage/web-sockets.html#make-disappear\n  _makeDisappear() {\n    this._eventListeners = Object.create(null);\n    this._ws.close(1001);\n  }\n  static cleanUpWindow(window) {\n    const openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow !== undefined) {\n      for (const ws of openSocketsForWindow) {\n        ws._makeDisappear();\n      }\n    }\n  }\n  get readyState() {\n    return this._ws.readyState;\n  }\n  get bufferedAmount() {\n    return this._ws.bufferedAmount;\n  }\n  get extensions() {\n    return this._ws.extensions;\n  }\n  get protocol() {\n    return this._ws.protocol;\n  }\n  close() {\n    let code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    let reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    if (code !== undefined && code !== 1000 && !(code >= 3000 && code <= 4999)) {\n      throw DOMException.create(this._globalObject, [`The code must be either 1000, or between 3000 and 4999. ${code} is neither.`, \"InvalidAccessError\"]);\n    }\n    if (reason !== undefined && Buffer.byteLength(reason, \"utf8\") > 123) {\n      throw DOMException.create(this._globalObject, [\"The message must not be greater than 123 bytes.\", \"SyntaxError\"]);\n    }\n    return this._ws.close(code, reason);\n  }\n  get binaryType() {\n    return this._ws.binaryType;\n  }\n  set binaryType(val) {\n    this._ws.binaryType = val;\n  }\n  send(data) {\n    if (Blob.isImpl(data)) {\n      data = data._buffer;\n    }\n    this._ws.send(data);\n  }\n}\nsetupForSimpleEventAccessors(WebSocketImpl.prototype, [\"open\", \"message\", \"error\", \"close\"]);\nexports.implementation = WebSocketImpl;","map":{"version":3,"names":["DOMException","require","parseURL","serializeURL","serializeURLOrigin","setupForSimpleEventAccessors","fireAnEvent","EventTargetImpl","implementation","idlUtils","Blob","CloseEvent","MessageEvent","productions","token","verifySecWebSocketProtocol","str","test","openSockets","WeakMap","WebSocketImpl","constructor","constructorArgs","privateData","window","_ownerDocument","implForWrapper","_document","url","protocols","undefined","urlRecord","create","_globalObject","scheme","fragment","protocolSet","Set","protocol","lowered","toLowerCase","has","add","_urlRecord","_ws","WebSocket","onopen","onerror","onclose","event","wasClean","code","reason","onmessage","data","origin","openSocketsForWindow","get","_globalProxy","set","_makeDisappear","_eventListeners","Object","close","cleanUpWindow","ws","readyState","bufferedAmount","extensions","arguments","length","Buffer","byteLength","binaryType","val","send","isImpl","_buffer","prototype","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/websockets/WebSocket-impl-browser.js"],"sourcesContent":["/* eslint-env browser */\r\n\r\n\"use strict\";\r\n\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\nconst { parseURL, serializeURL, serializeURLOrigin } = require(\"whatwg-url\");\r\n\r\nconst { setupForSimpleEventAccessors } = require(\"../helpers/create-event-accessor\");\r\nconst { fireAnEvent } = require(\"../helpers/events\");\r\n\r\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\r\n\r\nconst idlUtils = require(\"../generated/utils\");\r\nconst Blob = require(\"../generated/Blob\");\r\nconst CloseEvent = require(\"../generated/CloseEvent\");\r\nconst MessageEvent = require(\"../generated/MessageEvent\");\r\n\r\nconst productions = {\r\n  // https://tools.ietf.org/html/rfc7230#section-3.2.6\r\n  token: /^[!#$%&'*+\\-.^_`|~\\dA-Za-z]+$/\r\n};\r\n\r\n// https://tools.ietf.org/html/rfc6455#section-4.3\r\n// See Sec-WebSocket-Protocol-Client, which is for the syntax of an entire header value. This function checks if a\r\n// single header conforms to the rules.\r\nfunction verifySecWebSocketProtocol(str) {\r\n  return productions.token.test(str);\r\n}\r\n\r\nconst openSockets = new WeakMap();\r\n\r\nclass WebSocketImpl extends EventTargetImpl {\r\n  constructor(constructorArgs, privateData) {\r\n    super([], privateData);\r\n    const { window } = privateData;\r\n    this._ownerDocument = idlUtils.implForWrapper(window._document);\r\n\r\n    const url = constructorArgs[0];\r\n    let protocols = constructorArgs[1] !== undefined ? constructorArgs[1] : [];\r\n\r\n    const urlRecord = parseURL(url);\r\n    if (urlRecord === null) {\r\n      throw DOMException.create(this._globalObject, [`The URL '${url}' is invalid.`, \"SyntaxError\"]);\r\n    }\r\n    if (urlRecord.scheme !== \"ws\" && urlRecord.scheme !== \"wss\") {\r\n      throw DOMException.create(this._globalObject, [\r\n        `The URL's scheme must be either 'ws' or 'wss'. '${urlRecord.scheme}' is not allowed.`,\r\n        \"SyntaxError\"\r\n      ]);\r\n    }\r\n    if (urlRecord.fragment !== null) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `The URL contains a fragment identifier ('${urlRecord.fragment}'). Fragment identifiers ` +\r\n        \"are not allowed in WebSocket URLs.\",\r\n        \"SyntaxError\"\r\n      ]);\r\n    }\r\n\r\n    if (typeof protocols === \"string\") {\r\n      protocols = [protocols];\r\n    }\r\n    const protocolSet = new Set();\r\n    for (const protocol of protocols) {\r\n      if (!verifySecWebSocketProtocol(protocol)) {\r\n        throw DOMException.create(this._globalObject, [`The subprotocol '${protocol}' is invalid.`, \"SyntaxError\"]);\r\n      }\r\n      const lowered = protocol.toLowerCase();\r\n      if (protocolSet.has(lowered)) {\r\n        throw DOMException.create(this._globalObject, [\r\n          `The subprotocol '${protocol}' is duplicated.`,\r\n          \"SyntaxError\"\r\n        ]);\r\n      }\r\n      protocolSet.add(lowered);\r\n    }\r\n\r\n    this._urlRecord = urlRecord;\r\n    this.url = serializeURL(urlRecord);\r\n\r\n    this._ws = new WebSocket(this.url, protocols);\r\n\r\n    this._ws.onopen = () => {\r\n      fireAnEvent(\"open\", this);\r\n    };\r\n    this._ws.onerror = () => {\r\n      fireAnEvent(\"error\", this);\r\n    };\r\n    this._ws.onclose = event => {\r\n      fireAnEvent(\"close\", this, CloseEvent, {\r\n        wasClean: event.wasClean,\r\n        code: event.code,\r\n        reason: event.reason\r\n      });\r\n    };\r\n    this._ws.onmessage = event => {\r\n      fireAnEvent(\"message\", this, MessageEvent, {\r\n        data: event.data,\r\n        origin: serializeURLOrigin(this._urlRecord)\r\n      });\r\n    };\r\n\r\n    let openSocketsForWindow = openSockets.get(window._globalProxy);\r\n    if (openSocketsForWindow === undefined) {\r\n      openSocketsForWindow = new Set();\r\n      openSockets.set(window._globalProxy, openSocketsForWindow);\r\n    }\r\n    openSocketsForWindow.add(this);\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/web-sockets.html#make-disappear\r\n  _makeDisappear() {\r\n    this._eventListeners = Object.create(null);\r\n    this._ws.close(1001);\r\n  }\r\n\r\n  static cleanUpWindow(window) {\r\n    const openSocketsForWindow = openSockets.get(window._globalProxy);\r\n    if (openSocketsForWindow !== undefined) {\r\n      for (const ws of openSocketsForWindow) {\r\n        ws._makeDisappear();\r\n      }\r\n    }\r\n  }\r\n\r\n  get readyState() {\r\n    return this._ws.readyState;\r\n  }\r\n\r\n  get bufferedAmount() {\r\n    return this._ws.bufferedAmount;\r\n  }\r\n\r\n  get extensions() {\r\n    return this._ws.extensions;\r\n  }\r\n\r\n  get protocol() {\r\n    return this._ws.protocol;\r\n  }\r\n\r\n  close(code = undefined, reason = undefined) {\r\n    if (code !== undefined && code !== 1000 && !(code >= 3000 && code <= 4999)) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `The code must be either 1000, or between 3000 and 4999. ${code} is neither.`,\r\n        \"InvalidAccessError\"\r\n      ]);\r\n    }\r\n    if (reason !== undefined && Buffer.byteLength(reason, \"utf8\") > 123) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The message must not be greater than 123 bytes.\",\r\n        \"SyntaxError\"\r\n      ]);\r\n    }\r\n    return this._ws.close(code, reason);\r\n  }\r\n\r\n  get binaryType() {\r\n    return this._ws.binaryType;\r\n  }\r\n\r\n  set binaryType(val) {\r\n    this._ws.binaryType = val;\r\n  }\r\n\r\n  send(data) {\r\n    if (Blob.isImpl(data)) {\r\n      data = data._buffer;\r\n    }\r\n    this._ws.send(data);\r\n  }\r\n}\r\n\r\nsetupForSimpleEventAccessors(WebSocketImpl.prototype, [\"open\", \"message\", \"error\", \"close\"]);\r\n\r\nexports.implementation = WebSocketImpl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}