{"ast":null,"code":"\"use strict\";\n\nconst util = require(\"util\");\nconst idlUtils = require(\"../generated/utils\");\nconst ErrorEvent = require(\"../generated/ErrorEvent\");\nconst {\n  createAnEvent\n} = require(\"../helpers/events\");\nconst errorReportingMode = Symbol(\"error reporting mode\");\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#report-the-error\n// Omits script parameter and any check for muted errors.\n// Takes target as an EventTarget impl.\n// Takes error object, message, and location as params, unlike the spec.\n// Returns whether the event was handled or not.\nfunction reportAnError(line, col, target, errorObject, message, location) {\n  if (target[errorReportingMode]) {\n    return false;\n  }\n  target[errorReportingMode] = true;\n  if (typeof message !== \"string\") {\n    message = \"uncaught exception: \" + util.inspect(errorObject);\n  }\n  const event = createAnEvent(\"error\", target._globalObject, ErrorEvent, {\n    cancelable: true,\n    message,\n    filename: location,\n    lineno: line,\n    colno: col,\n    error: errorObject\n  });\n  try {\n    target._dispatch(event);\n  } finally {\n    target[errorReportingMode] = false;\n    return event.defaultPrevented;\n  }\n}\nmodule.exports = function reportException(window, error, filenameHint) {\n  // This function will give good results on real Error objects with stacks; poor ones otherwise\n\n  const stack = error && error.stack;\n  const lines = stack && stack.split(\"\\n\");\n\n  // Find the first line that matches; important for multi-line messages\n  let pieces;\n  if (lines) {\n    for (let i = 1; i < lines.length && !pieces; ++i) {\n      pieces = lines[i].match(/at (?:(.+)\\s+)?\\(?(?:(.+?):(\\d+):(\\d+)|([^)]+))\\)?/);\n    }\n  }\n  const fileName = pieces && pieces[2] || filenameHint || window._document.URL;\n  const lineNumber = pieces && parseInt(pieces[3]) || 0;\n  const columnNumber = pieces && parseInt(pieces[4]) || 0;\n  const windowImpl = idlUtils.implForWrapper(window);\n  const handled = reportAnError(lineNumber, columnNumber, windowImpl, error, error && error.message, fileName);\n  if (!handled) {\n    const errorString = shouldBeDisplayedAsError(error) ? `[${error.name}: ${error.message}]` : util.inspect(error);\n    const jsdomError = new Error(`Uncaught ${errorString}`);\n    jsdomError.detail = error;\n    jsdomError.type = \"unhandled exception\";\n    window._virtualConsole.emit(\"jsdomError\", jsdomError);\n  }\n};\nfunction shouldBeDisplayedAsError(x) {\n  return x && x.name && x.message !== undefined && x.stack;\n}","map":{"version":3,"names":["util","require","idlUtils","ErrorEvent","createAnEvent","errorReportingMode","Symbol","reportAnError","line","col","target","errorObject","message","location","inspect","event","_globalObject","cancelable","filename","lineno","colno","error","_dispatch","defaultPrevented","module","exports","reportException","window","filenameHint","stack","lines","split","pieces","i","length","match","fileName","_document","URL","lineNumber","parseInt","columnNumber","windowImpl","implForWrapper","handled","errorString","shouldBeDisplayedAsError","name","jsdomError","Error","detail","type","_virtualConsole","emit","x","undefined"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js"],"sourcesContent":["\"use strict\";\r\nconst util = require(\"util\");\r\nconst idlUtils = require(\"../generated/utils\");\r\nconst ErrorEvent = require(\"../generated/ErrorEvent\");\r\nconst { createAnEvent } = require(\"../helpers/events\");\r\n\r\nconst errorReportingMode = Symbol(\"error reporting mode\");\r\n\r\n// https://html.spec.whatwg.org/multipage/webappapis.html#report-the-error\r\n// Omits script parameter and any check for muted errors.\r\n// Takes target as an EventTarget impl.\r\n// Takes error object, message, and location as params, unlike the spec.\r\n// Returns whether the event was handled or not.\r\nfunction reportAnError(line, col, target, errorObject, message, location) {\r\n  if (target[errorReportingMode]) {\r\n    return false;\r\n  }\r\n\r\n  target[errorReportingMode] = true;\r\n\r\n  if (typeof message !== \"string\") {\r\n    message = \"uncaught exception: \" + util.inspect(errorObject);\r\n  }\r\n\r\n  const event = createAnEvent(\"error\", target._globalObject, ErrorEvent, {\r\n    cancelable: true,\r\n    message,\r\n    filename: location,\r\n    lineno: line,\r\n    colno: col,\r\n    error: errorObject\r\n  });\r\n\r\n  try {\r\n    target._dispatch(event);\r\n  } finally {\r\n    target[errorReportingMode] = false;\r\n    return event.defaultPrevented;\r\n  }\r\n}\r\n\r\nmodule.exports = function reportException(window, error, filenameHint) {\r\n  // This function will give good results on real Error objects with stacks; poor ones otherwise\r\n\r\n  const stack = error && error.stack;\r\n  const lines = stack && stack.split(\"\\n\");\r\n\r\n  // Find the first line that matches; important for multi-line messages\r\n  let pieces;\r\n  if (lines) {\r\n    for (let i = 1; i < lines.length && !pieces; ++i) {\r\n      pieces = lines[i].match(/at (?:(.+)\\s+)?\\(?(?:(.+?):(\\d+):(\\d+)|([^)]+))\\)?/);\r\n    }\r\n  }\r\n\r\n  const fileName = (pieces && pieces[2]) || filenameHint || window._document.URL;\r\n  const lineNumber = (pieces && parseInt(pieces[3])) || 0;\r\n  const columnNumber = (pieces && parseInt(pieces[4])) || 0;\r\n\r\n  const windowImpl = idlUtils.implForWrapper(window);\r\n\r\n  const handled = reportAnError(lineNumber, columnNumber, windowImpl, error, error && error.message, fileName);\r\n\r\n  if (!handled) {\r\n    const errorString = shouldBeDisplayedAsError(error) ? `[${error.name}: ${error.message}]` : util.inspect(error);\r\n    const jsdomError = new Error(`Uncaught ${errorString}`);\r\n    jsdomError.detail = error;\r\n    jsdomError.type = \"unhandled exception\";\r\n\r\n    window._virtualConsole.emit(\"jsdomError\", jsdomError);\r\n  }\r\n};\r\n\r\nfunction shouldBeDisplayedAsError(x) {\r\n  return x && x.name && x.message !== undefined && x.stack;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}