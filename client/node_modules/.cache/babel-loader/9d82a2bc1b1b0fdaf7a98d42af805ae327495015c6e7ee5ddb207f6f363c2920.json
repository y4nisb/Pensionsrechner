{"ast":null,"code":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  XML_NS,\n  XMLNS_NS\n} = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = function (globalObject, name) {\n  const result = xnv.name(name);\n  if (!result.success) {\n    throw DOMException.create(globalObject, [`\"${name}\" did not match the Name production: ${result.error}`, \"InvalidCharacterError\"]);\n  }\n};\nexports.qname = function (globalObject, qname) {\n  exports.name(globalObject, qname);\n  const result = xnv.qname(qname);\n  if (!result.success) {\n    throw DOMException.create(globalObject, [`\"${qname}\" did not match the QName production: ${result.error}`, \"InvalidCharacterError\"]);\n  }\n};\nexports.validateAndExtract = function (globalObject, namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n  exports.qname(globalObject, qualifiedName);\n  let prefix = null;\n  let localName = qualifiedName;\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\"A namespace was given but a prefix was also extracted from the qualifiedName\", \"NamespaceError\"]);\n  }\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\", \"NamespaceError\"]);\n  }\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\", \"NamespaceError\"]);\n  }\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\", \"NamespaceError\"]);\n  }\n  return {\n    namespace,\n    prefix,\n    localName\n  };\n};","map":{"version":3,"names":["xnv","require","DOMException","XML_NS","XMLNS_NS","exports","name","globalObject","result","success","create","error","qname","validateAndExtract","namespace","qualifiedName","prefix","localName","colonIndex","indexOf","substring"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js"],"sourcesContent":["\"use strict\";\r\nconst xnv = require(\"xml-name-validator\");\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\nconst { XML_NS, XMLNS_NS } = require(\"../helpers/namespaces\");\r\n\r\n// https://dom.spec.whatwg.org/#validate\r\n\r\nexports.name = function (globalObject, name) {\r\n  const result = xnv.name(name);\r\n  if (!result.success) {\r\n    throw DOMException.create(globalObject, [\r\n      `\"${name}\" did not match the Name production: ${result.error}`,\r\n      \"InvalidCharacterError\"\r\n    ]);\r\n  }\r\n};\r\n\r\nexports.qname = function (globalObject, qname) {\r\n  exports.name(globalObject, qname);\r\n\r\n  const result = xnv.qname(qname);\r\n  if (!result.success) {\r\n    throw DOMException.create(globalObject, [\r\n      `\"${qname}\" did not match the QName production: ${result.error}`,\r\n      \"InvalidCharacterError\"\r\n    ]);\r\n  }\r\n};\r\n\r\nexports.validateAndExtract = function (globalObject, namespace, qualifiedName) {\r\n  if (namespace === \"\") {\r\n    namespace = null;\r\n  }\r\n\r\n  exports.qname(globalObject, qualifiedName);\r\n\r\n  let prefix = null;\r\n  let localName = qualifiedName;\r\n\r\n  const colonIndex = qualifiedName.indexOf(\":\");\r\n  if (colonIndex !== -1) {\r\n    prefix = qualifiedName.substring(0, colonIndex);\r\n    localName = qualifiedName.substring(colonIndex + 1);\r\n  }\r\n\r\n  if (prefix !== null && namespace === null) {\r\n    throw DOMException.create(globalObject, [\r\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\",\r\n      \"NamespaceError\"\r\n    ]);\r\n  }\r\n\r\n  if (prefix === \"xml\" && namespace !== XML_NS) {\r\n    throw DOMException.create(globalObject, [\r\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\",\r\n      \"NamespaceError\"\r\n    ]);\r\n  }\r\n\r\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\r\n    throw DOMException.create(globalObject, [\r\n      \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\",\r\n      \"NamespaceError\"\r\n    ]);\r\n  }\r\n\r\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\r\n    throw DOMException.create(globalObject, [\r\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\",\r\n      \"NamespaceError\"\r\n    ]);\r\n  }\r\n\r\n  return { namespace, prefix, localName };\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACzC,MAAMC,YAAY,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAC9D,MAAM;EAAEE,MAAM;EAAEC;AAAS,CAAC,GAAGH,OAAO,CAAC,uBAAuB,CAAC;;AAE7D;;AAEAI,OAAO,CAACC,IAAI,GAAG,UAAUC,YAAY,EAAED,IAAI,EAAE;EAC3C,MAAME,MAAM,GAAGR,GAAG,CAACM,IAAI,CAACA,IAAI,CAAC;EAC7B,IAAI,CAACE,MAAM,CAACC,OAAO,EAAE;IACnB,MAAMP,YAAY,CAACQ,MAAM,CAACH,YAAY,EAAE,CACrC,IAAGD,IAAK,wCAAuCE,MAAM,CAACG,KAAM,EAAC,EAC9D,uBAAuB,CACxB,CAAC;EACJ;AACF,CAAC;AAEDN,OAAO,CAACO,KAAK,GAAG,UAAUL,YAAY,EAAEK,KAAK,EAAE;EAC7CP,OAAO,CAACC,IAAI,CAACC,YAAY,EAAEK,KAAK,CAAC;EAEjC,MAAMJ,MAAM,GAAGR,GAAG,CAACY,KAAK,CAACA,KAAK,CAAC;EAC/B,IAAI,CAACJ,MAAM,CAACC,OAAO,EAAE;IACnB,MAAMP,YAAY,CAACQ,MAAM,CAACH,YAAY,EAAE,CACrC,IAAGK,KAAM,yCAAwCJ,MAAM,CAACG,KAAM,EAAC,EAChE,uBAAuB,CACxB,CAAC;EACJ;AACF,CAAC;AAEDN,OAAO,CAACQ,kBAAkB,GAAG,UAAUN,YAAY,EAAEO,SAAS,EAAEC,aAAa,EAAE;EAC7E,IAAID,SAAS,KAAK,EAAE,EAAE;IACpBA,SAAS,GAAG,IAAI;EAClB;EAEAT,OAAO,CAACO,KAAK,CAACL,YAAY,EAAEQ,aAAa,CAAC;EAE1C,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,SAAS,GAAGF,aAAa;EAE7B,MAAMG,UAAU,GAAGH,aAAa,CAACI,OAAO,CAAC,GAAG,CAAC;EAC7C,IAAID,UAAU,KAAK,CAAC,CAAC,EAAE;IACrBF,MAAM,GAAGD,aAAa,CAACK,SAAS,CAAC,CAAC,EAAEF,UAAU,CAAC;IAC/CD,SAAS,GAAGF,aAAa,CAACK,SAAS,CAACF,UAAU,GAAG,CAAC,CAAC;EACrD;EAEA,IAAIF,MAAM,KAAK,IAAI,IAAIF,SAAS,KAAK,IAAI,EAAE;IACzC,MAAMZ,YAAY,CAACQ,MAAM,CAACH,YAAY,EAAE,CACtC,8EAA8E,EAC9E,gBAAgB,CACjB,CAAC;EACJ;EAEA,IAAIS,MAAM,KAAK,KAAK,IAAIF,SAAS,KAAKX,MAAM,EAAE;IAC5C,MAAMD,YAAY,CAACQ,MAAM,CAACH,YAAY,EAAE,CACtC,2EAA2E,EAC3E,gBAAgB,CACjB,CAAC;EACJ;EAEA,IAAI,CAACQ,aAAa,KAAK,OAAO,IAAIC,MAAM,KAAK,OAAO,KAAKF,SAAS,KAAKV,QAAQ,EAAE;IAC/E,MAAMF,YAAY,CAACQ,MAAM,CAACH,YAAY,EAAE,CACtC,gGAAgG,EAChG,gBAAgB,CACjB,CAAC;EACJ;EAEA,IAAIO,SAAS,KAAKV,QAAQ,IAAIW,aAAa,KAAK,OAAO,IAAIC,MAAM,KAAK,OAAO,EAAE;IAC7E,MAAMd,YAAY,CAACQ,MAAM,CAACH,YAAY,EAAE,CACtC,sFAAsF,EACtF,gBAAgB,CACjB,CAAC;EACJ;EAEA,OAAO;IAAEO,SAAS;IAAEE,MAAM;IAAEC;EAAU,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}