{"ast":null,"code":"/*!\r\n * Copyright (c) 2018, Salesforce.com, Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n * this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n * this list of conditions and the following disclaimer in the documentation\r\n * and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\r\n * be used to endorse or promote products derived from this software without\r\n * specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\n\"use strict\";\n\nconst psl = require(\"psl\");\n\n// RFC 6761\nconst SPECIAL_USE_DOMAINS = [\"local\", \"example\", \"invalid\", \"localhost\", \"test\"];\nconst SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\nfunction getPublicSuffix(domain) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const domainParts = domain.split(\".\");\n  const topLevelDomain = domainParts[domainParts.length - 1];\n  const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n  const ignoreError = !!options.ignoreError;\n  if (allowSpecialUseDomain && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    if (domainParts.length > 1) {\n      const secondLevelDomain = domainParts[domainParts.length - 2];\n      // In aforementioned example, the eTLD/pubSuf will be apple.localhost\n      return `${secondLevelDomain}.${topLevelDomain}`;\n    } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\n      // For a single word special use domain, e.g. 'localhost' or 'invalid', per RFC 6761,\n      // \"Application software MAY recognize {localhost/invalid} names as special, or\n      // MAY pass them to name resolution APIs as they would for other domain names.\"\n      return `${topLevelDomain}`;\n    }\n  }\n  if (!ignoreError && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    throw new Error(`Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`);\n  }\n  return psl.get(domain);\n}\nexports.getPublicSuffix = getPublicSuffix;","map":{"version":3,"names":["psl","require","SPECIAL_USE_DOMAINS","SPECIAL_TREATMENT_DOMAINS","getPublicSuffix","domain","options","arguments","length","undefined","domainParts","split","topLevelDomain","allowSpecialUseDomain","ignoreError","includes","secondLevelDomain","Error","get","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/tough-cookie/lib/pubsuffix-psl.js"],"sourcesContent":["/*!\r\n * Copyright (c) 2018, Salesforce.com, Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n * this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n * this list of conditions and the following disclaimer in the documentation\r\n * and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\r\n * be used to endorse or promote products derived from this software without\r\n * specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\"use strict\";\r\nconst psl = require(\"psl\");\r\n\r\n// RFC 6761\r\nconst SPECIAL_USE_DOMAINS = [\r\n  \"local\",\r\n  \"example\",\r\n  \"invalid\",\r\n  \"localhost\",\r\n  \"test\"\r\n];\r\n\r\nconst SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\r\n\r\nfunction getPublicSuffix(domain, options = {}) {\r\n  const domainParts = domain.split(\".\");\r\n  const topLevelDomain = domainParts[domainParts.length - 1];\r\n  const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\r\n  const ignoreError = !!options.ignoreError;\r\n\r\n  if (allowSpecialUseDomain && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\r\n    if (domainParts.length > 1) {\r\n      const secondLevelDomain = domainParts[domainParts.length - 2];\r\n      // In aforementioned example, the eTLD/pubSuf will be apple.localhost\r\n      return `${secondLevelDomain}.${topLevelDomain}`;\r\n    } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\r\n      // For a single word special use domain, e.g. 'localhost' or 'invalid', per RFC 6761,\r\n      // \"Application software MAY recognize {localhost/invalid} names as special, or\r\n      // MAY pass them to name resolution APIs as they would for other domain names.\"\r\n      return `${topLevelDomain}`;\r\n    }\r\n  }\r\n\r\n  if (!ignoreError && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\r\n    throw new Error(\r\n      `Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`\r\n    );\r\n  }\r\n\r\n  return psl.get(domain);\r\n}\r\n\r\nexports.getPublicSuffix = getPublicSuffix;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;;AAE1B;AACA,MAAMC,mBAAmB,GAAG,CAC1B,OAAO,EACP,SAAS,EACT,SAAS,EACT,WAAW,EACX,MAAM,CACP;AAED,MAAMC,yBAAyB,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC;AAE1D,SAASC,eAAeA,CAACC,MAAM,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC3C,MAAMG,WAAW,GAAGL,MAAM,CAACM,KAAK,CAAC,GAAG,CAAC;EACrC,MAAMC,cAAc,GAAGF,WAAW,CAACA,WAAW,CAACF,MAAM,GAAG,CAAC,CAAC;EAC1D,MAAMK,qBAAqB,GAAG,CAAC,CAACP,OAAO,CAACO,qBAAqB;EAC7D,MAAMC,WAAW,GAAG,CAAC,CAACR,OAAO,CAACQ,WAAW;EAEzC,IAAID,qBAAqB,IAAIX,mBAAmB,CAACa,QAAQ,CAACH,cAAc,CAAC,EAAE;IACzE,IAAIF,WAAW,CAACF,MAAM,GAAG,CAAC,EAAE;MAC1B,MAAMQ,iBAAiB,GAAGN,WAAW,CAACA,WAAW,CAACF,MAAM,GAAG,CAAC,CAAC;MAC7D;MACA,OAAQ,GAAEQ,iBAAkB,IAAGJ,cAAe,EAAC;IACjD,CAAC,MAAM,IAAIT,yBAAyB,CAACY,QAAQ,CAACH,cAAc,CAAC,EAAE;MAC7D;MACA;MACA;MACA,OAAQ,GAAEA,cAAe,EAAC;IAC5B;EACF;EAEA,IAAI,CAACE,WAAW,IAAIZ,mBAAmB,CAACa,QAAQ,CAACH,cAAc,CAAC,EAAE;IAChE,MAAM,IAAIK,KAAK,CACZ,+CAA8CL,cAAe,0IAAyI,CACxM;EACH;EAEA,OAAOZ,GAAG,CAACkB,GAAG,CAACb,MAAM,CAAC;AACxB;AAEAc,OAAO,CAACf,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}