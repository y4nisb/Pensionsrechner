{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\n\nvar util = require('./util');\n\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {\n    generatedLine: -1,\n    generatedColumn: 0\n  };\n}\n\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\nMappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\n  this._array.forEach(aCallback, aThisArg);\n};\n\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\nexports.MappingList = MappingList;","map":{"version":3,"names":["util","require","generatedPositionAfter","mappingA","mappingB","lineA","generatedLine","lineB","columnA","generatedColumn","columnB","compareByGeneratedPositionsInflated","MappingList","_array","_sorted","_last","prototype","unsortedForEach","MappingList_forEach","aCallback","aThisArg","forEach","add","MappingList_add","aMapping","push","toArray","MappingList_toArray","sort","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/escodegen/node_modules/source-map/lib/mapping-list.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util = require('./util');\r\n\r\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\r\nfunction generatedPositionAfter(mappingA, mappingB) {\r\n  // Optimized for most common case\r\n  var lineA = mappingA.generatedLine;\r\n  var lineB = mappingB.generatedLine;\r\n  var columnA = mappingA.generatedColumn;\r\n  var columnB = mappingB.generatedColumn;\r\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\r\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n}\r\n\r\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\r\nfunction MappingList() {\r\n  this._array = [];\r\n  this._sorted = true;\r\n  // Serves as infimum\r\n  this._last = {generatedLine: -1, generatedColumn: 0};\r\n}\r\n\r\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\r\nMappingList.prototype.unsortedForEach =\r\n  function MappingList_forEach(aCallback, aThisArg) {\r\n    this._array.forEach(aCallback, aThisArg);\r\n  };\r\n\r\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\r\nMappingList.prototype.add = function MappingList_add(aMapping) {\r\n  if (generatedPositionAfter(this._last, aMapping)) {\r\n    this._last = aMapping;\r\n    this._array.push(aMapping);\r\n  } else {\r\n    this._sorted = false;\r\n    this._array.push(aMapping);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\r\nMappingList.prototype.toArray = function MappingList_toArray() {\r\n  if (!this._sorted) {\r\n    this._array.sort(util.compareByGeneratedPositionsInflated);\r\n    this._sorted = true;\r\n  }\r\n  return this._array;\r\n};\r\n\r\nexports.MappingList = MappingList;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE5B;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAClD;EACA,IAAIC,KAAK,GAAGF,QAAQ,CAACG,aAAa;EAClC,IAAIC,KAAK,GAAGH,QAAQ,CAACE,aAAa;EAClC,IAAIE,OAAO,GAAGL,QAAQ,CAACM,eAAe;EACtC,IAAIC,OAAO,GAAGN,QAAQ,CAACK,eAAe;EACtC,OAAOF,KAAK,GAAGF,KAAK,IAAIE,KAAK,IAAIF,KAAK,IAAIK,OAAO,IAAIF,OAAO,IACrDR,IAAI,CAACW,mCAAmC,CAACR,QAAQ,EAAEC,QAAQ,CAAC,IAAI,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASQ,WAAWA,CAAA,EAAG;EACrB,IAAI,CAACC,MAAM,GAAG,EAAE;EAChB,IAAI,CAACC,OAAO,GAAG,IAAI;EACnB;EACA,IAAI,CAACC,KAAK,GAAG;IAACT,aAAa,EAAE,CAAC,CAAC;IAAEG,eAAe,EAAE;EAAC,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAG,WAAW,CAACI,SAAS,CAACC,eAAe,GACnC,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAChD,IAAI,CAACP,MAAM,CAACQ,OAAO,CAACF,SAAS,EAAEC,QAAQ,CAAC;AAC1C,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACAR,WAAW,CAACI,SAAS,CAACM,GAAG,GAAG,SAASC,eAAeA,CAACC,QAAQ,EAAE;EAC7D,IAAItB,sBAAsB,CAAC,IAAI,CAACa,KAAK,EAAES,QAAQ,CAAC,EAAE;IAChD,IAAI,CAACT,KAAK,GAAGS,QAAQ;IACrB,IAAI,CAACX,MAAM,CAACY,IAAI,CAACD,QAAQ,CAAC;EAC5B,CAAC,MAAM;IACL,IAAI,CAACV,OAAO,GAAG,KAAK;IACpB,IAAI,CAACD,MAAM,CAACY,IAAI,CAACD,QAAQ,CAAC;EAC5B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,WAAW,CAACI,SAAS,CAACU,OAAO,GAAG,SAASC,mBAAmBA,CAAA,EAAG;EAC7D,IAAI,CAAC,IAAI,CAACb,OAAO,EAAE;IACjB,IAAI,CAACD,MAAM,CAACe,IAAI,CAAC5B,IAAI,CAACW,mCAAmC,CAAC;IAC1D,IAAI,CAACG,OAAO,GAAG,IAAI;EACrB;EACA,OAAO,IAAI,CAACD,MAAM;AACpB,CAAC;AAEDgB,OAAO,CAACjB,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}