{"ast":null,"code":"'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n  constructor(preprocessor, opts) {\n    super(preprocessor, opts);\n    this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n    this.lastErrOffset = -1;\n  }\n  _reportError(code) {\n    //NOTE: avoid reporting error twice on advance/retreat\n    if (this.lastErrOffset !== this.posTracker.offset) {\n      this.lastErrOffset = this.posTracker.offset;\n      super._reportError(code);\n    }\n  }\n}\nmodule.exports = ErrorReportingPreprocessorMixin;","map":{"version":3,"names":["ErrorReportingMixinBase","require","PositionTrackingPreprocessorMixin","Mixin","ErrorReportingPreprocessorMixin","constructor","preprocessor","opts","posTracker","install","lastErrOffset","_reportError","code","offset","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"],"sourcesContent":["'use strict';\r\n\r\nconst ErrorReportingMixinBase = require('./mixin-base');\r\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\r\nconst Mixin = require('../../utils/mixin');\r\n\r\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\r\n    constructor(preprocessor, opts) {\r\n        super(preprocessor, opts);\r\n\r\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\r\n        this.lastErrOffset = -1;\r\n    }\r\n\r\n    _reportError(code) {\r\n        //NOTE: avoid reporting error twice on advance/retreat\r\n        if (this.lastErrOffset !== this.posTracker.offset) {\r\n            this.lastErrOffset = this.posTracker.offset;\r\n            super._reportError(code);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ErrorReportingPreprocessorMixin;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvD,MAAMC,iCAAiC,GAAGD,OAAO,CAAC,yCAAyC,CAAC;AAC5F,MAAME,KAAK,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE1C,MAAMG,+BAA+B,SAASJ,uBAAuB,CAAC;EAClEK,WAAWA,CAACC,YAAY,EAAEC,IAAI,EAAE;IAC5B,KAAK,CAACD,YAAY,EAAEC,IAAI,CAAC;IAEzB,IAAI,CAACC,UAAU,GAAGL,KAAK,CAACM,OAAO,CAACH,YAAY,EAAEJ,iCAAiC,CAAC;IAChF,IAAI,CAACQ,aAAa,GAAG,CAAC,CAAC;EAC3B;EAEAC,YAAYA,CAACC,IAAI,EAAE;IACf;IACA,IAAI,IAAI,CAACF,aAAa,KAAK,IAAI,CAACF,UAAU,CAACK,MAAM,EAAE;MAC/C,IAAI,CAACH,aAAa,GAAG,IAAI,CAACF,UAAU,CAACK,MAAM;MAC3C,KAAK,CAACF,YAAY,CAACC,IAAI,CAAC;IAC5B;EACJ;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAGX,+BAA+B"},"metadata":{},"sourceType":"script","externalDependencies":[]}