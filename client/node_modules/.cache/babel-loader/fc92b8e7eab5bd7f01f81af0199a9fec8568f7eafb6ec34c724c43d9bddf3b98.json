{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  DOCUMENT_POSITION_CONTAINS,\n  DOCUMENT_POSITION_CONTAINED_BY\n} = require(\"../node-document-position\");\nconst Element = require(\"../generated/Element\");\nconst Node = require(\"../generated/Node\");\nconst HTMLCollectionImpl = require(\"./HTMLCollection-impl\").implementation;\nexports.implementation = class HTMLOptionsCollectionImpl extends HTMLCollectionImpl {\n  // inherits supported property indices\n  get length() {\n    this._update();\n    return this._list.length;\n  }\n  set length(value) {\n    this._update();\n    if (value > this._list.length) {\n      const doc = this._element._ownerDocument;\n      for (let i = this._list.length; i < value; i++) {\n        const el = doc.createElement(\"option\");\n        this._element.appendChild(el);\n      }\n    } else if (value < this._list.length) {\n      for (let i = this._list.length - 1; i >= value; i--) {\n        const el = this._list[i];\n        this._element.removeChild(el);\n      }\n    }\n  }\n  get [idlUtils.supportedPropertyNames]() {\n    this._update();\n    const result = new Set();\n    for (const element of this._list) {\n      result.add(element.getAttributeNS(null, \"id\"));\n      result.add(element.getAttributeNS(null, \"name\"));\n    }\n    return result;\n  }\n  [idlUtils.indexedSetNew](index, value) {\n    if (value === null) {\n      this.remove(index);\n      return;\n    }\n    this._update();\n    const {\n      length\n    } = this._list;\n    const n = index - length;\n    if (n > 0) {\n      const doc = this._element._ownerDocument;\n      const frag = doc.createDocumentFragment();\n      // Spec says n - 1, but n seems to be the right number here.\n      for (let i = 0; i < n; i++) {\n        const el = doc.createElement(\"option\");\n        frag.appendChild(el);\n      }\n      this._element._append(frag);\n    }\n    if (n >= 0) {\n      this._element._append(value);\n    } else {\n      this._element._replace(value, this._list[index]);\n    }\n  }\n  [idlUtils.indexedSetExisting](index, value) {\n    return this[idlUtils.indexedSetNew](index, value);\n  }\n  add(element, before) {\n    if (this._element.compareDocumentPosition(element) & DOCUMENT_POSITION_CONTAINS) {\n      throw DOMException.create(this._globalObject, [\"The operation would yield an incorrect node tree.\", \"HierarchyRequestError\"]);\n    }\n    if (Element.isImpl(before) && !(this._element.compareDocumentPosition(before) & DOCUMENT_POSITION_CONTAINED_BY)) {\n      throw DOMException.create(this._globalObject, [\"The object can not be found here.\", \"NotFoundError\"]);\n    }\n    if (element === before) {\n      return;\n    }\n    let reference = null;\n    if (Node.isImpl(before)) {\n      reference = before;\n    } else if (typeof before === \"number\") {\n      this._update();\n      reference = this._list[before] || null;\n    }\n    const parent = reference !== null ? reference.parentNode : this._element;\n    parent._preInsert(element, reference);\n  }\n  remove(index) {\n    this._update();\n    if (this._list.length === 0) {\n      return;\n    }\n    if (index < 0 || index >= this._list.length) {\n      return;\n    }\n    const element = this._list[index];\n    element.parentNode._remove(element);\n  }\n  get selectedIndex() {\n    return this._element.selectedIndex;\n  }\n  set selectedIndex(value) {\n    this._element.selectedIndex = value;\n  }\n};","map":{"version":3,"names":["idlUtils","require","DOMException","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_CONTAINED_BY","Element","Node","HTMLCollectionImpl","implementation","exports","HTMLOptionsCollectionImpl","length","_update","_list","value","doc","_element","_ownerDocument","i","el","createElement","appendChild","removeChild","supportedPropertyNames","result","Set","element","add","getAttributeNS","indexedSetNew","index","remove","n","frag","createDocumentFragment","_append","_replace","indexedSetExisting","before","compareDocumentPosition","create","_globalObject","isImpl","reference","parent","parentNode","_preInsert","_remove","selectedIndex"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptionsCollection-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst idlUtils = require(\"../generated/utils.js\");\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\nconst { DOCUMENT_POSITION_CONTAINS, DOCUMENT_POSITION_CONTAINED_BY } = require(\"../node-document-position\");\r\nconst Element = require(\"../generated/Element\");\r\nconst Node = require(\"../generated/Node\");\r\nconst HTMLCollectionImpl = require(\"./HTMLCollection-impl\").implementation;\r\n\r\nexports.implementation = class HTMLOptionsCollectionImpl extends HTMLCollectionImpl {\r\n  // inherits supported property indices\r\n  get length() {\r\n    this._update();\r\n    return this._list.length;\r\n  }\r\n  set length(value) {\r\n    this._update();\r\n    if (value > this._list.length) {\r\n      const doc = this._element._ownerDocument;\r\n      for (let i = this._list.length; i < value; i++) {\r\n        const el = doc.createElement(\"option\");\r\n        this._element.appendChild(el);\r\n      }\r\n    } else if (value < this._list.length) {\r\n      for (let i = this._list.length - 1; i >= value; i--) {\r\n        const el = this._list[i];\r\n        this._element.removeChild(el);\r\n      }\r\n    }\r\n  }\r\n\r\n  get [idlUtils.supportedPropertyNames]() {\r\n    this._update();\r\n    const result = new Set();\r\n    for (const element of this._list) {\r\n      result.add(element.getAttributeNS(null, \"id\"));\r\n      result.add(element.getAttributeNS(null, \"name\"));\r\n    }\r\n    return result;\r\n  }\r\n  [idlUtils.indexedSetNew](index, value) {\r\n    if (value === null) {\r\n      this.remove(index);\r\n      return;\r\n    }\r\n    this._update();\r\n    const { length } = this._list;\r\n    const n = index - length;\r\n    if (n > 0) {\r\n      const doc = this._element._ownerDocument;\r\n      const frag = doc.createDocumentFragment();\r\n      // Spec says n - 1, but n seems to be the right number here.\r\n      for (let i = 0; i < n; i++) {\r\n        const el = doc.createElement(\"option\");\r\n        frag.appendChild(el);\r\n      }\r\n      this._element._append(frag);\r\n    }\r\n    if (n >= 0) {\r\n      this._element._append(value);\r\n    } else {\r\n      this._element._replace(value, this._list[index]);\r\n    }\r\n  }\r\n  [idlUtils.indexedSetExisting](index, value) {\r\n    return this[idlUtils.indexedSetNew](index, value);\r\n  }\r\n  add(element, before) {\r\n    if (this._element.compareDocumentPosition(element) & DOCUMENT_POSITION_CONTAINS) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The operation would yield an incorrect node tree.\",\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n    if (Element.isImpl(before) && !(this._element.compareDocumentPosition(before) & DOCUMENT_POSITION_CONTAINED_BY)) {\r\n      throw DOMException.create(this._globalObject, [\"The object can not be found here.\", \"NotFoundError\"]);\r\n    }\r\n    if (element === before) {\r\n      return;\r\n    }\r\n\r\n    let reference = null;\r\n    if (Node.isImpl(before)) {\r\n      reference = before;\r\n    } else if (typeof before === \"number\") {\r\n      this._update();\r\n      reference = this._list[before] || null;\r\n    }\r\n\r\n    const parent = reference !== null ? reference.parentNode : this._element;\r\n    parent._preInsert(element, reference);\r\n  }\r\n  remove(index) {\r\n    this._update();\r\n    if (this._list.length === 0) {\r\n      return;\r\n    }\r\n    if (index < 0 || index >= this._list.length) {\r\n      return;\r\n    }\r\n    const element = this._list[index];\r\n    element.parentNode._remove(element);\r\n  }\r\n  get selectedIndex() {\r\n    return this._element.selectedIndex;\r\n  }\r\n  set selectedIndex(value) {\r\n    this._element.selectedIndex = value;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}