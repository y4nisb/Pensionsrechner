{"ast":null,"code":"\"use strict\";\n\nconst enumerationValues = new Set([\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"]);\nexports.enumerationValues = enumerationValues;\nexports.convert = function convert(value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const string = `${value}`;\n  if (!enumerationValues.has(string)) {\n    throw new TypeError(`${context} '${string}' is not a valid enumeration value for TextTrackKind`);\n  }\n  return string;\n};","map":{"version":3,"names":["enumerationValues","Set","exports","convert","value","context","arguments","length","undefined","string","has","TypeError"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/generated/TextTrackKind.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst enumerationValues = new Set([\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"]);\r\nexports.enumerationValues = enumerationValues;\r\n\r\nexports.convert = function convert(value, { context = \"The provided value\" } = {}) {\r\n  const string = `${value}`;\r\n  if (!enumerationValues.has(string)) {\r\n    throw new TypeError(`${context} '${string}' is not a valid enumeration value for TextTrackKind`);\r\n  }\r\n  return string;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACpGC,OAAO,CAACF,iBAAiB,GAAGA,iBAAiB;AAE7CE,OAAO,CAACC,OAAO,GAAG,SAASA,OAAOA,CAACC,KAAK,EAA2C;EAAA,IAAzC;IAAEC,OAAO,GAAG;EAAqB,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC/E,MAAMG,MAAM,GAAI,GAAEL,KAAM,EAAC;EACzB,IAAI,CAACJ,iBAAiB,CAACU,GAAG,CAACD,MAAM,CAAC,EAAE;IAClC,MAAM,IAAIE,SAAS,CAAE,GAAEN,OAAQ,KAAII,MAAO,sDAAqD,CAAC;EAClG;EACA,OAAOA,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}