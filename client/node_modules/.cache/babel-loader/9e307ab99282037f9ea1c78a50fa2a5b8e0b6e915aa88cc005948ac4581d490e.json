{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst MouseEvent = require(\"../generated/MouseEvent\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst {\n  isLabelable,\n  isDisabled,\n  isInteractiveContent\n} = require(\"../helpers/form-controls\");\nconst {\n  isInclusiveAncestor\n} = require(\"../helpers/node\");\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\nfunction sendClickToAssociatedNode(node) {\n  fireAnEvent(\"click\", node, MouseEvent, {\n    bubbles: true,\n    cancelable: true,\n    view: node.ownerDocument ? node.ownerDocument.defaultView : null,\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    button: 0,\n    detail: 1,\n    relatedTarget: null\n  });\n}\nclass HTMLLabelElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._hasActivationBehavior = true;\n  }\n  get control() {\n    if (this.hasAttributeNS(null, \"for\")) {\n      const forValue = this.getAttributeNS(null, \"for\");\n      if (forValue === \"\") {\n        return null;\n      }\n      const root = this.getRootNode({});\n      for (const descendant of domSymbolTree.treeIterator(root)) {\n        if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === forValue) {\n          return isLabelable(descendant) ? descendant : null;\n        }\n      }\n      return null;\n    }\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (isLabelable(descendant)) {\n        return descendant;\n      }\n    }\n    return null;\n  }\n  get form() {\n    const node = this.control;\n    if (node) {\n      return node.form;\n    }\n    return null;\n  }\n  _activationBehavior(event) {\n    // Check if the event's target is an inclusive descendant of any interactive content descendant of this <label>.\n    // If so, do nothing.\n    if (event.target && event.target !== this && isInclusiveAncestor(this, event.target)) {\n      for (const ancestor of domSymbolTree.ancestorsIterator(event.target)) {\n        if (ancestor === this) {\n          break;\n        }\n        if (isInteractiveContent(ancestor)) {\n          return;\n        }\n      }\n    }\n    const node = this.control;\n    if (node && !isDisabled(node)) {\n      // Check if the control is an inclusive ancestor of the event's target (and has already received this event).\n      // If so, do nothing.\n      // See https://github.com/whatwg/html/issues/5415.\n      if (event.target && isInclusiveAncestor(node, event.target)) {\n        return;\n      }\n      sendClickToAssociatedNode(node);\n    }\n  }\n}\nmodule.exports = {\n  implementation: HTMLLabelElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","MouseEvent","domSymbolTree","NODE_TYPE","isLabelable","isDisabled","isInteractiveContent","isInclusiveAncestor","fireAnEvent","sendClickToAssociatedNode","node","bubbles","cancelable","view","ownerDocument","defaultView","screenX","screenY","clientX","clientY","button","detail","relatedTarget","HTMLLabelElementImpl","constructor","globalObject","args","privateData","_hasActivationBehavior","control","hasAttributeNS","forValue","getAttributeNS","root","getRootNode","descendant","treeIterator","nodeType","ELEMENT_NODE","form","_activationBehavior","event","target","ancestor","ancestorsIterator","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLabelElement-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\r\nconst MouseEvent = require(\"../generated/MouseEvent\");\r\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\r\nconst NODE_TYPE = require(\"../node-type\");\r\nconst { isLabelable, isDisabled, isInteractiveContent } = require(\"../helpers/form-controls\");\r\nconst { isInclusiveAncestor } = require(\"../helpers/node\");\r\nconst { fireAnEvent } = require(\"../helpers/events\");\r\n\r\nfunction sendClickToAssociatedNode(node) {\r\n  fireAnEvent(\"click\", node, MouseEvent, {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: node.ownerDocument ? node.ownerDocument.defaultView : null,\r\n    screenX: 0,\r\n    screenY: 0,\r\n    clientX: 0,\r\n    clientY: 0,\r\n    button: 0,\r\n    detail: 1,\r\n    relatedTarget: null\r\n  });\r\n}\r\n\r\nclass HTMLLabelElementImpl extends HTMLElementImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n\r\n    this._hasActivationBehavior = true;\r\n  }\r\n\r\n  get control() {\r\n    if (this.hasAttributeNS(null, \"for\")) {\r\n      const forValue = this.getAttributeNS(null, \"for\");\r\n      if (forValue === \"\") {\r\n        return null;\r\n      }\r\n      const root = this.getRootNode({});\r\n      for (const descendant of domSymbolTree.treeIterator(root)) {\r\n        if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE &&\r\n          descendant.getAttributeNS(null, \"id\") === forValue) {\r\n          return isLabelable(descendant) ? descendant : null;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    for (const descendant of domSymbolTree.treeIterator(this)) {\r\n      if (isLabelable(descendant)) {\r\n        return descendant;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get form() {\r\n    const node = this.control;\r\n    if (node) {\r\n      return node.form;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _activationBehavior(event) {\r\n    // Check if the event's target is an inclusive descendant of any interactive content descendant of this <label>.\r\n    // If so, do nothing.\r\n    if (event.target && event.target !== this && isInclusiveAncestor(this, event.target)) {\r\n      for (const ancestor of domSymbolTree.ancestorsIterator(event.target)) {\r\n        if (ancestor === this) {\r\n          break;\r\n        }\r\n        if (isInteractiveContent(ancestor)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const node = this.control;\r\n    if (node && !isDisabled(node)) {\r\n      // Check if the control is an inclusive ancestor of the event's target (and has already received this event).\r\n      // If so, do nothing.\r\n      // See https://github.com/whatwg/html/issues/5415.\r\n      if (event.target && isInclusiveAncestor(node, event.target)) {\r\n        return;\r\n      }\r\n\r\n      sendClickToAssociatedNode(node);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: HTMLLabelElementImpl\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}