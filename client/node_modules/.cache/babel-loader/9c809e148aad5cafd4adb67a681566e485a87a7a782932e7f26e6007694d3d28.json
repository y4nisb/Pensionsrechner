{"ast":null,"code":"'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n    case 3:\n      return tn === $.RTC;\n    case 6:\n      return tn === $.OPTION;\n    case 8:\n      return tn === $.OPTGROUP;\n  }\n  return false;\n}\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI || tn === $.TD || tn === $.TH || tn === $.TR;\n    case 3:\n      return tn === $.RTC;\n    case 5:\n      return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n    case 6:\n      return tn === $.OPTION;\n    case 7:\n      return tn === $.CAPTION;\n    case 8:\n      return tn === $.OPTGROUP || tn === $.COLGROUP;\n  }\n  return false;\n}\nfunction isScopingElement(tn, ns) {\n  switch (tn.length) {\n    case 2:\n      if (tn === $.TD || tn === $.TH) {\n        return ns === NS.HTML;\n      } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n        return ns === NS.MATHML;\n      }\n      break;\n    case 4:\n      if (tn === $.HTML) {\n        return ns === NS.HTML;\n      } else if (tn === $.DESC) {\n        return ns === NS.SVG;\n      }\n      break;\n    case 5:\n      if (tn === $.TABLE) {\n        return ns === NS.HTML;\n      } else if (tn === $.MTEXT) {\n        return ns === NS.MATHML;\n      } else if (tn === $.TITLE) {\n        return ns === NS.SVG;\n      }\n      break;\n    case 6:\n      return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n    case 7:\n      return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n    case 8:\n      return tn === $.TEMPLATE && ns === NS.HTML;\n    case 13:\n      return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n    case 14:\n      return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n  }\n  return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n  constructor(document, treeAdapter) {\n    this.stackTop = -1;\n    this.items = [];\n    this.current = document;\n    this.currentTagName = null;\n    this.currentTmplContent = null;\n    this.tmplCount = 0;\n    this.treeAdapter = treeAdapter;\n  }\n\n  //Index of element\n  _indexOf(element) {\n    let idx = -1;\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.items[i] === element) {\n        idx = i;\n        break;\n      }\n    }\n    return idx;\n  }\n\n  //Update current element\n  _isInTemplate() {\n    return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n  }\n  _updateCurrentElement() {\n    this.current = this.items[this.stackTop];\n    this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n    this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n  }\n\n  //Mutations\n  push(element) {\n    this.items[++this.stackTop] = element;\n    this._updateCurrentElement();\n    if (this._isInTemplate()) {\n      this.tmplCount++;\n    }\n  }\n  pop() {\n    this.stackTop--;\n    if (this.tmplCount > 0 && this._isInTemplate()) {\n      this.tmplCount--;\n    }\n    this._updateCurrentElement();\n  }\n  replace(oldElement, newElement) {\n    const idx = this._indexOf(oldElement);\n    this.items[idx] = newElement;\n    if (idx === this.stackTop) {\n      this._updateCurrentElement();\n    }\n  }\n  insertAfter(referenceElement, newElement) {\n    const insertionIdx = this._indexOf(referenceElement) + 1;\n    this.items.splice(insertionIdx, 0, newElement);\n    if (insertionIdx === ++this.stackTop) {\n      this._updateCurrentElement();\n    }\n  }\n  popUntilTagNamePopped(tagName) {\n    while (this.stackTop > -1) {\n      const tn = this.currentTagName;\n      const ns = this.treeAdapter.getNamespaceURI(this.current);\n      this.pop();\n      if (tn === tagName && ns === NS.HTML) {\n        break;\n      }\n    }\n  }\n  popUntilElementPopped(element) {\n    while (this.stackTop > -1) {\n      const poppedElement = this.current;\n      this.pop();\n      if (poppedElement === element) {\n        break;\n      }\n    }\n  }\n  popUntilNumberedHeaderPopped() {\n    while (this.stackTop > -1) {\n      const tn = this.currentTagName;\n      const ns = this.treeAdapter.getNamespaceURI(this.current);\n      this.pop();\n      if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML) {\n        break;\n      }\n    }\n  }\n  popUntilTableCellPopped() {\n    while (this.stackTop > -1) {\n      const tn = this.currentTagName;\n      const ns = this.treeAdapter.getNamespaceURI(this.current);\n      this.pop();\n      if (tn === $.TD || tn === $.TH && ns === NS.HTML) {\n        break;\n      }\n    }\n  }\n  popAllUpToHtmlElement() {\n    //NOTE: here we assume that root <html> element is always first in the open element stack, so\n    //we perform this fast stack clean up.\n    this.stackTop = 0;\n    this._updateCurrentElement();\n  }\n  clearBackToTableContext() {\n    while (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n      this.pop();\n    }\n  }\n  clearBackToTableBodyContext() {\n    while (this.currentTagName !== $.TBODY && this.currentTagName !== $.TFOOT && this.currentTagName !== $.THEAD && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n      this.pop();\n    }\n  }\n  clearBackToTableRowContext() {\n    while (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n      this.pop();\n    }\n  }\n  remove(element) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.items[i] === element) {\n        this.items.splice(i, 1);\n        this.stackTop--;\n        this._updateCurrentElement();\n        break;\n      }\n    }\n  }\n\n  //Search\n  tryPeekProperlyNestedBodyElement() {\n    //Properly nested <body> element (should be second element in stack).\n    const element = this.items[1];\n    return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n  }\n  contains(element) {\n    return this._indexOf(element) > -1;\n  }\n  getCommonAncestor(element) {\n    let elementIdx = this._indexOf(element);\n    return --elementIdx >= 0 ? this.items[elementIdx] : null;\n  }\n  isRootHtmlElementCurrent() {\n    return this.stackTop === 0 && this.currentTagName === $.HTML;\n  }\n\n  //Element in scope\n  hasInScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n      if (isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasNumberedHeaderInScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML) {\n        return true;\n      }\n      if (isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInListItemScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n      if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInButtonScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n      if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInTableScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (ns !== NS.HTML) {\n        continue;\n      }\n      if (tn === tagName) {\n        return true;\n      }\n      if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasTableBodyContextInTableScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (ns !== NS.HTML) {\n        continue;\n      }\n      if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n        return true;\n      }\n      if (tn === $.TABLE || tn === $.HTML) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInSelectScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (ns !== NS.HTML) {\n        continue;\n      }\n      if (tn === tagName) {\n        return true;\n      }\n      if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  //Implied end tags\n  generateImpliedEndTags() {\n    while (isImpliedEndTagRequired(this.currentTagName)) {\n      this.pop();\n    }\n  }\n  generateImpliedEndTagsThoroughly() {\n    while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n      this.pop();\n    }\n  }\n  generateImpliedEndTagsWithExclusion(exclusionTagName) {\n    while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n      this.pop();\n    }\n  }\n}\nmodule.exports = OpenElementStack;","map":{"version":3,"names":["HTML","require","$","TAG_NAMES","NS","NAMESPACES","isImpliedEndTagRequired","tn","length","P","RB","RP","RT","DD","DT","LI","RTC","OPTION","OPTGROUP","isImpliedEndTagRequiredThoroughly","TD","TH","TR","TBODY","TFOOT","THEAD","CAPTION","COLGROUP","isScopingElement","ns","MI","MO","MN","MS","MATHML","DESC","SVG","TABLE","MTEXT","TITLE","APPLET","OBJECT","MARQUEE","TEMPLATE","FOREIGN_OBJECT","ANNOTATION_XML","OpenElementStack","constructor","document","treeAdapter","stackTop","items","current","currentTagName","currentTmplContent","tmplCount","_indexOf","element","idx","i","_isInTemplate","getNamespaceURI","_updateCurrentElement","getTagName","getTemplateContent","push","pop","replace","oldElement","newElement","insertAfter","referenceElement","insertionIdx","splice","popUntilTagNamePopped","tagName","popUntilElementPopped","poppedElement","popUntilNumberedHeaderPopped","H1","H2","H3","H4","H5","H6","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","BODY","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","hasNumberedHeaderInScope","hasInListItemScope","UL","OL","hasInButtonScope","BUTTON","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionTagName","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/parse5/lib/parser/open-element-stack.js"],"sourcesContent":["'use strict';\r\n\r\nconst HTML = require('../common/html');\r\n\r\n//Aliases\r\nconst $ = HTML.TAG_NAMES;\r\nconst NS = HTML.NAMESPACES;\r\n\r\n//Element utils\r\n\r\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\r\n//It's faster than using dictionary.\r\nfunction isImpliedEndTagRequired(tn) {\r\n    switch (tn.length) {\r\n        case 1:\r\n            return tn === $.P;\r\n\r\n        case 2:\r\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\r\n\r\n        case 3:\r\n            return tn === $.RTC;\r\n\r\n        case 6:\r\n            return tn === $.OPTION;\r\n\r\n        case 8:\r\n            return tn === $.OPTGROUP;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isImpliedEndTagRequiredThoroughly(tn) {\r\n    switch (tn.length) {\r\n        case 1:\r\n            return tn === $.P;\r\n\r\n        case 2:\r\n            return (\r\n                tn === $.RB ||\r\n                tn === $.RP ||\r\n                tn === $.RT ||\r\n                tn === $.DD ||\r\n                tn === $.DT ||\r\n                tn === $.LI ||\r\n                tn === $.TD ||\r\n                tn === $.TH ||\r\n                tn === $.TR\r\n            );\r\n\r\n        case 3:\r\n            return tn === $.RTC;\r\n\r\n        case 5:\r\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\r\n\r\n        case 6:\r\n            return tn === $.OPTION;\r\n\r\n        case 7:\r\n            return tn === $.CAPTION;\r\n\r\n        case 8:\r\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isScopingElement(tn, ns) {\r\n    switch (tn.length) {\r\n        case 2:\r\n            if (tn === $.TD || tn === $.TH) {\r\n                return ns === NS.HTML;\r\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\r\n                return ns === NS.MATHML;\r\n            }\r\n\r\n            break;\r\n\r\n        case 4:\r\n            if (tn === $.HTML) {\r\n                return ns === NS.HTML;\r\n            } else if (tn === $.DESC) {\r\n                return ns === NS.SVG;\r\n            }\r\n\r\n            break;\r\n\r\n        case 5:\r\n            if (tn === $.TABLE) {\r\n                return ns === NS.HTML;\r\n            } else if (tn === $.MTEXT) {\r\n                return ns === NS.MATHML;\r\n            } else if (tn === $.TITLE) {\r\n                return ns === NS.SVG;\r\n            }\r\n\r\n            break;\r\n\r\n        case 6:\r\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\r\n\r\n        case 7:\r\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\r\n\r\n        case 8:\r\n            return tn === $.TEMPLATE && ns === NS.HTML;\r\n\r\n        case 13:\r\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\r\n\r\n        case 14:\r\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n//Stack of open elements\r\nclass OpenElementStack {\r\n    constructor(document, treeAdapter) {\r\n        this.stackTop = -1;\r\n        this.items = [];\r\n        this.current = document;\r\n        this.currentTagName = null;\r\n        this.currentTmplContent = null;\r\n        this.tmplCount = 0;\r\n        this.treeAdapter = treeAdapter;\r\n    }\r\n\r\n    //Index of element\r\n    _indexOf(element) {\r\n        let idx = -1;\r\n\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.items[i] === element) {\r\n                idx = i;\r\n                break;\r\n            }\r\n        }\r\n        return idx;\r\n    }\r\n\r\n    //Update current element\r\n    _isInTemplate() {\r\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\r\n    }\r\n\r\n    _updateCurrentElement() {\r\n        this.current = this.items[this.stackTop];\r\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\r\n\r\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\r\n    }\r\n\r\n    //Mutations\r\n    push(element) {\r\n        this.items[++this.stackTop] = element;\r\n        this._updateCurrentElement();\r\n\r\n        if (this._isInTemplate()) {\r\n            this.tmplCount++;\r\n        }\r\n    }\r\n\r\n    pop() {\r\n        this.stackTop--;\r\n\r\n        if (this.tmplCount > 0 && this._isInTemplate()) {\r\n            this.tmplCount--;\r\n        }\r\n\r\n        this._updateCurrentElement();\r\n    }\r\n\r\n    replace(oldElement, newElement) {\r\n        const idx = this._indexOf(oldElement);\r\n\r\n        this.items[idx] = newElement;\r\n\r\n        if (idx === this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n    }\r\n\r\n    insertAfter(referenceElement, newElement) {\r\n        const insertionIdx = this._indexOf(referenceElement) + 1;\r\n\r\n        this.items.splice(insertionIdx, 0, newElement);\r\n\r\n        if (insertionIdx === ++this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n    }\r\n\r\n    popUntilTagNamePopped(tagName) {\r\n        while (this.stackTop > -1) {\r\n            const tn = this.currentTagName;\r\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\r\n\r\n            this.pop();\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popUntilElementPopped(element) {\r\n        while (this.stackTop > -1) {\r\n            const poppedElement = this.current;\r\n\r\n            this.pop();\r\n\r\n            if (poppedElement === element) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popUntilNumberedHeaderPopped() {\r\n        while (this.stackTop > -1) {\r\n            const tn = this.currentTagName;\r\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\r\n\r\n            this.pop();\r\n\r\n            if (\r\n                tn === $.H1 ||\r\n                tn === $.H2 ||\r\n                tn === $.H3 ||\r\n                tn === $.H4 ||\r\n                tn === $.H5 ||\r\n                (tn === $.H6 && ns === NS.HTML)\r\n            ) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popUntilTableCellPopped() {\r\n        while (this.stackTop > -1) {\r\n            const tn = this.currentTagName;\r\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\r\n\r\n            this.pop();\r\n\r\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    popAllUpToHtmlElement() {\r\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\r\n        //we perform this fast stack clean up.\r\n        this.stackTop = 0;\r\n        this._updateCurrentElement();\r\n    }\r\n\r\n    clearBackToTableContext() {\r\n        while (\r\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\r\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\r\n        ) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    clearBackToTableBodyContext() {\r\n        while (\r\n            (this.currentTagName !== $.TBODY &&\r\n                this.currentTagName !== $.TFOOT &&\r\n                this.currentTagName !== $.THEAD &&\r\n                this.currentTagName !== $.TEMPLATE &&\r\n                this.currentTagName !== $.HTML) ||\r\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\r\n        ) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    clearBackToTableRowContext() {\r\n        while (\r\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\r\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\r\n        ) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    remove(element) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.items[i] === element) {\r\n                this.items.splice(i, 1);\r\n                this.stackTop--;\r\n                this._updateCurrentElement();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Search\r\n    tryPeekProperlyNestedBodyElement() {\r\n        //Properly nested <body> element (should be second element in stack).\r\n        const element = this.items[1];\r\n\r\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\r\n    }\r\n\r\n    contains(element) {\r\n        return this._indexOf(element) > -1;\r\n    }\r\n\r\n    getCommonAncestor(element) {\r\n        let elementIdx = this._indexOf(element);\r\n\r\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\r\n    }\r\n\r\n    isRootHtmlElementCurrent() {\r\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\r\n    }\r\n\r\n    //Element in scope\r\n    hasInScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n\r\n            if (isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasNumberedHeaderInScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (\r\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\r\n                ns === NS.HTML\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            if (isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInListItemScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n\r\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInButtonScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n\r\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInTableScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n\r\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasTableBodyContextInTableScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n\r\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\r\n                return true;\r\n            }\r\n\r\n            if (tn === $.TABLE || tn === $.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasInSelectScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.treeAdapter.getTagName(this.items[i]);\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n\r\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //Implied end tags\r\n    generateImpliedEndTags() {\r\n        while (isImpliedEndTagRequired(this.currentTagName)) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    generateImpliedEndTagsThoroughly() {\r\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\r\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\r\n            this.pop();\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = OpenElementStack;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}