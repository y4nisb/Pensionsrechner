{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst ChildNodeImpl = require(\"./ChildNode-impl\").implementation;\nconst NonDocumentTypeChildNodeImpl = require(\"./NonDocumentTypeChildNode-impl\").implementation;\nconst {\n  TEXT_NODE\n} = require(\"../node-type\");\nconst {\n  MUTATION_TYPE,\n  queueMutationRecord\n} = require(\"../helpers/mutation-observers\");\n\n// https://dom.spec.whatwg.org/#characterdata\nclass CharacterDataImpl extends NodeImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._data = privateData.data;\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-data\n  get data() {\n    return this._data;\n  }\n  set data(data) {\n    this.replaceData(0, this.length, data);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-length\n  get length() {\n    return this._data.length;\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-substringdata\n  // https://dom.spec.whatwg.org/#concept-cd-substring\n  substringData(offset, count) {\n    const {\n      length\n    } = this;\n    if (offset > length) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    if (offset + count > length) {\n      return this._data.slice(offset);\n    }\n    return this._data.slice(offset, offset + count);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-appenddata\n  appendData(data) {\n    this.replaceData(this.length, 0, data);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-insertdata\n  insertData(offset, data) {\n    this.replaceData(offset, 0, data);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-deletedata\n  deleteData(offset, count) {\n    this.replaceData(offset, count, \"\");\n  }\n\n  // https://dom.spec.whatwg.org/#dom-characterdata-replacedata\n  // https://dom.spec.whatwg.org/#concept-cd-replace\n  replaceData(offset, count, data) {\n    const {\n      length\n    } = this;\n    if (offset > length) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    if (offset + count > length) {\n      count = length - offset;\n    }\n    queueMutationRecord(MUTATION_TYPE.CHARACTER_DATA, this, null, null, this._data, [], [], null, null);\n    const start = this._data.slice(0, offset);\n    const end = this._data.slice(offset + count);\n    this._data = start + data + end;\n    for (const range of this._referencedRanges) {\n      const {\n        _start,\n        _end\n      } = range;\n      if (_start.offset > offset && _start.offset <= offset + count) {\n        range._setLiveRangeStart(this, offset);\n      }\n      if (_end.offset > offset && _end.offset <= offset + count) {\n        range._setLiveRangeEnd(this, offset);\n      }\n      if (_start.offset > offset + count) {\n        range._setLiveRangeStart(this, _start.offset + data.length - count);\n      }\n      if (_end.offset > offset + count) {\n        range._setLiveRangeEnd(this, _end.offset + data.length - count);\n      }\n    }\n    if (this.nodeType === TEXT_NODE && this.parentNode) {\n      this.parentNode._childTextContentChangeSteps();\n    }\n  }\n}\nmixin(CharacterDataImpl.prototype, NonDocumentTypeChildNodeImpl.prototype);\nmixin(CharacterDataImpl.prototype, ChildNodeImpl.prototype);\nmodule.exports = {\n  implementation: CharacterDataImpl\n};","map":{"version":3,"names":["DOMException","require","mixin","NodeImpl","implementation","ChildNodeImpl","NonDocumentTypeChildNodeImpl","TEXT_NODE","MUTATION_TYPE","queueMutationRecord","CharacterDataImpl","constructor","globalObject","args","privateData","_data","data","replaceData","length","substringData","offset","count","create","_globalObject","slice","appendData","insertData","deleteData","CHARACTER_DATA","start","end","range","_referencedRanges","_start","_end","_setLiveRangeStart","_setLiveRangeEnd","nodeType","parentNode","_childTextContentChangeSteps","prototype","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/CharacterData-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\n\r\nconst { mixin } = require(\"../../utils\");\r\nconst NodeImpl = require(\"./Node-impl\").implementation;\r\nconst ChildNodeImpl = require(\"./ChildNode-impl\").implementation;\r\nconst NonDocumentTypeChildNodeImpl = require(\"./NonDocumentTypeChildNode-impl\").implementation;\r\n\r\nconst { TEXT_NODE } = require(\"../node-type\");\r\nconst { MUTATION_TYPE, queueMutationRecord } = require(\"../helpers/mutation-observers\");\r\n\r\n// https://dom.spec.whatwg.org/#characterdata\r\nclass CharacterDataImpl extends NodeImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n\r\n    this._data = privateData.data;\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-data\r\n  get data() {\r\n    return this._data;\r\n  }\r\n  set data(data) {\r\n    this.replaceData(0, this.length, data);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-length\r\n  get length() {\r\n    return this._data.length;\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-substringdata\r\n  // https://dom.spec.whatwg.org/#concept-cd-substring\r\n  substringData(offset, count) {\r\n    const { length } = this;\r\n\r\n    if (offset > length) {\r\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\r\n    }\r\n\r\n    if (offset + count > length) {\r\n      return this._data.slice(offset);\r\n    }\r\n\r\n    return this._data.slice(offset, offset + count);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-appenddata\r\n  appendData(data) {\r\n    this.replaceData(this.length, 0, data);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-insertdata\r\n  insertData(offset, data) {\r\n    this.replaceData(offset, 0, data);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-deletedata\r\n  deleteData(offset, count) {\r\n    this.replaceData(offset, count, \"\");\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-characterdata-replacedata\r\n  // https://dom.spec.whatwg.org/#concept-cd-replace\r\n  replaceData(offset, count, data) {\r\n    const { length } = this;\r\n\r\n    if (offset > length) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The index is not in the allowed range.\",\r\n        \"IndexSizeError\"\r\n      ]);\r\n    }\r\n\r\n    if (offset + count > length) {\r\n      count = length - offset;\r\n    }\r\n\r\n    queueMutationRecord(MUTATION_TYPE.CHARACTER_DATA, this, null, null, this._data, [], [], null, null);\r\n\r\n    const start = this._data.slice(0, offset);\r\n    const end = this._data.slice(offset + count);\r\n    this._data = start + data + end;\r\n\r\n    for (const range of this._referencedRanges) {\r\n      const { _start, _end } = range;\r\n\r\n      if (_start.offset > offset && _start.offset <= offset + count) {\r\n        range._setLiveRangeStart(this, offset);\r\n      }\r\n\r\n      if (_end.offset > offset && _end.offset <= offset + count) {\r\n        range._setLiveRangeEnd(this, offset);\r\n      }\r\n\r\n      if (_start.offset > offset + count) {\r\n        range._setLiveRangeStart(this, _start.offset + data.length - count);\r\n      }\r\n\r\n      if (_end.offset > offset + count) {\r\n        range._setLiveRangeEnd(this, _end.offset + data.length - count);\r\n      }\r\n    }\r\n\r\n    if (this.nodeType === TEXT_NODE && this.parentNode) {\r\n      this.parentNode._childTextContentChangeSteps();\r\n    }\r\n  }\r\n}\r\n\r\nmixin(CharacterDataImpl.prototype, NonDocumentTypeChildNodeImpl.prototype);\r\nmixin(CharacterDataImpl.prototype, ChildNodeImpl.prototype);\r\n\r\nmodule.exports = {\r\n  implementation: CharacterDataImpl\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}