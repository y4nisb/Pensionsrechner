{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  cloningSteps\n} = require(\"../helpers/internal-constants\");\nconst {\n  isDisabled,\n  getLabelsForLabelable,\n  formOwner\n} = require(\"../helpers/form-controls\");\nconst {\n  childTextContent\n} = require(\"../helpers/text\");\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\nclass HTMLTextAreaElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._rawValue = \"\";\n    this._dirtyValue = false;\n    this._customValidityErrorMessage = \"\";\n    this._labels = null;\n  }\n  _formReset() {\n    this._rawValue = childTextContent(this);\n    this._dirtyValue = false;\n  }\n  _getAPIValue() {\n    return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#textarea-wrapping-transformation\n  _getValue() {\n    const apiValue = this._getAPIValue();\n    const wrap = this.getAttributeNS(null, \"wrap\");\n    return wrap === \"hard\" ? textareaWrappingTransformation(apiValue, this.cols) : apiValue;\n  }\n  _childTextContentChangeSteps() {\n    super._childTextContentChangeSteps();\n    if (this._dirtyValue === false) {\n      this._rawValue = childTextContent(this);\n    }\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n  get form() {\n    return formOwner(this);\n  }\n  get defaultValue() {\n    return childTextContent(this);\n  }\n  set defaultValue(val) {\n    this.textContent = val;\n  }\n  get value() {\n    return this._getAPIValue();\n  }\n  set value(val) {\n    // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-value\n    const oldAPIValue = this._getAPIValue();\n    this._rawValue = val;\n    this._dirtyValue = true;\n    if (oldAPIValue !== this._getAPIValue()) {\n      this._selectionStart = this._selectionEnd = this._getValueLength();\n      this._selectionDirection = \"none\";\n    }\n  }\n  get textLength() {\n    return this.value.length; // code unit length (16 bit)\n  }\n\n  get type() {\n    return \"textarea\";\n  }\n  _dispatchSelectEvent() {\n    fireAnEvent(\"select\", this, undefined, {\n      bubbles: true,\n      cancelable: true\n    });\n  }\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n  select() {\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n  get selectionStart() {\n    return this._selectionStart;\n  }\n  set selectionStart(start) {\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n  get selectionEnd() {\n    return this._selectionEnd;\n  }\n  set selectionEnd(end) {\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n  get selectionDirection() {\n    return this._selectionDirection;\n  }\n  set selectionDirection(dir) {\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n  setSelectionRange(start, end, dir) {\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n  setRangeText(repl, start, end) {\n    let selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n    this.value = val.slice(0, start) + repl + val.slice(end);\n    const newEnd = start + this.value.length;\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else {\n      // preserve\n      const delta = repl.length - (end - start);\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n  get cols() {\n    if (!this.hasAttributeNS(null, \"cols\")) {\n      return 20;\n    }\n    return parseInt(this.getAttributeNS(null, \"cols\"));\n  }\n  set cols(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"cols\", String(value));\n  }\n  get rows() {\n    if (!this.hasAttributeNS(null, \"rows\")) {\n      return 2;\n    }\n    return parseInt(this.getAttributeNS(null, \"rows\"));\n  }\n  set rows(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"rows\", String(value));\n  }\n  _barredFromConstraintValidationSpecialization() {\n    return this.hasAttributeNS(null, \"readonly\");\n  }\n  get _mutable() {\n    return !isDisabled(this) && !this.hasAttributeNS(null, \"readonly\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n  get validity() {\n    if (!this._validity) {\n      const state = {\n        valueMissing: () => this.hasAttributeNS(null, \"required\") && this._mutable && this.value === \"\"\n      };\n      this._validity = ValidityState.createImpl(this._globalObject, [], {\n        element: this,\n        state\n      });\n    }\n    return this._validity;\n  }\n  [cloningSteps](copy, node) {\n    copy._dirtyValue = node._dirtyValue;\n    copy._rawValue = node._rawValue;\n  }\n}\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};\nfunction textareaWrappingTransformation(text, cols) {\n  let lineStart = 0;\n  let lineEnd = text.indexOf(\"\\n\");\n  if (lineEnd === -1) {\n    lineEnd = text.length;\n  }\n  while (lineStart < text.length) {\n    const lineLength = lineEnd - lineStart;\n    if (lineLength > cols) {\n      // split the line\n      lineEnd = lineStart + cols;\n      text = text.slice(0, lineEnd) + \"\\n\" + text.slice(lineEnd);\n    }\n    // move to next line\n    lineStart = lineEnd + 1; // step over the newline\n    lineEnd = text.indexOf(\"\\n\", lineStart);\n    if (lineEnd === -1) {\n      lineEnd = text.length;\n    }\n  }\n  return text;\n}","map":{"version":3,"names":["HTMLElementImpl","require","implementation","DefaultConstraintValidationImpl","ValidityState","mixin","DOMException","cloningSteps","isDisabled","getLabelsForLabelable","formOwner","childTextContent","fireAnEvent","HTMLTextAreaElementImpl","constructor","globalObject","args","privateData","_selectionStart","_selectionEnd","_selectionDirection","_rawValue","_dirtyValue","_customValidityErrorMessage","_labels","_formReset","_getAPIValue","replace","_getValue","apiValue","wrap","getAttributeNS","textareaWrappingTransformation","cols","_childTextContentChangeSteps","labels","form","defaultValue","val","textContent","value","oldAPIValue","_getValueLength","textLength","length","type","_dispatchSelectEvent","undefined","bubbles","cancelable","select","selectionStart","start","setSelectionRange","Math","max","selectionEnd","end","selectionDirection","dir","min","setRangeText","repl","selectionMode","arguments","create","_globalObject","selStart","selEnd","slice","newEnd","delta","hasAttributeNS","parseInt","setAttributeNS","String","rows","_barredFromConstraintValidationSpecialization","_mutable","validity","_validity","state","valueMissing","createImpl","element","copy","node","prototype","module","exports","text","lineStart","lineEnd","indexOf","lineLength"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\r\n\r\nconst DefaultConstraintValidationImpl =\r\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\r\nconst ValidityState = require(\"../generated/ValidityState\");\r\nconst { mixin } = require(\"../../utils\");\r\n\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\nconst { cloningSteps } = require(\"../helpers/internal-constants\");\r\nconst { isDisabled, getLabelsForLabelable, formOwner } = require(\"../helpers/form-controls\");\r\nconst { childTextContent } = require(\"../helpers/text\");\r\nconst { fireAnEvent } = require(\"../helpers/events\");\r\n\r\nclass HTMLTextAreaElementImpl extends HTMLElementImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n\r\n    this._selectionStart = this._selectionEnd = 0;\r\n    this._selectionDirection = \"none\";\r\n    this._rawValue = \"\";\r\n    this._dirtyValue = false;\r\n\r\n    this._customValidityErrorMessage = \"\";\r\n\r\n    this._labels = null;\r\n  }\r\n\r\n  _formReset() {\r\n    this._rawValue = childTextContent(this);\r\n    this._dirtyValue = false;\r\n  }\r\n\r\n  _getAPIValue() {\r\n    return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/form-elements.html#textarea-wrapping-transformation\r\n  _getValue() {\r\n    const apiValue = this._getAPIValue();\r\n    const wrap = this.getAttributeNS(null, \"wrap\");\r\n    return wrap === \"hard\" ?\r\n      textareaWrappingTransformation(apiValue, this.cols) :\r\n      apiValue;\r\n  }\r\n\r\n  _childTextContentChangeSteps() {\r\n    super._childTextContentChangeSteps();\r\n\r\n    if (this._dirtyValue === false) {\r\n      this._rawValue = childTextContent(this);\r\n    }\r\n  }\r\n\r\n  get labels() {\r\n    return getLabelsForLabelable(this);\r\n  }\r\n\r\n  get form() {\r\n    return formOwner(this);\r\n  }\r\n\r\n  get defaultValue() {\r\n    return childTextContent(this);\r\n  }\r\n\r\n  set defaultValue(val) {\r\n    this.textContent = val;\r\n  }\r\n\r\n  get value() {\r\n    return this._getAPIValue();\r\n  }\r\n\r\n  set value(val) {\r\n    // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-value\r\n    const oldAPIValue = this._getAPIValue();\r\n    this._rawValue = val;\r\n    this._dirtyValue = true;\r\n\r\n    if (oldAPIValue !== this._getAPIValue()) {\r\n      this._selectionStart = this._selectionEnd = this._getValueLength();\r\n      this._selectionDirection = \"none\";\r\n    }\r\n  }\r\n\r\n  get textLength() {\r\n    return this.value.length; // code unit length (16 bit)\r\n  }\r\n\r\n  get type() {\r\n    return \"textarea\";\r\n  }\r\n\r\n  _dispatchSelectEvent() {\r\n    fireAnEvent(\"select\", this, undefined, { bubbles: true, cancelable: true });\r\n  }\r\n\r\n  _getValueLength() {\r\n    return typeof this.value === \"string\" ? this.value.length : 0;\r\n  }\r\n\r\n  select() {\r\n    this._selectionStart = 0;\r\n    this._selectionEnd = this._getValueLength();\r\n    this._selectionDirection = \"none\";\r\n    this._dispatchSelectEvent();\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this._selectionStart;\r\n  }\r\n\r\n  set selectionStart(start) {\r\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this._selectionEnd;\r\n  }\r\n\r\n  set selectionEnd(end) {\r\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\r\n  }\r\n\r\n  get selectionDirection() {\r\n    return this._selectionDirection;\r\n  }\r\n\r\n  set selectionDirection(dir) {\r\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\r\n  }\r\n\r\n  setSelectionRange(start, end, dir) {\r\n    this._selectionEnd = Math.min(end, this._getValueLength());\r\n    this._selectionStart = Math.min(start, this._selectionEnd);\r\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\r\n    this._dispatchSelectEvent();\r\n  }\r\n\r\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\r\n    if (arguments.length < 2) {\r\n      start = this._selectionStart;\r\n      end = this._selectionEnd;\r\n    } else if (start > end) {\r\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\r\n    }\r\n\r\n    start = Math.min(start, this._getValueLength());\r\n    end = Math.min(end, this._getValueLength());\r\n\r\n    const val = this.value;\r\n    let selStart = this._selectionStart;\r\n    let selEnd = this._selectionEnd;\r\n\r\n    this.value = val.slice(0, start) + repl + val.slice(end);\r\n\r\n    const newEnd = start + this.value.length;\r\n\r\n    if (selectionMode === \"select\") {\r\n      this.setSelectionRange(start, newEnd);\r\n    } else if (selectionMode === \"start\") {\r\n      this.setSelectionRange(start, start);\r\n    } else if (selectionMode === \"end\") {\r\n      this.setSelectionRange(newEnd, newEnd);\r\n    } else { // preserve\r\n      const delta = repl.length - (end - start);\r\n\r\n      if (selStart > end) {\r\n        selStart += delta;\r\n      } else if (selStart > start) {\r\n        selStart = start;\r\n      }\r\n\r\n      if (selEnd > end) {\r\n        selEnd += delta;\r\n      } else if (selEnd > start) {\r\n        selEnd = newEnd;\r\n      }\r\n\r\n      this.setSelectionRange(selStart, selEnd);\r\n    }\r\n  }\r\n\r\n  get cols() {\r\n    if (!this.hasAttributeNS(null, \"cols\")) {\r\n      return 20;\r\n    }\r\n    return parseInt(this.getAttributeNS(null, \"cols\"));\r\n  }\r\n\r\n  set cols(value) {\r\n    if (value <= 0) {\r\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\r\n    }\r\n    this.setAttributeNS(null, \"cols\", String(value));\r\n  }\r\n\r\n  get rows() {\r\n    if (!this.hasAttributeNS(null, \"rows\")) {\r\n      return 2;\r\n    }\r\n    return parseInt(this.getAttributeNS(null, \"rows\"));\r\n  }\r\n\r\n  set rows(value) {\r\n    if (value <= 0) {\r\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\r\n    }\r\n    this.setAttributeNS(null, \"rows\", String(value));\r\n  }\r\n\r\n  _barredFromConstraintValidationSpecialization() {\r\n    return this.hasAttributeNS(null, \"readonly\");\r\n  }\r\n\r\n  get _mutable() {\r\n    return !isDisabled(this) && !this.hasAttributeNS(null, \"readonly\");\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\r\n  get validity() {\r\n    if (!this._validity) {\r\n      const state = {\r\n        valueMissing: () => this.hasAttributeNS(null, \"required\") && this._mutable && this.value === \"\"\r\n      };\r\n\r\n      this._validity = ValidityState.createImpl(this._globalObject, [], {\r\n        element: this,\r\n        state\r\n      });\r\n    }\r\n    return this._validity;\r\n  }\r\n\r\n  [cloningSteps](copy, node) {\r\n    copy._dirtyValue = node._dirtyValue;\r\n    copy._rawValue = node._rawValue;\r\n  }\r\n}\r\n\r\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\r\n\r\nmodule.exports = {\r\n  implementation: HTMLTextAreaElementImpl\r\n};\r\n\r\nfunction textareaWrappingTransformation(text, cols) {\r\n  let lineStart = 0;\r\n  let lineEnd = text.indexOf(\"\\n\");\r\n  if (lineEnd === -1) {\r\n    lineEnd = text.length;\r\n  }\r\n\r\n  while (lineStart < text.length) {\r\n    const lineLength = lineEnd - lineStart;\r\n    if (lineLength > cols) {\r\n      // split the line\r\n      lineEnd = lineStart + cols;\r\n      text = text.slice(0, lineEnd) + \"\\n\" + text.slice(lineEnd);\r\n    }\r\n    // move to next line\r\n    lineStart = lineEnd + 1; // step over the newline\r\n    lineEnd = text.indexOf(\"\\n\", lineStart);\r\n    if (lineEnd === -1) {\r\n      lineEnd = text.length;\r\n    }\r\n  }\r\n\r\n  return text;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}