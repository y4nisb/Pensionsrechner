{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst EventHandlerNonNull = require(\"./EventHandlerNonNull.js\");\nconst OnBeforeUnloadEventHandlerNonNull = require(\"./OnBeforeUnloadEventHandlerNonNull.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst SVGGraphicsElement = require(\"./SVGGraphicsElement.js\");\nconst interfaceName = \"SVGSVGElement\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'SVGSVGElement'.`);\n};\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n  const ctor = globalObject[ctorRegistrySymbol][\"SVGSVGElement\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor SVGSVGElement is not installed on the passed global object\");\n  }\n  return Object.create(ctor.prototype);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {\n  SVGGraphicsElement._internalSetup(wrapper, globalObject);\n};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  if (globalObject.SVGGraphicsElement === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate SVGSVGElement before SVGGraphicsElement\");\n  }\n  class SVGSVGElement extends globalObject.SVGGraphicsElement {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n    createSVGNumber() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'createSVGNumber' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createSVGNumber());\n    }\n    getElementById(elementId) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'getElementById' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'getElementById' on 'SVGSVGElement': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'getElementById' on 'SVGSVGElement': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getElementById(...args));\n    }\n    suspendRedraw(maxWaitMilliseconds) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'suspendRedraw' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'suspendRedraw' on 'SVGSVGElement': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'suspendRedraw' on 'SVGSVGElement': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].suspendRedraw(...args);\n    }\n    unsuspendRedraw(suspendHandleID) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'unsuspendRedraw' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'unsuspendRedraw' on 'SVGSVGElement': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'unsuspendRedraw' on 'SVGSVGElement': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].unsuspendRedraw(...args);\n    }\n    unsuspendRedrawAll() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'unsuspendRedrawAll' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return esValue[implSymbol].unsuspendRedrawAll();\n    }\n    forceRedraw() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'forceRedraw' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return esValue[implSymbol].forceRedraw();\n    }\n    get onafterprint() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onafterprint' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onafterprint\"]);\n    }\n    set onafterprint(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onafterprint' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onafterprint' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onafterprint\"] = V;\n    }\n    get onbeforeprint() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onbeforeprint' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onbeforeprint\"]);\n    }\n    set onbeforeprint(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onbeforeprint' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onbeforeprint' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onbeforeprint\"] = V;\n    }\n    get onbeforeunload() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onbeforeunload' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onbeforeunload\"]);\n    }\n    set onbeforeunload(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onbeforeunload' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = OnBeforeUnloadEventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onbeforeunload' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onbeforeunload\"] = V;\n    }\n    get onhashchange() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onhashchange' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onhashchange\"]);\n    }\n    set onhashchange(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onhashchange' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onhashchange' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onhashchange\"] = V;\n    }\n    get onlanguagechange() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onlanguagechange' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onlanguagechange\"]);\n    }\n    set onlanguagechange(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onlanguagechange' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onlanguagechange' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onlanguagechange\"] = V;\n    }\n    get onmessage() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onmessage' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onmessage\"]);\n    }\n    set onmessage(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onmessage' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onmessage' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onmessage\"] = V;\n    }\n    get onmessageerror() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onmessageerror' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onmessageerror\"]);\n    }\n    set onmessageerror(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onmessageerror' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onmessageerror' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onmessageerror\"] = V;\n    }\n    get onoffline() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onoffline' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onoffline\"]);\n    }\n    set onoffline(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onoffline' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onoffline' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onoffline\"] = V;\n    }\n    get ononline() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get ononline' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"ononline\"]);\n    }\n    set ononline(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set ononline' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'ononline' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"ononline\"] = V;\n    }\n    get onpagehide() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onpagehide' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onpagehide\"]);\n    }\n    set onpagehide(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onpagehide' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onpagehide' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onpagehide\"] = V;\n    }\n    get onpageshow() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onpageshow' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onpageshow\"]);\n    }\n    set onpageshow(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onpageshow' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onpageshow' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onpageshow\"] = V;\n    }\n    get onpopstate() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onpopstate' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onpopstate\"]);\n    }\n    set onpopstate(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onpopstate' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onpopstate' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onpopstate\"] = V;\n    }\n    get onrejectionhandled() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onrejectionhandled' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onrejectionhandled\"]);\n    }\n    set onrejectionhandled(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onrejectionhandled' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onrejectionhandled' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onrejectionhandled\"] = V;\n    }\n    get onstorage() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onstorage' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onstorage\"]);\n    }\n    set onstorage(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onstorage' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onstorage' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onstorage\"] = V;\n    }\n    get onunhandledrejection() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onunhandledrejection' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onunhandledrejection\"]);\n    }\n    set onunhandledrejection(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onunhandledrejection' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onunhandledrejection' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onunhandledrejection\"] = V;\n    }\n    get onunload() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get onunload' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onunload\"]);\n    }\n    set onunload(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set onunload' called on an object that is not a valid instance of SVGSVGElement.\");\n      }\n      if (!utils.isObject(V)) {\n        V = null;\n      } else {\n        V = EventHandlerNonNull.convert(V, {\n          context: \"Failed to set the 'onunload' property on 'SVGSVGElement': The provided value\"\n        });\n      }\n      esValue[implSymbol][\"onunload\"] = V;\n    }\n  }\n  Object.defineProperties(SVGSVGElement.prototype, {\n    createSVGNumber: {\n      enumerable: true\n    },\n    getElementById: {\n      enumerable: true\n    },\n    suspendRedraw: {\n      enumerable: true\n    },\n    unsuspendRedraw: {\n      enumerable: true\n    },\n    unsuspendRedrawAll: {\n      enumerable: true\n    },\n    forceRedraw: {\n      enumerable: true\n    },\n    onafterprint: {\n      enumerable: true\n    },\n    onbeforeprint: {\n      enumerable: true\n    },\n    onbeforeunload: {\n      enumerable: true\n    },\n    onhashchange: {\n      enumerable: true\n    },\n    onlanguagechange: {\n      enumerable: true\n    },\n    onmessage: {\n      enumerable: true\n    },\n    onmessageerror: {\n      enumerable: true\n    },\n    onoffline: {\n      enumerable: true\n    },\n    ononline: {\n      enumerable: true\n    },\n    onpagehide: {\n      enumerable: true\n    },\n    onpageshow: {\n      enumerable: true\n    },\n    onpopstate: {\n      enumerable: true\n    },\n    onrejectionhandled: {\n      enumerable: true\n    },\n    onstorage: {\n      enumerable: true\n    },\n    onunhandledrejection: {\n      enumerable: true\n    },\n    onunload: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"SVGSVGElement\",\n      configurable: true\n    }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = SVGSVGElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: SVGSVGElement\n  });\n};\nconst Impl = require(\"../nodes/SVGSVGElement-impl.js\");","map":{"version":3,"names":["conversions","require","utils","EventHandlerNonNull","OnBeforeUnloadEventHandlerNonNull","implSymbol","ctorRegistrySymbol","SVGGraphicsElement","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","globalObject","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","SVGSVGElement","constructor","createSVGNumber","esValue","tryWrapperForImpl","getElementById","elementId","args","curArg","push","suspendRedraw","maxWaitMilliseconds","unsuspendRedraw","suspendHandleID","unsuspendRedrawAll","forceRedraw","onafterprint","V","onbeforeprint","onbeforeunload","onhashchange","onlanguagechange","onmessage","onmessageerror","onoffline","ononline","onpagehide","onpageshow","onpopstate","onrejectionhandled","onstorage","onunhandledrejection","onunload","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/generated/SVGSVGElement.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst conversions = require(\"webidl-conversions\");\r\nconst utils = require(\"./utils.js\");\r\n\r\nconst EventHandlerNonNull = require(\"./EventHandlerNonNull.js\");\r\nconst OnBeforeUnloadEventHandlerNonNull = require(\"./OnBeforeUnloadEventHandlerNonNull.js\");\r\nconst implSymbol = utils.implSymbol;\r\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\r\nconst SVGGraphicsElement = require(\"./SVGGraphicsElement.js\");\r\n\r\nconst interfaceName = \"SVGSVGElement\";\r\n\r\nexports.is = value => {\r\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\r\n};\r\nexports.isImpl = value => {\r\n  return utils.isObject(value) && value instanceof Impl.implementation;\r\n};\r\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\r\n  if (exports.is(value)) {\r\n    return utils.implForWrapper(value);\r\n  }\r\n  throw new TypeError(`${context} is not of type 'SVGSVGElement'.`);\r\n};\r\n\r\nfunction makeWrapper(globalObject) {\r\n  if (globalObject[ctorRegistrySymbol] === undefined) {\r\n    throw new Error(\"Internal error: invalid global object\");\r\n  }\r\n\r\n  const ctor = globalObject[ctorRegistrySymbol][\"SVGSVGElement\"];\r\n  if (ctor === undefined) {\r\n    throw new Error(\"Internal error: constructor SVGSVGElement is not installed on the passed global object\");\r\n  }\r\n\r\n  return Object.create(ctor.prototype);\r\n}\r\n\r\nexports.create = (globalObject, constructorArgs, privateData) => {\r\n  const wrapper = makeWrapper(globalObject);\r\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\r\n};\r\n\r\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\r\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\r\n  return utils.implForWrapper(wrapper);\r\n};\r\n\r\nexports._internalSetup = (wrapper, globalObject) => {\r\n  SVGGraphicsElement._internalSetup(wrapper, globalObject);\r\n};\r\n\r\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\r\n  privateData.wrapper = wrapper;\r\n\r\n  exports._internalSetup(wrapper, globalObject);\r\n  Object.defineProperty(wrapper, implSymbol, {\r\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\r\n    configurable: true\r\n  });\r\n\r\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\r\n  if (Impl.init) {\r\n    Impl.init(wrapper[implSymbol]);\r\n  }\r\n  return wrapper;\r\n};\r\n\r\nexports.new = globalObject => {\r\n  const wrapper = makeWrapper(globalObject);\r\n\r\n  exports._internalSetup(wrapper, globalObject);\r\n  Object.defineProperty(wrapper, implSymbol, {\r\n    value: Object.create(Impl.implementation.prototype),\r\n    configurable: true\r\n  });\r\n\r\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\r\n  if (Impl.init) {\r\n    Impl.init(wrapper[implSymbol]);\r\n  }\r\n  return wrapper[implSymbol];\r\n};\r\n\r\nconst exposed = new Set([\"Window\"]);\r\n\r\nexports.install = (globalObject, globalNames) => {\r\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\r\n    return;\r\n  }\r\n\r\n  if (globalObject.SVGGraphicsElement === undefined) {\r\n    throw new Error(\"Internal error: attempting to evaluate SVGSVGElement before SVGGraphicsElement\");\r\n  }\r\n  class SVGSVGElement extends globalObject.SVGGraphicsElement {\r\n    constructor() {\r\n      throw new TypeError(\"Illegal constructor\");\r\n    }\r\n\r\n    createSVGNumber() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'createSVGNumber' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol].createSVGNumber());\r\n    }\r\n\r\n    getElementById(elementId) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'getElementById' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'getElementById' on 'SVGSVGElement': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"DOMString\"](curArg, {\r\n          context: \"Failed to execute 'getElementById' on 'SVGSVGElement': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return utils.tryWrapperForImpl(esValue[implSymbol].getElementById(...args));\r\n    }\r\n\r\n    suspendRedraw(maxWaitMilliseconds) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'suspendRedraw' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'suspendRedraw' on 'SVGSVGElement': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"unsigned long\"](curArg, {\r\n          context: \"Failed to execute 'suspendRedraw' on 'SVGSVGElement': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].suspendRedraw(...args);\r\n    }\r\n\r\n    unsuspendRedraw(suspendHandleID) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'unsuspendRedraw' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'unsuspendRedraw' on 'SVGSVGElement': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"unsigned long\"](curArg, {\r\n          context: \"Failed to execute 'unsuspendRedraw' on 'SVGSVGElement': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].unsuspendRedraw(...args);\r\n    }\r\n\r\n    unsuspendRedrawAll() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'unsuspendRedrawAll' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return esValue[implSymbol].unsuspendRedrawAll();\r\n    }\r\n\r\n    forceRedraw() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'forceRedraw' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return esValue[implSymbol].forceRedraw();\r\n    }\r\n\r\n    get onafterprint() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onafterprint' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onafterprint\"]);\r\n    }\r\n\r\n    set onafterprint(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onafterprint' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onafterprint' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onafterprint\"] = V;\r\n    }\r\n\r\n    get onbeforeprint() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onbeforeprint' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onbeforeprint\"]);\r\n    }\r\n\r\n    set onbeforeprint(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onbeforeprint' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onbeforeprint' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onbeforeprint\"] = V;\r\n    }\r\n\r\n    get onbeforeunload() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onbeforeunload' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onbeforeunload\"]);\r\n    }\r\n\r\n    set onbeforeunload(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onbeforeunload' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = OnBeforeUnloadEventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onbeforeunload' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onbeforeunload\"] = V;\r\n    }\r\n\r\n    get onhashchange() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onhashchange' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onhashchange\"]);\r\n    }\r\n\r\n    set onhashchange(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onhashchange' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onhashchange' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onhashchange\"] = V;\r\n    }\r\n\r\n    get onlanguagechange() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\r\n          \"'get onlanguagechange' called on an object that is not a valid instance of SVGSVGElement.\"\r\n        );\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onlanguagechange\"]);\r\n    }\r\n\r\n    set onlanguagechange(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\r\n          \"'set onlanguagechange' called on an object that is not a valid instance of SVGSVGElement.\"\r\n        );\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onlanguagechange' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onlanguagechange\"] = V;\r\n    }\r\n\r\n    get onmessage() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onmessage' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onmessage\"]);\r\n    }\r\n\r\n    set onmessage(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onmessage' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onmessage' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onmessage\"] = V;\r\n    }\r\n\r\n    get onmessageerror() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onmessageerror' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onmessageerror\"]);\r\n    }\r\n\r\n    set onmessageerror(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onmessageerror' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onmessageerror' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onmessageerror\"] = V;\r\n    }\r\n\r\n    get onoffline() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onoffline' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onoffline\"]);\r\n    }\r\n\r\n    set onoffline(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onoffline' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onoffline' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onoffline\"] = V;\r\n    }\r\n\r\n    get ononline() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get ononline' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"ononline\"]);\r\n    }\r\n\r\n    set ononline(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set ononline' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'ononline' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"ononline\"] = V;\r\n    }\r\n\r\n    get onpagehide() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onpagehide' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onpagehide\"]);\r\n    }\r\n\r\n    set onpagehide(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onpagehide' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onpagehide' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onpagehide\"] = V;\r\n    }\r\n\r\n    get onpageshow() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onpageshow' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onpageshow\"]);\r\n    }\r\n\r\n    set onpageshow(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onpageshow' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onpageshow' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onpageshow\"] = V;\r\n    }\r\n\r\n    get onpopstate() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onpopstate' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onpopstate\"]);\r\n    }\r\n\r\n    set onpopstate(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onpopstate' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onpopstate' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onpopstate\"] = V;\r\n    }\r\n\r\n    get onrejectionhandled() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\r\n          \"'get onrejectionhandled' called on an object that is not a valid instance of SVGSVGElement.\"\r\n        );\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onrejectionhandled\"]);\r\n    }\r\n\r\n    set onrejectionhandled(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\r\n          \"'set onrejectionhandled' called on an object that is not a valid instance of SVGSVGElement.\"\r\n        );\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onrejectionhandled' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onrejectionhandled\"] = V;\r\n    }\r\n\r\n    get onstorage() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onstorage' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onstorage\"]);\r\n    }\r\n\r\n    set onstorage(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onstorage' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onstorage' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onstorage\"] = V;\r\n    }\r\n\r\n    get onunhandledrejection() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\r\n          \"'get onunhandledrejection' called on an object that is not a valid instance of SVGSVGElement.\"\r\n        );\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onunhandledrejection\"]);\r\n    }\r\n\r\n    set onunhandledrejection(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\r\n          \"'set onunhandledrejection' called on an object that is not a valid instance of SVGSVGElement.\"\r\n        );\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onunhandledrejection' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onunhandledrejection\"] = V;\r\n    }\r\n\r\n    get onunload() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get onunload' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onunload\"]);\r\n    }\r\n\r\n    set onunload(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'set onunload' called on an object that is not a valid instance of SVGSVGElement.\");\r\n      }\r\n\r\n      if (!utils.isObject(V)) {\r\n        V = null;\r\n      } else {\r\n        V = EventHandlerNonNull.convert(V, {\r\n          context: \"Failed to set the 'onunload' property on 'SVGSVGElement': The provided value\"\r\n        });\r\n      }\r\n      esValue[implSymbol][\"onunload\"] = V;\r\n    }\r\n  }\r\n  Object.defineProperties(SVGSVGElement.prototype, {\r\n    createSVGNumber: { enumerable: true },\r\n    getElementById: { enumerable: true },\r\n    suspendRedraw: { enumerable: true },\r\n    unsuspendRedraw: { enumerable: true },\r\n    unsuspendRedrawAll: { enumerable: true },\r\n    forceRedraw: { enumerable: true },\r\n    onafterprint: { enumerable: true },\r\n    onbeforeprint: { enumerable: true },\r\n    onbeforeunload: { enumerable: true },\r\n    onhashchange: { enumerable: true },\r\n    onlanguagechange: { enumerable: true },\r\n    onmessage: { enumerable: true },\r\n    onmessageerror: { enumerable: true },\r\n    onoffline: { enumerable: true },\r\n    ononline: { enumerable: true },\r\n    onpagehide: { enumerable: true },\r\n    onpageshow: { enumerable: true },\r\n    onpopstate: { enumerable: true },\r\n    onrejectionhandled: { enumerable: true },\r\n    onstorage: { enumerable: true },\r\n    onunhandledrejection: { enumerable: true },\r\n    onunload: { enumerable: true },\r\n    [Symbol.toStringTag]: { value: \"SVGSVGElement\", configurable: true }\r\n  });\r\n  if (globalObject[ctorRegistrySymbol] === undefined) {\r\n    globalObject[ctorRegistrySymbol] = Object.create(null);\r\n  }\r\n  globalObject[ctorRegistrySymbol][interfaceName] = SVGSVGElement;\r\n\r\n  Object.defineProperty(globalObject, interfaceName, {\r\n    configurable: true,\r\n    writable: true,\r\n    value: SVGSVGElement\r\n  });\r\n};\r\n\r\nconst Impl = require(\"../nodes/SVGSVGElement-impl.js\");\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}