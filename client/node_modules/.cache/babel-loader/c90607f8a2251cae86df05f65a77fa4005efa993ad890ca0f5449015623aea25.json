{"ast":null,"code":"\"use strict\";\n\nconst cssom = require(\"cssom\");\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\nconst {\n  matchesDontThrow\n} = require(\"./selectors\");\nconst {\n  forEach,\n  indexOf\n} = Array.prototype;\nlet parsedDefaultStyleSheet;\n\n// Properties for which getResolvedValue is implemented. This is less than\n// every supported property.\n// https://drafts.csswg.org/indexes/#properties\nexports.propertiesWithResolvedValueImplemented = {\n  __proto__: null,\n  // https://drafts.csswg.org/css2/visufx.html#visibility\n  visibility: {\n    inherited: true,\n    initial: \"visible\",\n    computedValue: \"as-specified\"\n  }\n};\nexports.forEachMatchingSheetRuleOfElement = (elementImpl, handleRule) => {\n  function handleSheet(sheet) {\n    forEach.call(sheet.cssRules, rule => {\n      if (rule.media) {\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\n          forEach.call(rule.cssRules, innerRule => {\n            if (matches(innerRule, elementImpl)) {\n              handleRule(innerRule);\n            }\n          });\n        }\n      } else if (matches(rule, elementImpl)) {\n        handleRule(rule);\n      }\n    });\n  }\n  if (!parsedDefaultStyleSheet) {\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\n  }\n  handleSheet(parsedDefaultStyleSheet);\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\n};\nfunction matches(rule, element) {\n  return matchesDontThrow(element, rule.selectorText);\n}\n\n// Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\n// based on the previous jsdom implementation of getComputedStyle.\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\n// or rather specificity is only implemented by the order in which the matching\n// rules appear. The last rule is the most specific while the first rule is\n// the least specific.\nfunction getCascadedPropertyValue(element, property) {\n  let value = \"\";\n  exports.forEachMatchingSheetRuleOfElement(element, rule => {\n    const propertyValue = rule.style.getPropertyValue(property);\n    // getPropertyValue returns \"\" if the property is not found\n    if (propertyValue !== \"\") {\n      value = propertyValue;\n    }\n  });\n  const inlineValue = element.style.getPropertyValue(property);\n  if (inlineValue !== \"\" && inlineValue !== null) {\n    value = inlineValue;\n  }\n  return value;\n}\n\n// https://drafts.csswg.org/css-cascade-4/#specified-value\nfunction getSpecifiedValue(element, property) {\n  const cascade = getCascadedPropertyValue(element, property);\n  if (cascade !== \"\") {\n    return cascade;\n  }\n\n  // Defaulting\n  const {\n    initial,\n    inherited\n  } = exports.propertiesWithResolvedValueImplemented[property];\n  if (inherited && element.parentElement !== null) {\n    return getComputedValue(element.parentElement, property);\n  }\n\n  // root element without parent element or inherited property\n  return initial;\n}\n\n// https://drafts.csswg.org/css-cascade-4/#computed-value\nfunction getComputedValue(element, property) {\n  const {\n    computedValue\n  } = exports.propertiesWithResolvedValueImplemented[property];\n  if (computedValue === \"as-specified\") {\n    return getSpecifiedValue(element, property);\n  }\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\n}\n\n// https://drafts.csswg.org/cssom/#resolved-value\n// Only implements `visibility`\nexports.getResolvedValue = (element, property) => {\n  // Determined for special case properties, none of which are implemented here.\n  // So we skip to \"any other property: The resolved value is the computed value.\"\n  return getComputedValue(element, property);\n};\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;","map":{"version":3,"names":["cssom","require","defaultStyleSheet","matchesDontThrow","forEach","indexOf","Array","prototype","parsedDefaultStyleSheet","exports","propertiesWithResolvedValueImplemented","__proto__","visibility","inherited","initial","computedValue","forEachMatchingSheetRuleOfElement","elementImpl","handleRule","handleSheet","sheet","call","cssRules","rule","media","innerRule","matches","parse","_ownerDocument","styleSheets","_list","element","selectorText","getCascadedPropertyValue","property","value","propertyValue","style","getPropertyValue","inlineValue","getSpecifiedValue","cascade","parentElement","getComputedValue","TypeError","getResolvedValue","SHADOW_DOM_PSEUDO_REGEXP"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/helpers/style-rules.js"],"sourcesContent":["\"use strict\";\r\nconst cssom = require(\"cssom\");\r\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\r\nconst { matchesDontThrow } = require(\"./selectors\");\r\n\r\nconst { forEach, indexOf } = Array.prototype;\r\n\r\nlet parsedDefaultStyleSheet;\r\n\r\n// Properties for which getResolvedValue is implemented. This is less than\r\n// every supported property.\r\n// https://drafts.csswg.org/indexes/#properties\r\nexports.propertiesWithResolvedValueImplemented = {\r\n  __proto__: null,\r\n\r\n  // https://drafts.csswg.org/css2/visufx.html#visibility\r\n  visibility: {\r\n    inherited: true,\r\n    initial: \"visible\",\r\n    computedValue: \"as-specified\"\r\n  }\r\n};\r\n\r\nexports.forEachMatchingSheetRuleOfElement = (elementImpl, handleRule) => {\r\n  function handleSheet(sheet) {\r\n    forEach.call(sheet.cssRules, rule => {\r\n      if (rule.media) {\r\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\r\n          forEach.call(rule.cssRules, innerRule => {\r\n            if (matches(innerRule, elementImpl)) {\r\n              handleRule(innerRule);\r\n            }\r\n          });\r\n        }\r\n      } else if (matches(rule, elementImpl)) {\r\n        handleRule(rule);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!parsedDefaultStyleSheet) {\r\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\r\n  }\r\n\r\n  handleSheet(parsedDefaultStyleSheet);\r\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\r\n};\r\n\r\nfunction matches(rule, element) {\r\n  return matchesDontThrow(element, rule.selectorText);\r\n}\r\n\r\n// Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\r\n// based on the previous jsdom implementation of getComputedStyle.\r\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\r\n// or rather specificity is only implemented by the order in which the matching\r\n// rules appear. The last rule is the most specific while the first rule is\r\n// the least specific.\r\nfunction getCascadedPropertyValue(element, property) {\r\n  let value = \"\";\r\n\r\n  exports.forEachMatchingSheetRuleOfElement(element, rule => {\r\n    const propertyValue = rule.style.getPropertyValue(property);\r\n    // getPropertyValue returns \"\" if the property is not found\r\n    if (propertyValue !== \"\") {\r\n      value = propertyValue;\r\n    }\r\n  });\r\n\r\n  const inlineValue = element.style.getPropertyValue(property);\r\n  if (inlineValue !== \"\" && inlineValue !== null) {\r\n    value = inlineValue;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n// https://drafts.csswg.org/css-cascade-4/#specified-value\r\nfunction getSpecifiedValue(element, property) {\r\n  const cascade = getCascadedPropertyValue(element, property);\r\n\r\n  if (cascade !== \"\") {\r\n    return cascade;\r\n  }\r\n\r\n  // Defaulting\r\n  const { initial, inherited } = exports.propertiesWithResolvedValueImplemented[property];\r\n  if (inherited && element.parentElement !== null) {\r\n    return getComputedValue(element.parentElement, property);\r\n  }\r\n\r\n  // root element without parent element or inherited property\r\n  return initial;\r\n}\r\n\r\n// https://drafts.csswg.org/css-cascade-4/#computed-value\r\nfunction getComputedValue(element, property) {\r\n  const { computedValue } = exports.propertiesWithResolvedValueImplemented[property];\r\n  if (computedValue === \"as-specified\") {\r\n    return getSpecifiedValue(element, property);\r\n  }\r\n\r\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\r\n}\r\n\r\n// https://drafts.csswg.org/cssom/#resolved-value\r\n// Only implements `visibility`\r\nexports.getResolvedValue = (element, property) => {\r\n  // Determined for special case properties, none of which are implemented here.\r\n  // So we skip to \"any other property: The resolved value is the computed value.\"\r\n  return getComputedValue(element, property);\r\n};\r\n\r\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}