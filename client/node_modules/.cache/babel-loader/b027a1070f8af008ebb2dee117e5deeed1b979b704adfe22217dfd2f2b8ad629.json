{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst reportException = require(\"../helpers/runtime-script-errors\");\nconst idlUtils = require(\"../generated/utils\");\nconst {\n  nodeRoot\n} = require(\"../helpers/node\");\nconst {\n  isNode,\n  isShadowRoot,\n  isSlotable,\n  getEventTargetParent,\n  isShadowInclusiveAncestor,\n  retarget\n} = require(\"../helpers/shadow-dom\");\nconst MouseEvent = require(\"../generated/MouseEvent\");\nconst EVENT_PHASE = {\n  NONE: 0,\n  CAPTURING_PHASE: 1,\n  AT_TARGET: 2,\n  BUBBLING_PHASE: 3\n};\nclass EventTargetImpl {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n    this._eventListeners = Object.create(null);\n  }\n  addEventListener(type, callback, options) {\n    options = normalizeEventHandlerOptions(options, [\"capture\", \"once\", \"passive\"]);\n    if (callback === null) {\n      return;\n    }\n    if (!this._eventListeners[type]) {\n      this._eventListeners[type] = [];\n    }\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\n      const listener = this._eventListeners[type][i];\n      if (listener.callback.objectReference === callback.objectReference && listener.options.capture === options.capture) {\n        return;\n      }\n    }\n    this._eventListeners[type].push({\n      callback,\n      options\n    });\n  }\n  removeEventListener(type, callback, options) {\n    options = normalizeEventHandlerOptions(options, [\"capture\"]);\n    if (callback === null) {\n      // Optimization, not in the spec.\n      return;\n    }\n    if (!this._eventListeners[type]) {\n      return;\n    }\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\n      const listener = this._eventListeners[type][i];\n      if (listener.callback.objectReference === callback.objectReference && listener.options.capture === options.capture) {\n        this._eventListeners[type].splice(i, 1);\n        break;\n      }\n    }\n  }\n  dispatchEvent(eventImpl) {\n    if (eventImpl._dispatchFlag || !eventImpl._initializedFlag) {\n      throw DOMException.create(this._globalObject, [\"Tried to dispatch an uninitialized event\", \"InvalidStateError\"]);\n    }\n    if (eventImpl.eventPhase !== EVENT_PHASE.NONE) {\n      throw DOMException.create(this._globalObject, [\"Tried to dispatch a dispatching event\", \"InvalidStateError\"]);\n    }\n    eventImpl.isTrusted = false;\n    return this._dispatch(eventImpl);\n  }\n\n  // https://dom.spec.whatwg.org/#get-the-parent\n  _getTheParent() {\n    return null;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-event-dispatch\n  // legacyOutputDidListenersThrowFlag optional parameter is not necessary here since it is only used by indexDB.\n  _dispatch(eventImpl, targetOverride /* , legacyOutputDidListenersThrowFlag */) {\n    let targetImpl = this;\n    let clearTargets = false;\n    let activationTarget = null;\n    eventImpl._dispatchFlag = true;\n    targetOverride = targetOverride || targetImpl;\n    let relatedTarget = retarget(eventImpl.relatedTarget, targetImpl);\n    if (targetImpl !== relatedTarget || targetImpl === eventImpl.relatedTarget) {\n      const touchTargets = [];\n      appendToEventPath(eventImpl, targetImpl, targetOverride, relatedTarget, touchTargets, false);\n      const isActivationEvent = MouseEvent.isImpl(eventImpl) && eventImpl.type === \"click\";\n      if (isActivationEvent && targetImpl._hasActivationBehavior) {\n        activationTarget = targetImpl;\n      }\n      let slotInClosedTree = false;\n      let slotable = isSlotable(targetImpl) && targetImpl._assignedSlot ? targetImpl : null;\n      let parent = getEventTargetParent(targetImpl, eventImpl);\n\n      // Populate event path\n      // https://dom.spec.whatwg.org/#event-path\n      while (parent !== null) {\n        if (slotable !== null) {\n          if (parent.localName !== \"slot\") {\n            throw new Error(`JSDOM Internal Error: Expected parent to be a Slot`);\n          }\n          slotable = null;\n          const parentRoot = nodeRoot(parent);\n          if (isShadowRoot(parentRoot) && parentRoot.mode === \"closed\") {\n            slotInClosedTree = true;\n          }\n        }\n        if (isSlotable(parent) && parent._assignedSlot) {\n          slotable = parent;\n        }\n        relatedTarget = retarget(eventImpl.relatedTarget, parent);\n        if (isNode(parent) && isShadowInclusiveAncestor(nodeRoot(targetImpl), parent) || idlUtils.wrapperForImpl(parent).constructor.name === \"Window\") {\n          if (isActivationEvent && eventImpl.bubbles && activationTarget === null && parent._hasActivationBehavior) {\n            activationTarget = parent;\n          }\n          appendToEventPath(eventImpl, parent, null, relatedTarget, touchTargets, slotInClosedTree);\n        } else if (parent === relatedTarget) {\n          parent = null;\n        } else {\n          targetImpl = parent;\n          if (isActivationEvent && activationTarget === null && targetImpl._hasActivationBehavior) {\n            activationTarget = targetImpl;\n          }\n          appendToEventPath(eventImpl, parent, targetImpl, relatedTarget, touchTargets, slotInClosedTree);\n        }\n        if (parent !== null) {\n          parent = getEventTargetParent(parent, eventImpl);\n        }\n        slotInClosedTree = false;\n      }\n      let clearTargetsStructIndex = -1;\n      for (let i = eventImpl._path.length - 1; i >= 0 && clearTargetsStructIndex === -1; i--) {\n        if (eventImpl._path[i].target !== null) {\n          clearTargetsStructIndex = i;\n        }\n      }\n      const clearTargetsStruct = eventImpl._path[clearTargetsStructIndex];\n      clearTargets = isNode(clearTargetsStruct.target) && isShadowRoot(nodeRoot(clearTargetsStruct.target)) || isNode(clearTargetsStruct.relatedTarget) && isShadowRoot(nodeRoot(clearTargetsStruct.relatedTarget));\n      if (activationTarget !== null && activationTarget._legacyPreActivationBehavior) {\n        activationTarget._legacyPreActivationBehavior();\n      }\n      for (let i = eventImpl._path.length - 1; i >= 0; --i) {\n        const struct = eventImpl._path[i];\n        if (struct.target !== null) {\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\n        } else {\n          eventImpl.eventPhase = EVENT_PHASE.CAPTURING_PHASE;\n        }\n        invokeEventListeners(struct, eventImpl, \"capturing\");\n      }\n      for (let i = 0; i < eventImpl._path.length; i++) {\n        const struct = eventImpl._path[i];\n        if (struct.target !== null) {\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\n        } else {\n          if (!eventImpl.bubbles) {\n            continue;\n          }\n          eventImpl.eventPhase = EVENT_PHASE.BUBBLING_PHASE;\n        }\n        invokeEventListeners(struct, eventImpl, \"bubbling\");\n      }\n    }\n    eventImpl.eventPhase = EVENT_PHASE.NONE;\n    eventImpl.currentTarget = null;\n    eventImpl._path = [];\n    eventImpl._dispatchFlag = false;\n    eventImpl._stopPropagationFlag = false;\n    eventImpl._stopImmediatePropagationFlag = false;\n    if (clearTargets) {\n      eventImpl.target = null;\n      eventImpl.relatedTarget = null;\n    }\n    if (activationTarget !== null) {\n      if (!eventImpl._canceledFlag) {\n        activationTarget._activationBehavior(eventImpl);\n      } else if (activationTarget._legacyCanceledActivationBehavior) {\n        activationTarget._legacyCanceledActivationBehavior();\n      }\n    }\n    return !eventImpl._canceledFlag;\n  }\n}\nmodule.exports = {\n  implementation: EventTargetImpl\n};\n\n// https://dom.spec.whatwg.org/#concept-event-listener-invoke\nfunction invokeEventListeners(struct, eventImpl, phase) {\n  const structIndex = eventImpl._path.indexOf(struct);\n  for (let i = structIndex; i >= 0; i--) {\n    const t = eventImpl._path[i];\n    if (t.target) {\n      eventImpl.target = t.target;\n      break;\n    }\n  }\n  eventImpl.relatedTarget = idlUtils.wrapperForImpl(struct.relatedTarget);\n  if (eventImpl._stopPropagationFlag) {\n    return;\n  }\n  eventImpl.currentTarget = idlUtils.wrapperForImpl(struct.item);\n  const listeners = struct.item._eventListeners;\n  innerInvokeEventListeners(eventImpl, listeners, phase, struct.itemInShadowTree);\n}\n\n// https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\nfunction innerInvokeEventListeners(eventImpl, listeners, phase, itemInShadowTree) {\n  let found = false;\n  const {\n    type,\n    target\n  } = eventImpl;\n  const wrapper = idlUtils.wrapperForImpl(target);\n  if (!listeners || !listeners[type]) {\n    return found;\n  }\n\n  // Copy event listeners before iterating since the list can be modified during the iteration.\n  const handlers = listeners[type].slice();\n  for (let i = 0; i < handlers.length; i++) {\n    const listener = handlers[i];\n    const {\n      capture,\n      once,\n      passive\n    } = listener.options;\n\n    // Check if the event listener has been removed since the listeners has been cloned.\n    if (!listeners[type].includes(listener)) {\n      continue;\n    }\n    found = true;\n    if (phase === \"capturing\" && !capture || phase === \"bubbling\" && capture) {\n      continue;\n    }\n    if (once) {\n      listeners[type].splice(listeners[type].indexOf(listener), 1);\n    }\n    let window = null;\n    if (wrapper && wrapper._document) {\n      // Triggered by Window\n      window = wrapper;\n    } else if (target._ownerDocument) {\n      // Triggered by most webidl2js'ed instances\n      window = target._ownerDocument._defaultView;\n    } else if (wrapper._ownerDocument) {\n      // Currently triggered by some non-webidl2js things\n      window = wrapper._ownerDocument._defaultView;\n    }\n    let currentEvent;\n    if (window) {\n      currentEvent = window._currentEvent;\n      if (!itemInShadowTree) {\n        window._currentEvent = eventImpl;\n      }\n    }\n    if (passive) {\n      eventImpl._inPassiveListenerFlag = true;\n    }\n    try {\n      listener.callback.call(eventImpl.currentTarget, eventImpl);\n    } catch (e) {\n      if (window) {\n        reportException(window, e);\n      }\n      // Errors in window-less documents just get swallowed... can you think of anything better?\n    }\n\n    eventImpl._inPassiveListenerFlag = false;\n    if (window) {\n      window._currentEvent = currentEvent;\n    }\n    if (eventImpl._stopImmediatePropagationFlag) {\n      return found;\n    }\n  }\n  return found;\n}\n\n/**\r\n * Normalize the event listeners options argument in order to get always a valid options object\r\n * @param   {Object} options         - user defined options\r\n * @param   {Array} defaultBoolKeys  - boolean properties that should belong to the options object\r\n * @returns {Object} object containing at least the \"defaultBoolKeys\"\r\n */\nfunction normalizeEventHandlerOptions(options, defaultBoolKeys) {\n  const returnValue = {};\n\n  // no need to go further here\n  if (typeof options === \"boolean\" || options === null || typeof options === \"undefined\") {\n    returnValue.capture = Boolean(options);\n    return returnValue;\n  }\n\n  // non objects options so we typecast its value as \"capture\" value\n  if (typeof options !== \"object\") {\n    returnValue.capture = Boolean(options);\n    // at this point we don't need to loop the \"capture\" key anymore\n    defaultBoolKeys = defaultBoolKeys.filter(k => k !== \"capture\");\n  }\n  for (const key of defaultBoolKeys) {\n    returnValue[key] = Boolean(options[key]);\n  }\n  return returnValue;\n}\n\n// https://dom.spec.whatwg.org/#concept-event-path-append\nfunction appendToEventPath(eventImpl, target, targetOverride, relatedTarget, touchTargets, slotInClosedTree) {\n  const itemInShadowTree = isNode(target) && isShadowRoot(nodeRoot(target));\n  const rootOfClosedTree = isShadowRoot(target) && target.mode === \"closed\";\n  eventImpl._path.push({\n    item: target,\n    itemInShadowTree,\n    target: targetOverride,\n    relatedTarget,\n    touchTargets,\n    rootOfClosedTree,\n    slotInClosedTree\n  });\n}","map":{"version":3,"names":["DOMException","require","reportException","idlUtils","nodeRoot","isNode","isShadowRoot","isSlotable","getEventTargetParent","isShadowInclusiveAncestor","retarget","MouseEvent","EVENT_PHASE","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","EventTargetImpl","constructor","globalObject","_globalObject","_eventListeners","Object","create","addEventListener","type","callback","options","normalizeEventHandlerOptions","i","length","listener","objectReference","capture","push","removeEventListener","splice","dispatchEvent","eventImpl","_dispatchFlag","_initializedFlag","eventPhase","isTrusted","_dispatch","_getTheParent","targetOverride","targetImpl","clearTargets","activationTarget","relatedTarget","touchTargets","appendToEventPath","isActivationEvent","isImpl","_hasActivationBehavior","slotInClosedTree","slotable","_assignedSlot","parent","localName","Error","parentRoot","mode","wrapperForImpl","name","bubbles","clearTargetsStructIndex","_path","target","clearTargetsStruct","_legacyPreActivationBehavior","struct","invokeEventListeners","currentTarget","_stopPropagationFlag","_stopImmediatePropagationFlag","_canceledFlag","_activationBehavior","_legacyCanceledActivationBehavior","module","exports","implementation","phase","structIndex","indexOf","t","item","listeners","innerInvokeEventListeners","itemInShadowTree","found","wrapper","handlers","slice","once","passive","includes","window","_document","_ownerDocument","_defaultView","currentEvent","_currentEvent","_inPassiveListenerFlag","call","e","defaultBoolKeys","returnValue","Boolean","filter","k","key","rootOfClosedTree"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js"],"sourcesContent":["\"use strict\";\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\n\r\nconst reportException = require(\"../helpers/runtime-script-errors\");\r\nconst idlUtils = require(\"../generated/utils\");\r\nconst { nodeRoot } = require(\"../helpers/node\");\r\nconst {\r\n  isNode, isShadowRoot, isSlotable, getEventTargetParent,\r\n  isShadowInclusiveAncestor, retarget\r\n} = require(\"../helpers/shadow-dom\");\r\n\r\nconst MouseEvent = require(\"../generated/MouseEvent\");\r\n\r\nconst EVENT_PHASE = {\r\n  NONE: 0,\r\n  CAPTURING_PHASE: 1,\r\n  AT_TARGET: 2,\r\n  BUBBLING_PHASE: 3\r\n};\r\n\r\nclass EventTargetImpl {\r\n  constructor(globalObject) {\r\n    this._globalObject = globalObject;\r\n    this._eventListeners = Object.create(null);\r\n  }\r\n\r\n  addEventListener(type, callback, options) {\r\n    options = normalizeEventHandlerOptions(options, [\"capture\", \"once\", \"passive\"]);\r\n\r\n    if (callback === null) {\r\n      return;\r\n    }\r\n\r\n    if (!this._eventListeners[type]) {\r\n      this._eventListeners[type] = [];\r\n    }\r\n\r\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\r\n      const listener = this._eventListeners[type][i];\r\n      if (\r\n        listener.callback.objectReference === callback.objectReference &&\r\n        listener.options.capture === options.capture\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this._eventListeners[type].push({\r\n      callback,\r\n      options\r\n    });\r\n  }\r\n\r\n  removeEventListener(type, callback, options) {\r\n    options = normalizeEventHandlerOptions(options, [\"capture\"]);\r\n\r\n    if (callback === null) {\r\n      // Optimization, not in the spec.\r\n      return;\r\n    }\r\n\r\n    if (!this._eventListeners[type]) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\r\n      const listener = this._eventListeners[type][i];\r\n      if (\r\n        listener.callback.objectReference === callback.objectReference &&\r\n        listener.options.capture === options.capture\r\n      ) {\r\n        this._eventListeners[type].splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent(eventImpl) {\r\n    if (eventImpl._dispatchFlag || !eventImpl._initializedFlag) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"Tried to dispatch an uninitialized event\",\r\n        \"InvalidStateError\"\r\n      ]);\r\n    }\r\n    if (eventImpl.eventPhase !== EVENT_PHASE.NONE) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"Tried to dispatch a dispatching event\",\r\n        \"InvalidStateError\"\r\n      ]);\r\n    }\r\n\r\n    eventImpl.isTrusted = false;\r\n\r\n    return this._dispatch(eventImpl);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#get-the-parent\r\n  _getTheParent() {\r\n    return null;\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-event-dispatch\r\n  // legacyOutputDidListenersThrowFlag optional parameter is not necessary here since it is only used by indexDB.\r\n  _dispatch(eventImpl, targetOverride /* , legacyOutputDidListenersThrowFlag */) {\r\n    let targetImpl = this;\r\n    let clearTargets = false;\r\n    let activationTarget = null;\r\n\r\n    eventImpl._dispatchFlag = true;\r\n\r\n    targetOverride = targetOverride || targetImpl;\r\n    let relatedTarget = retarget(eventImpl.relatedTarget, targetImpl);\r\n\r\n    if (targetImpl !== relatedTarget || targetImpl === eventImpl.relatedTarget) {\r\n      const touchTargets = [];\r\n\r\n      appendToEventPath(eventImpl, targetImpl, targetOverride, relatedTarget, touchTargets, false);\r\n\r\n      const isActivationEvent = MouseEvent.isImpl(eventImpl) && eventImpl.type === \"click\";\r\n\r\n      if (isActivationEvent && targetImpl._hasActivationBehavior) {\r\n        activationTarget = targetImpl;\r\n      }\r\n\r\n      let slotInClosedTree = false;\r\n      let slotable = isSlotable(targetImpl) && targetImpl._assignedSlot ? targetImpl : null;\r\n      let parent = getEventTargetParent(targetImpl, eventImpl);\r\n\r\n      // Populate event path\r\n      // https://dom.spec.whatwg.org/#event-path\r\n      while (parent !== null) {\r\n        if (slotable !== null) {\r\n          if (parent.localName !== \"slot\") {\r\n            throw new Error(`JSDOM Internal Error: Expected parent to be a Slot`);\r\n          }\r\n\r\n          slotable = null;\r\n\r\n          const parentRoot = nodeRoot(parent);\r\n          if (isShadowRoot(parentRoot) && parentRoot.mode === \"closed\") {\r\n            slotInClosedTree = true;\r\n          }\r\n        }\r\n\r\n        if (isSlotable(parent) && parent._assignedSlot) {\r\n          slotable = parent;\r\n        }\r\n\r\n        relatedTarget = retarget(eventImpl.relatedTarget, parent);\r\n\r\n        if (\r\n          (isNode(parent) && isShadowInclusiveAncestor(nodeRoot(targetImpl), parent)) ||\r\n          idlUtils.wrapperForImpl(parent).constructor.name === \"Window\"\r\n        ) {\r\n          if (isActivationEvent && eventImpl.bubbles && activationTarget === null &&\r\n              parent._hasActivationBehavior) {\r\n            activationTarget = parent;\r\n          }\r\n\r\n          appendToEventPath(eventImpl, parent, null, relatedTarget, touchTargets, slotInClosedTree);\r\n        } else if (parent === relatedTarget) {\r\n          parent = null;\r\n        } else {\r\n          targetImpl = parent;\r\n\r\n          if (isActivationEvent && activationTarget === null && targetImpl._hasActivationBehavior) {\r\n            activationTarget = targetImpl;\r\n          }\r\n\r\n          appendToEventPath(eventImpl, parent, targetImpl, relatedTarget, touchTargets, slotInClosedTree);\r\n        }\r\n\r\n        if (parent !== null) {\r\n          parent = getEventTargetParent(parent, eventImpl);\r\n        }\r\n\r\n        slotInClosedTree = false;\r\n      }\r\n\r\n      let clearTargetsStructIndex = -1;\r\n      for (let i = eventImpl._path.length - 1; i >= 0 && clearTargetsStructIndex === -1; i--) {\r\n        if (eventImpl._path[i].target !== null) {\r\n          clearTargetsStructIndex = i;\r\n        }\r\n      }\r\n      const clearTargetsStruct = eventImpl._path[clearTargetsStructIndex];\r\n\r\n      clearTargets =\r\n          (isNode(clearTargetsStruct.target) && isShadowRoot(nodeRoot(clearTargetsStruct.target))) ||\r\n          (isNode(clearTargetsStruct.relatedTarget) && isShadowRoot(nodeRoot(clearTargetsStruct.relatedTarget)));\r\n\r\n      if (activationTarget !== null && activationTarget._legacyPreActivationBehavior) {\r\n        activationTarget._legacyPreActivationBehavior();\r\n      }\r\n\r\n      for (let i = eventImpl._path.length - 1; i >= 0; --i) {\r\n        const struct = eventImpl._path[i];\r\n\r\n        if (struct.target !== null) {\r\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\r\n        } else {\r\n          eventImpl.eventPhase = EVENT_PHASE.CAPTURING_PHASE;\r\n        }\r\n\r\n        invokeEventListeners(struct, eventImpl, \"capturing\");\r\n      }\r\n\r\n      for (let i = 0; i < eventImpl._path.length; i++) {\r\n        const struct = eventImpl._path[i];\r\n\r\n        if (struct.target !== null) {\r\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\r\n        } else {\r\n          if (!eventImpl.bubbles) {\r\n            continue;\r\n          }\r\n\r\n          eventImpl.eventPhase = EVENT_PHASE.BUBBLING_PHASE;\r\n        }\r\n\r\n        invokeEventListeners(struct, eventImpl, \"bubbling\");\r\n      }\r\n    }\r\n\r\n    eventImpl.eventPhase = EVENT_PHASE.NONE;\r\n\r\n    eventImpl.currentTarget = null;\r\n    eventImpl._path = [];\r\n    eventImpl._dispatchFlag = false;\r\n    eventImpl._stopPropagationFlag = false;\r\n    eventImpl._stopImmediatePropagationFlag = false;\r\n\r\n    if (clearTargets) {\r\n      eventImpl.target = null;\r\n      eventImpl.relatedTarget = null;\r\n    }\r\n\r\n    if (activationTarget !== null) {\r\n      if (!eventImpl._canceledFlag) {\r\n        activationTarget._activationBehavior(eventImpl);\r\n      } else if (activationTarget._legacyCanceledActivationBehavior) {\r\n        activationTarget._legacyCanceledActivationBehavior();\r\n      }\r\n    }\r\n\r\n    return !eventImpl._canceledFlag;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: EventTargetImpl\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#concept-event-listener-invoke\r\nfunction invokeEventListeners(struct, eventImpl, phase) {\r\n  const structIndex = eventImpl._path.indexOf(struct);\r\n  for (let i = structIndex; i >= 0; i--) {\r\n    const t = eventImpl._path[i];\r\n    if (t.target) {\r\n      eventImpl.target = t.target;\r\n      break;\r\n    }\r\n  }\r\n\r\n  eventImpl.relatedTarget = idlUtils.wrapperForImpl(struct.relatedTarget);\r\n\r\n  if (eventImpl._stopPropagationFlag) {\r\n    return;\r\n  }\r\n\r\n  eventImpl.currentTarget = idlUtils.wrapperForImpl(struct.item);\r\n\r\n  const listeners = struct.item._eventListeners;\r\n  innerInvokeEventListeners(eventImpl, listeners, phase, struct.itemInShadowTree);\r\n}\r\n\r\n// https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\r\nfunction innerInvokeEventListeners(eventImpl, listeners, phase, itemInShadowTree) {\r\n  let found = false;\r\n\r\n  const { type, target } = eventImpl;\r\n  const wrapper = idlUtils.wrapperForImpl(target);\r\n\r\n  if (!listeners || !listeners[type]) {\r\n    return found;\r\n  }\r\n\r\n  // Copy event listeners before iterating since the list can be modified during the iteration.\r\n  const handlers = listeners[type].slice();\r\n\r\n  for (let i = 0; i < handlers.length; i++) {\r\n    const listener = handlers[i];\r\n    const { capture, once, passive } = listener.options;\r\n\r\n    // Check if the event listener has been removed since the listeners has been cloned.\r\n    if (!listeners[type].includes(listener)) {\r\n      continue;\r\n    }\r\n\r\n    found = true;\r\n\r\n    if (\r\n      (phase === \"capturing\" && !capture) ||\r\n      (phase === \"bubbling\" && capture)\r\n    ) {\r\n      continue;\r\n    }\r\n\r\n    if (once) {\r\n      listeners[type].splice(listeners[type].indexOf(listener), 1);\r\n    }\r\n\r\n    let window = null;\r\n    if (wrapper && wrapper._document) {\r\n      // Triggered by Window\r\n      window = wrapper;\r\n    } else if (target._ownerDocument) {\r\n      // Triggered by most webidl2js'ed instances\r\n      window = target._ownerDocument._defaultView;\r\n    } else if (wrapper._ownerDocument) {\r\n      // Currently triggered by some non-webidl2js things\r\n      window = wrapper._ownerDocument._defaultView;\r\n    }\r\n\r\n    let currentEvent;\r\n    if (window) {\r\n      currentEvent = window._currentEvent;\r\n      if (!itemInShadowTree) {\r\n        window._currentEvent = eventImpl;\r\n      }\r\n    }\r\n\r\n    if (passive) {\r\n      eventImpl._inPassiveListenerFlag = true;\r\n    }\r\n\r\n    try {\r\n      listener.callback.call(eventImpl.currentTarget, eventImpl);\r\n    } catch (e) {\r\n      if (window) {\r\n        reportException(window, e);\r\n      }\r\n      // Errors in window-less documents just get swallowed... can you think of anything better?\r\n    }\r\n\r\n    eventImpl._inPassiveListenerFlag = false;\r\n\r\n    if (window) {\r\n      window._currentEvent = currentEvent;\r\n    }\r\n\r\n    if (eventImpl._stopImmediatePropagationFlag) {\r\n      return found;\r\n    }\r\n  }\r\n\r\n  return found;\r\n}\r\n\r\n/**\r\n * Normalize the event listeners options argument in order to get always a valid options object\r\n * @param   {Object} options         - user defined options\r\n * @param   {Array} defaultBoolKeys  - boolean properties that should belong to the options object\r\n * @returns {Object} object containing at least the \"defaultBoolKeys\"\r\n */\r\nfunction normalizeEventHandlerOptions(options, defaultBoolKeys) {\r\n  const returnValue = {};\r\n\r\n  // no need to go further here\r\n  if (typeof options === \"boolean\" || options === null || typeof options === \"undefined\") {\r\n    returnValue.capture = Boolean(options);\r\n    return returnValue;\r\n  }\r\n\r\n  // non objects options so we typecast its value as \"capture\" value\r\n  if (typeof options !== \"object\") {\r\n    returnValue.capture = Boolean(options);\r\n    // at this point we don't need to loop the \"capture\" key anymore\r\n    defaultBoolKeys = defaultBoolKeys.filter(k => k !== \"capture\");\r\n  }\r\n\r\n  for (const key of defaultBoolKeys) {\r\n    returnValue[key] = Boolean(options[key]);\r\n  }\r\n\r\n  return returnValue;\r\n}\r\n\r\n// https://dom.spec.whatwg.org/#concept-event-path-append\r\nfunction appendToEventPath(eventImpl, target, targetOverride, relatedTarget, touchTargets, slotInClosedTree) {\r\n  const itemInShadowTree = isNode(target) && isShadowRoot(nodeRoot(target));\r\n  const rootOfClosedTree = isShadowRoot(target) && target.mode === \"closed\";\r\n\r\n  eventImpl._path.push({\r\n    item: target,\r\n    itemInShadowTree,\r\n    target: targetOverride,\r\n    relatedTarget,\r\n    touchTargets,\r\n    rootOfClosedTree,\r\n    slotInClosedTree\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}