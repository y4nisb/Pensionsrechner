{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\nconst {\n  simultaneousIterators\n} = require(\"../../utils\");\nconst NODE_TYPE = require(\"../node-type\");\nconst NODE_DOCUMENT_POSITION = require(\"../node-document-position\");\nconst {\n  clone,\n  locateNamespacePrefix,\n  locateNamespace\n} = require(\"../node\");\nconst {\n  setAnExistingAttributeValue\n} = require(\"../attributes\");\nconst NodeList = require(\"../generated/NodeList\");\nconst {\n  nodeRoot,\n  nodeLength\n} = require(\"../helpers/node\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst {\n  documentBaseURLSerialized\n} = require(\"../helpers/document-base-url\");\nconst {\n  queueTreeMutationRecord\n} = require(\"../helpers/mutation-observers\");\nconst {\n  enqueueCECallbackReaction,\n  tryUpgradeElement\n} = require(\"../helpers/custom-elements\");\nconst {\n  isShadowRoot,\n  shadowIncludingRoot,\n  assignSlot,\n  assignSlotableForTree,\n  assignSlotable,\n  signalSlotChange,\n  isSlot,\n  shadowIncludingInclusiveDescendantsIterator,\n  shadowIncludingDescendantsIterator\n} = require(\"../helpers/shadow-dom\");\nfunction isObsoleteNodeType(node) {\n  return node.nodeType === NODE_TYPE.ENTITY_NODE || node.nodeType === NODE_TYPE.ENTITY_REFERENCE_NODE || node.nodeType === NODE_TYPE.NOTATION_NODE || node.nodeType === NODE_TYPE.CDATA_SECTION_NODE;\n}\nfunction nodeEquals(a, b) {\n  if (a.nodeType !== b.nodeType) {\n    return false;\n  }\n  switch (a.nodeType) {\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      if (a.name !== b.name || a.publicId !== b.publicId || a.systemId !== b.systemId) {\n        return false;\n      }\n      break;\n    case NODE_TYPE.ELEMENT_NODE:\n      if (a._namespaceURI !== b._namespaceURI || a._prefix !== b._prefix || a._localName !== b._localName || a._attributes.length !== b._attributes.length) {\n        return false;\n      }\n      break;\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      if (a._namespace !== b._namespace || a._localName !== b._localName || a._value !== b._value) {\n        return false;\n      }\n      break;\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      if (a._target !== b._target || a._data !== b._data) {\n        return false;\n      }\n      break;\n    case NODE_TYPE.TEXT_NODE:\n    case NODE_TYPE.COMMENT_NODE:\n      if (a._data !== b._data) {\n        return false;\n      }\n      break;\n  }\n  if (a.nodeType === NODE_TYPE.ELEMENT_NODE && !attributeListsEqual(a, b)) {\n    return false;\n  }\n  for (const nodes of simultaneousIterators(domSymbolTree.childrenIterator(a), domSymbolTree.childrenIterator(b))) {\n    if (!nodes[0] || !nodes[1]) {\n      // mismatch in the amount of childNodes\n      return false;\n    }\n    if (!nodeEquals(nodes[0], nodes[1])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Needed by https://dom.spec.whatwg.org/#concept-node-equals\nfunction attributeListsEqual(elementA, elementB) {\n  const listA = elementA._attributeList;\n  const listB = elementB._attributeList;\n  const lengthA = listA.length;\n  const lengthB = listB.length;\n  if (lengthA !== lengthB) {\n    return false;\n  }\n  for (let i = 0; i < lengthA; ++i) {\n    const attrA = listA[i];\n    if (!listB.some(attrB => nodeEquals(attrA, attrB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// https://dom.spec.whatwg.org/#concept-tree-host-including-inclusive-ancestor\nfunction isHostInclusiveAncestor(nodeImplA, nodeImplB) {\n  for (const ancestor of domSymbolTree.ancestorsIterator(nodeImplB)) {\n    if (ancestor === nodeImplA) {\n      return true;\n    }\n  }\n  const rootImplB = nodeRoot(nodeImplB);\n  if (rootImplB._host) {\n    return isHostInclusiveAncestor(nodeImplA, rootImplB._host);\n  }\n  return false;\n}\nclass NodeImpl extends EventTargetImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    domSymbolTree.initialize(this);\n    this._ownerDocument = privateData.ownerDocument;\n    this._childNodesList = null;\n    this._childrenList = null;\n    this._version = 0;\n    this._memoizedQueries = {};\n    this._registeredObserverList = [];\n    this._referencedRanges = new Set();\n  }\n  _getTheParent() {\n    if (this._assignedSlot) {\n      return this._assignedSlot;\n    }\n    return domSymbolTree.parent(this);\n  }\n  get parentNode() {\n    return domSymbolTree.parent(this);\n  }\n  getRootNode(options) {\n    return options.composed ? shadowIncludingRoot(this) : nodeRoot(this);\n  }\n  get nodeName() {\n    switch (this.nodeType) {\n      case NODE_TYPE.ELEMENT_NODE:\n        return this.tagName;\n      case NODE_TYPE.ATTRIBUTE_NODE:\n        return this._qualifiedName;\n      case NODE_TYPE.TEXT_NODE:\n        return \"#text\";\n      case NODE_TYPE.CDATA_SECTION_NODE:\n        return \"#cdata-section\";\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n        return this.target;\n      case NODE_TYPE.COMMENT_NODE:\n        return \"#comment\";\n      case NODE_TYPE.DOCUMENT_NODE:\n        return \"#document\";\n      case NODE_TYPE.DOCUMENT_TYPE_NODE:\n        return this.name;\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n        return \"#document-fragment\";\n    }\n\n    // should never happen\n    return null;\n  }\n  get firstChild() {\n    return domSymbolTree.firstChild(this);\n  }\n\n  // https://dom.spec.whatwg.org/#connected\n  // https://dom.spec.whatwg.org/#dom-node-isconnected\n  get isConnected() {\n    const root = shadowIncludingRoot(this);\n    return root && root.nodeType === NODE_TYPE.DOCUMENT_NODE;\n  }\n  get ownerDocument() {\n    return this.nodeType === NODE_TYPE.DOCUMENT_NODE ? null : this._ownerDocument;\n  }\n  get lastChild() {\n    return domSymbolTree.lastChild(this);\n  }\n  get childNodes() {\n    if (!this._childNodesList) {\n      this._childNodesList = NodeList.createImpl(this._globalObject, [], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this)\n      });\n    } else {\n      this._childNodesList._update();\n    }\n    return this._childNodesList;\n  }\n  get nextSibling() {\n    return domSymbolTree.nextSibling(this);\n  }\n  get previousSibling() {\n    return domSymbolTree.previousSibling(this);\n  }\n  _modified() {\n    this._version++;\n    for (const ancestor of domSymbolTree.ancestorsIterator(this)) {\n      ancestor._version++;\n    }\n    if (this._childrenList) {\n      this._childrenList._update();\n    }\n    if (this._childNodesList) {\n      this._childNodesList._update();\n    }\n    this._clearMemoizedQueries();\n  }\n  _childTextContentChangeSteps() {\n    // Default: do nothing\n  }\n  _clearMemoizedQueries() {\n    this._memoizedQueries = {};\n    const myParent = domSymbolTree.parent(this);\n    if (myParent) {\n      myParent._clearMemoizedQueries();\n    }\n  }\n  _descendantRemoved(parent, child) {\n    const myParent = domSymbolTree.parent(this);\n    if (myParent) {\n      myParent._descendantRemoved(parent, child);\n    }\n  }\n  _descendantAdded(parent, child) {\n    const myParent = domSymbolTree.parent(this);\n    if (myParent) {\n      myParent._descendantAdded(parent, child);\n    }\n  }\n  _attach() {\n    this._attached = true;\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child._attach) {\n        child._attach();\n      }\n    }\n  }\n  _detach() {\n    this._attached = false;\n    if (this._ownerDocument && this._ownerDocument._lastFocusedElement === this) {\n      this._ownerDocument._lastFocusedElement = null;\n    }\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child._detach) {\n        child._detach();\n      }\n    }\n  }\n  hasChildNodes() {\n    return domSymbolTree.hasChildren(this);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-normalize\n  normalize() {\n    // It is important to use a treeToArray instead of a treeToIterator here, because the\n    // treeToIterator doesn't support tree mutation in the middle of the traversal.\n    for (const node of domSymbolTree.treeToArray(this)) {\n      const parentNode = domSymbolTree.parent(node);\n      if (parentNode === null || node.nodeType !== NODE_TYPE.TEXT_NODE) {\n        continue;\n      }\n      let length = nodeLength(node);\n      if (length === 0) {\n        parentNode._remove(node);\n        continue;\n      }\n      const continuousExclusiveTextNodes = [];\n      for (const currentNode of domSymbolTree.previousSiblingsIterator(node)) {\n        if (currentNode.nodeType !== NODE_TYPE.TEXT_NODE) {\n          break;\n        }\n        continuousExclusiveTextNodes.unshift(currentNode);\n      }\n      for (const currentNode of domSymbolTree.nextSiblingsIterator(node)) {\n        if (currentNode.nodeType !== NODE_TYPE.TEXT_NODE) {\n          break;\n        }\n        continuousExclusiveTextNodes.push(currentNode);\n      }\n      const data = continuousExclusiveTextNodes.reduce((d, n) => d + n._data, \"\");\n      node.replaceData(length, 0, data);\n      let currentNode = domSymbolTree.nextSibling(node);\n      while (currentNode && currentNode.nodeType !== NODE_TYPE.TEXT_NODE) {\n        const currentNodeParent = domSymbolTree.parent(currentNode);\n        const currentNodeIndex = domSymbolTree.index(currentNode);\n        for (const range of node._referencedRanges) {\n          const {\n            _start,\n            _end\n          } = range;\n          if (_start.node === currentNode) {\n            range._setLiveRangeStart(node, _start.offset + length);\n          }\n          if (_end.node === currentNode) {\n            range._setLiveRangeEnd(node, _end.offset + length);\n          }\n          if (_start.node === currentNodeParent && _start.offset === currentNodeIndex) {\n            range._setLiveRangeStart(node, length);\n          }\n          if (_end.node === currentNodeParent && _end.offset === currentNodeIndex) {\n            range._setLiveRangeStart(node, length);\n          }\n        }\n        length += nodeLength(currentNode);\n        currentNode = domSymbolTree.nextSibling(currentNode);\n      }\n      for (const continuousExclusiveTextNode of continuousExclusiveTextNodes) {\n        parentNode._remove(continuousExclusiveTextNode);\n      }\n    }\n  }\n  get parentElement() {\n    const parentNode = domSymbolTree.parent(this);\n    return parentNode !== null && parentNode.nodeType === NODE_TYPE.ELEMENT_NODE ? parentNode : null;\n  }\n  get baseURI() {\n    return documentBaseURLSerialized(this._ownerDocument);\n  }\n  compareDocumentPosition(other) {\n    // Let node1 be other and node2 be the context object.\n    let node1 = other;\n    let node2 = this;\n    if (isObsoleteNodeType(node2) || isObsoleteNodeType(node1)) {\n      throw new Error(\"Obsolete node type\");\n    }\n    let attr1 = null;\n    let attr2 = null;\n    if (node1.nodeType === NODE_TYPE.ATTRIBUTE_NODE) {\n      attr1 = node1;\n      node1 = attr1._element;\n    }\n    if (node2.nodeType === NODE_TYPE.ATTRIBUTE_NODE) {\n      attr2 = node2;\n      node2 = attr2._element;\n      if (attr1 !== null && node1 !== null && node2 === node1) {\n        for (const attr of node2._attributeList) {\n          if (nodeEquals(attr, attr1)) {\n            return NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC | NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_PRECEDING;\n          }\n          if (nodeEquals(attr, attr2)) {\n            return NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC | NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_FOLLOWING;\n          }\n        }\n      }\n    }\n    const result = domSymbolTree.compareTreePosition(node2, node1);\n\n    // “If other and reference are not in the same tree, return the result of adding DOCUMENT_POSITION_DISCONNECTED,\n    //  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, and either DOCUMENT_POSITION_PRECEDING or\n    // DOCUMENT_POSITION_FOLLOWING, with the constraint that this is to be consistent, together.”\n    if (result === NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_DISCONNECTED) {\n      // symbol-tree does not add these bits required by the spec:\n      return NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_DISCONNECTED | NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC | NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_FOLLOWING;\n    }\n    return result;\n  }\n  lookupPrefix(namespace) {\n    if (namespace === null || namespace === \"\") {\n      return null;\n    }\n    switch (this.nodeType) {\n      case NODE_TYPE.ELEMENT_NODE:\n        {\n          return locateNamespacePrefix(this, namespace);\n        }\n      case NODE_TYPE.DOCUMENT_NODE:\n        {\n          return this.documentElement !== null ? locateNamespacePrefix(this.documentElement, namespace) : null;\n        }\n      case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n        {\n          return null;\n        }\n      case NODE_TYPE.ATTRIBUTE_NODE:\n        {\n          return this._element !== null ? locateNamespacePrefix(this._element, namespace) : null;\n        }\n      default:\n        {\n          return this.parentElement !== null ? locateNamespacePrefix(this.parentElement, namespace) : null;\n        }\n    }\n  }\n  lookupNamespaceURI(prefix) {\n    if (prefix === \"\") {\n      prefix = null;\n    }\n    return locateNamespace(this, prefix);\n  }\n  isDefaultNamespace(namespace) {\n    if (namespace === \"\") {\n      namespace = null;\n    }\n    const defaultNamespace = locateNamespace(this, null);\n    return defaultNamespace === namespace;\n  }\n  contains(other) {\n    if (other === null) {\n      return false;\n    } else if (this === other) {\n      return true;\n    }\n    return Boolean(this.compareDocumentPosition(other) & NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_CONTAINED_BY);\n  }\n  isEqualNode(node) {\n    if (node === null) {\n      return false;\n    }\n\n    // Fast-path, not in the spec\n    if (this === node) {\n      return true;\n    }\n    return nodeEquals(this, node);\n  }\n  isSameNode(node) {\n    if (this === node) {\n      return true;\n    }\n    return false;\n  }\n  cloneNode(deep) {\n    if (isShadowRoot(this)) {\n      throw DOMException.create(this._globalObject, [\"ShadowRoot nodes are not clonable.\", \"NotSupportedError\"]);\n    }\n    deep = Boolean(deep);\n    return clone(this, undefined, deep);\n  }\n  get nodeValue() {\n    switch (this.nodeType) {\n      case NODE_TYPE.ATTRIBUTE_NODE:\n        {\n          return this._value;\n        }\n      case NODE_TYPE.TEXT_NODE:\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      case NODE_TYPE.COMMENT_NODE:\n        {\n          return this._data;\n        }\n      default:\n        {\n          return null;\n        }\n    }\n  }\n  set nodeValue(value) {\n    if (value === null) {\n      value = \"\";\n    }\n    switch (this.nodeType) {\n      case NODE_TYPE.ATTRIBUTE_NODE:\n        {\n          setAnExistingAttributeValue(this, value);\n          break;\n        }\n      case NODE_TYPE.TEXT_NODE:\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      case NODE_TYPE.COMMENT_NODE:\n        {\n          this.replaceData(0, this.length, value);\n          break;\n        }\n    }\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-textcontent\n  get textContent() {\n    switch (this.nodeType) {\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      case NODE_TYPE.ELEMENT_NODE:\n        {\n          let text = \"\";\n          for (const child of domSymbolTree.treeIterator(this)) {\n            if (child.nodeType === NODE_TYPE.TEXT_NODE || child.nodeType === NODE_TYPE.CDATA_SECTION_NODE) {\n              text += child.nodeValue;\n            }\n          }\n          return text;\n        }\n      case NODE_TYPE.ATTRIBUTE_NODE:\n        {\n          return this._value;\n        }\n      case NODE_TYPE.TEXT_NODE:\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      case NODE_TYPE.COMMENT_NODE:\n        {\n          return this._data;\n        }\n      default:\n        {\n          return null;\n        }\n    }\n  }\n  set textContent(value) {\n    if (value === null) {\n      value = \"\";\n    }\n    switch (this.nodeType) {\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      case NODE_TYPE.ELEMENT_NODE:\n        {\n          // https://dom.spec.whatwg.org/#string-replace-all\n          let nodeImpl = null;\n          if (value !== \"\") {\n            nodeImpl = this._ownerDocument.createTextNode(value);\n          }\n          this._replaceAll(nodeImpl);\n          break;\n        }\n      case NODE_TYPE.ATTRIBUTE_NODE:\n        {\n          setAnExistingAttributeValue(this, value);\n          break;\n        }\n      case NODE_TYPE.TEXT_NODE:\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      case NODE_TYPE.COMMENT_NODE:\n        {\n          this.replaceData(0, this.length, value);\n          break;\n        }\n    }\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-insertbefore\n  insertBefore(nodeImpl, childImpl) {\n    return this._preInsert(nodeImpl, childImpl);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-appendchild\n  appendChild(nodeImpl) {\n    return this._append(nodeImpl);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-replacechild\n  replaceChild(nodeImpl, childImpl) {\n    return this._replace(nodeImpl, childImpl);\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-removechild\n  removeChild(oldChildImpl) {\n    return this._preRemove(oldChildImpl);\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n  _preInsertValidity(nodeImpl, childImpl) {\n    const {\n      nodeType,\n      nodeName\n    } = nodeImpl;\n    const {\n      nodeType: parentType,\n      nodeName: parentName\n    } = this;\n    if (parentType !== NODE_TYPE.DOCUMENT_NODE && parentType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE && parentType !== NODE_TYPE.ELEMENT_NODE) {\n      throw DOMException.create(this._globalObject, [`Node can't be inserted in a ${parentName} parent.`, \"HierarchyRequestError\"]);\n    }\n    if (isHostInclusiveAncestor(nodeImpl, this)) {\n      throw DOMException.create(this._globalObject, [\"The operation would yield an incorrect node tree.\", \"HierarchyRequestError\"]);\n    }\n    if (childImpl && domSymbolTree.parent(childImpl) !== this) {\n      throw DOMException.create(this._globalObject, [\"The child can not be found in the parent.\", \"NotFoundError\"]);\n    }\n    if (nodeType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE && nodeType !== NODE_TYPE.DOCUMENT_TYPE_NODE && nodeType !== NODE_TYPE.ELEMENT_NODE && nodeType !== NODE_TYPE.TEXT_NODE && nodeType !== NODE_TYPE.CDATA_SECTION_NODE &&\n    // CData section extends from Text\n    nodeType !== NODE_TYPE.PROCESSING_INSTRUCTION_NODE && nodeType !== NODE_TYPE.COMMENT_NODE) {\n      throw DOMException.create(this._globalObject, [`${nodeName} node can't be inserted in parent node.`, \"HierarchyRequestError\"]);\n    }\n    if (nodeType === NODE_TYPE.TEXT_NODE && parentType === NODE_TYPE.DOCUMENT_NODE || nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE && parentType !== NODE_TYPE.DOCUMENT_NODE) {\n      throw DOMException.create(this._globalObject, [`${nodeName} node can't be inserted in ${parentName} parent.`, \"HierarchyRequestError\"]);\n    }\n    if (parentType === NODE_TYPE.DOCUMENT_NODE) {\n      const nodeChildren = domSymbolTree.childrenToArray(nodeImpl);\n      const parentChildren = domSymbolTree.childrenToArray(this);\n      switch (nodeType) {\n        case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n          {\n            const nodeChildrenElements = nodeChildren.filter(child => child.nodeType === NODE_TYPE.ELEMENT_NODE);\n            if (nodeChildrenElements.length > 1) {\n              throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n            }\n            const hasNodeTextChildren = nodeChildren.some(child => child.nodeType === NODE_TYPE.TEXT_NODE);\n            if (hasNodeTextChildren) {\n              throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n            }\n            if (nodeChildrenElements.length === 1 && (parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE) || childImpl && childImpl.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE || childImpl && domSymbolTree.nextSibling(childImpl) && domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE)) {\n              throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n            }\n            break;\n          }\n        case NODE_TYPE.ELEMENT_NODE:\n          if (parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE) || childImpl && childImpl.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE || childImpl && domSymbolTree.nextSibling(childImpl) && domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) {\n            throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n          }\n          break;\n        case NODE_TYPE.DOCUMENT_TYPE_NODE:\n          if (parentChildren.some(child => child.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) || childImpl && domSymbolTree.previousSibling(childImpl) && domSymbolTree.previousSibling(childImpl).nodeType === NODE_TYPE.ELEMENT_NODE || !childImpl && parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE)) {\n            throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n          }\n          break;\n      }\n    }\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-pre-insert\n  _preInsert(nodeImpl, childImpl) {\n    this._preInsertValidity(nodeImpl, childImpl);\n    let referenceChildImpl = childImpl;\n    if (referenceChildImpl === nodeImpl) {\n      referenceChildImpl = domSymbolTree.nextSibling(nodeImpl);\n    }\n    this._ownerDocument._adoptNode(nodeImpl);\n    this._insert(nodeImpl, referenceChildImpl);\n    return nodeImpl;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-insert\n  _insert(nodeImpl, childImpl, suppressObservers) {\n    const count = nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE ? domSymbolTree.childrenCount(nodeImpl) : 1;\n    if (childImpl) {\n      const childIndex = domSymbolTree.index(childImpl);\n      for (const range of this._referencedRanges) {\n        const {\n          _start,\n          _end\n        } = range;\n        if (_start.offset > childIndex) {\n          range._setLiveRangeStart(this, _start.offset + count);\n        }\n        if (_end.offset > childIndex) {\n          range._setLiveRangeEnd(this, _end.offset + count);\n        }\n      }\n    }\n    const nodesImpl = nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE ? domSymbolTree.childrenToArray(nodeImpl) : [nodeImpl];\n    if (nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n      let grandChildImpl;\n      while (grandChildImpl = domSymbolTree.firstChild(nodeImpl)) {\n        nodeImpl._remove(grandChildImpl, true);\n      }\n    }\n    if (nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n      queueTreeMutationRecord(nodeImpl, [], nodesImpl, null, null);\n    }\n    const previousChildImpl = childImpl ? domSymbolTree.previousSibling(childImpl) : domSymbolTree.lastChild(this);\n    for (const node of nodesImpl) {\n      if (!childImpl) {\n        domSymbolTree.appendChild(this, node);\n      } else {\n        domSymbolTree.insertBefore(childImpl, node);\n      }\n      if (this.nodeType === NODE_TYPE.ELEMENT_NODE && this._shadowRoot !== null && (node.nodeType === NODE_TYPE.ELEMENT_NODE || node.nodeType === NODE_TYPE.TEXT_NODE)) {\n        assignSlot(node);\n      }\n      this._modified();\n      if (node.nodeType === NODE_TYPE.TEXT_NODE || node.nodeType === NODE_TYPE.CDATA_SECTION_NODE) {\n        this._childTextContentChangeSteps();\n      }\n      if (isSlot(this) && this._assignedNodes.length === 0 && isShadowRoot(nodeRoot(this))) {\n        signalSlotChange(this);\n      }\n      const root = nodeRoot(node);\n      if (isShadowRoot(root)) {\n        assignSlotableForTree(root);\n      }\n      if (this._attached && nodeImpl._attach) {\n        node._attach();\n      }\n      this._descendantAdded(this, node);\n      for (const inclusiveDescendant of shadowIncludingInclusiveDescendantsIterator(node)) {\n        if (inclusiveDescendant.isConnected) {\n          if (inclusiveDescendant._ceState === \"custom\") {\n            enqueueCECallbackReaction(inclusiveDescendant, \"connectedCallback\", []);\n          } else {\n            tryUpgradeElement(inclusiveDescendant);\n          }\n        }\n      }\n    }\n    if (!suppressObservers) {\n      queueTreeMutationRecord(this, nodesImpl, [], previousChildImpl, childImpl);\n    }\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-append\n  _append(nodeImpl) {\n    return this._preInsert(nodeImpl, null);\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-replace\n  _replace(nodeImpl, childImpl) {\n    const {\n      nodeType,\n      nodeName\n    } = nodeImpl;\n    const {\n      nodeType: parentType,\n      nodeName: parentName\n    } = this;\n\n    // Note: This section differs from the pre-insert validation algorithm.\n    if (parentType !== NODE_TYPE.DOCUMENT_NODE && parentType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE && parentType !== NODE_TYPE.ELEMENT_NODE) {\n      throw DOMException.create(this._globalObject, [`Node can't be inserted in a ${parentName} parent.`, \"HierarchyRequestError\"]);\n    }\n    if (isHostInclusiveAncestor(nodeImpl, this)) {\n      throw DOMException.create(this._globalObject, [\"The operation would yield an incorrect node tree.\", \"HierarchyRequestError\"]);\n    }\n    if (childImpl && domSymbolTree.parent(childImpl) !== this) {\n      throw DOMException.create(this._globalObject, [\"The child can not be found in the parent.\", \"NotFoundError\"]);\n    }\n    if (nodeType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE && nodeType !== NODE_TYPE.DOCUMENT_TYPE_NODE && nodeType !== NODE_TYPE.ELEMENT_NODE && nodeType !== NODE_TYPE.TEXT_NODE && nodeType !== NODE_TYPE.CDATA_SECTION_NODE &&\n    // CData section extends from Text\n    nodeType !== NODE_TYPE.PROCESSING_INSTRUCTION_NODE && nodeType !== NODE_TYPE.COMMENT_NODE) {\n      throw DOMException.create(this._globalObject, [`${nodeName} node can't be inserted in parent node.`, \"HierarchyRequestError\"]);\n    }\n    if (nodeType === NODE_TYPE.TEXT_NODE && parentType === NODE_TYPE.DOCUMENT_NODE || nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE && parentType !== NODE_TYPE.DOCUMENT_NODE) {\n      throw DOMException.create(this._globalObject, [`${nodeName} node can't be inserted in ${parentName} parent.`, \"HierarchyRequestError\"]);\n    }\n    if (parentType === NODE_TYPE.DOCUMENT_NODE) {\n      const nodeChildren = domSymbolTree.childrenToArray(nodeImpl);\n      const parentChildren = domSymbolTree.childrenToArray(this);\n      switch (nodeType) {\n        case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n          {\n            const nodeChildrenElements = nodeChildren.filter(child => child.nodeType === NODE_TYPE.ELEMENT_NODE);\n            if (nodeChildrenElements.length > 1) {\n              throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n            }\n            const hasNodeTextChildren = nodeChildren.some(child => child.nodeType === NODE_TYPE.TEXT_NODE);\n            if (hasNodeTextChildren) {\n              throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n            }\n            const parentChildElements = parentChildren.filter(child => child.nodeType === NODE_TYPE.ELEMENT_NODE);\n            if (nodeChildrenElements.length === 1 && (parentChildElements.length === 1 && parentChildElements[0] !== childImpl || childImpl && domSymbolTree.nextSibling(childImpl) && domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE)) {\n              throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n            }\n            break;\n          }\n        case NODE_TYPE.ELEMENT_NODE:\n          if (parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE && child !== childImpl) || childImpl && domSymbolTree.nextSibling(childImpl) && domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) {\n            throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n          }\n          break;\n        case NODE_TYPE.DOCUMENT_TYPE_NODE:\n          if (parentChildren.some(child => child.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE && child !== childImpl) || childImpl && domSymbolTree.previousSibling(childImpl) && domSymbolTree.previousSibling(childImpl).nodeType === NODE_TYPE.ELEMENT_NODE) {\n            throw DOMException.create(this._globalObject, [`Invalid insertion of ${nodeName} node in ${parentName} node.`, \"HierarchyRequestError\"]);\n          }\n          break;\n      }\n    }\n    let referenceChildImpl = domSymbolTree.nextSibling(childImpl);\n    if (referenceChildImpl === nodeImpl) {\n      referenceChildImpl = domSymbolTree.nextSibling(nodeImpl);\n    }\n    const previousSiblingImpl = domSymbolTree.previousSibling(childImpl);\n    this._ownerDocument._adoptNode(nodeImpl);\n    let removedNodesImpl = [];\n    if (domSymbolTree.parent(childImpl)) {\n      removedNodesImpl = [childImpl];\n      this._remove(childImpl, true);\n    }\n    const nodesImpl = nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE ? domSymbolTree.childrenToArray(nodeImpl) : [nodeImpl];\n    this._insert(nodeImpl, referenceChildImpl, true);\n    queueTreeMutationRecord(this, nodesImpl, removedNodesImpl, previousSiblingImpl, referenceChildImpl);\n    return childImpl;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-replace-all\n  _replaceAll(nodeImpl) {\n    if (nodeImpl !== null) {\n      this._ownerDocument._adoptNode(nodeImpl);\n    }\n    const removedNodesImpl = domSymbolTree.childrenToArray(this);\n    let addedNodesImpl;\n    if (nodeImpl === null) {\n      addedNodesImpl = [];\n    } else if (nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n      addedNodesImpl = domSymbolTree.childrenToArray(nodeImpl);\n    } else {\n      addedNodesImpl = [nodeImpl];\n    }\n    for (const childImpl of domSymbolTree.childrenIterator(this)) {\n      this._remove(childImpl, true);\n    }\n    if (nodeImpl !== null) {\n      this._insert(nodeImpl, null, true);\n    }\n    if (addedNodesImpl.length > 0 || removedNodesImpl.length > 0) {\n      queueTreeMutationRecord(this, addedNodesImpl, removedNodesImpl, null, null);\n    }\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-pre-remove\n  _preRemove(childImpl) {\n    if (domSymbolTree.parent(childImpl) !== this) {\n      throw DOMException.create(this._globalObject, [\"The node to be removed is not a child of this node.\", \"NotFoundError\"]);\n    }\n    this._remove(childImpl);\n    return childImpl;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-node-remove\n  _remove(nodeImpl, suppressObservers) {\n    const index = domSymbolTree.index(nodeImpl);\n    for (const descendant of domSymbolTree.treeIterator(nodeImpl)) {\n      for (const range of descendant._referencedRanges) {\n        const {\n          _start,\n          _end\n        } = range;\n        if (_start.node === descendant) {\n          range._setLiveRangeStart(this, index);\n        }\n        if (_end.node === descendant) {\n          range._setLiveRangeEnd(this, index);\n        }\n      }\n    }\n    for (const range of this._referencedRanges) {\n      const {\n        _start,\n        _end\n      } = range;\n      if (_start.node === this && _start.offset > index) {\n        range._setLiveRangeStart(this, _start.offset - 1);\n      }\n      if (_end.node === this && _end.offset > index) {\n        range._setLiveRangeEnd(this, _end.offset - 1);\n      }\n    }\n    if (this._ownerDocument) {\n      this._ownerDocument._runPreRemovingSteps(nodeImpl);\n    }\n    const oldPreviousSiblingImpl = domSymbolTree.previousSibling(nodeImpl);\n    const oldNextSiblingImpl = domSymbolTree.nextSibling(nodeImpl);\n    domSymbolTree.remove(nodeImpl);\n    if (nodeImpl._assignedSlot) {\n      assignSlotable(nodeImpl._assignedSlot);\n    }\n    if (isSlot(this) && this._assignedNodes.length === 0 && isShadowRoot(nodeRoot(this))) {\n      signalSlotChange(this);\n    }\n    let hasSlotDescendant = isSlot(nodeImpl);\n    if (!hasSlotDescendant) {\n      for (const child of domSymbolTree.treeIterator(nodeImpl)) {\n        if (isSlot(child)) {\n          hasSlotDescendant = true;\n          break;\n        }\n      }\n    }\n    if (hasSlotDescendant) {\n      assignSlotableForTree(nodeRoot(this));\n      assignSlotableForTree(nodeImpl);\n    }\n    this._modified();\n    nodeImpl._detach();\n    this._descendantRemoved(this, nodeImpl);\n    if (this.isConnected) {\n      if (nodeImpl._ceState === \"custom\") {\n        enqueueCECallbackReaction(nodeImpl, \"disconnectedCallback\", []);\n      }\n      for (const descendantImpl of shadowIncludingDescendantsIterator(nodeImpl)) {\n        if (descendantImpl._ceState === \"custom\") {\n          enqueueCECallbackReaction(descendantImpl, \"disconnectedCallback\", []);\n        }\n      }\n    }\n    if (!suppressObservers) {\n      queueTreeMutationRecord(this, [], [nodeImpl], oldPreviousSiblingImpl, oldNextSiblingImpl);\n    }\n    if (nodeImpl.nodeType === NODE_TYPE.TEXT_NODE) {\n      this._childTextContentChangeSteps();\n    }\n  }\n}\nmodule.exports = {\n  implementation: NodeImpl\n};","map":{"version":3,"names":["DOMException","require","EventTargetImpl","implementation","simultaneousIterators","NODE_TYPE","NODE_DOCUMENT_POSITION","clone","locateNamespacePrefix","locateNamespace","setAnExistingAttributeValue","NodeList","nodeRoot","nodeLength","domSymbolTree","documentBaseURLSerialized","queueTreeMutationRecord","enqueueCECallbackReaction","tryUpgradeElement","isShadowRoot","shadowIncludingRoot","assignSlot","assignSlotableForTree","assignSlotable","signalSlotChange","isSlot","shadowIncludingInclusiveDescendantsIterator","shadowIncludingDescendantsIterator","isObsoleteNodeType","node","nodeType","ENTITY_NODE","ENTITY_REFERENCE_NODE","NOTATION_NODE","CDATA_SECTION_NODE","nodeEquals","a","b","DOCUMENT_TYPE_NODE","name","publicId","systemId","ELEMENT_NODE","_namespaceURI","_prefix","_localName","_attributes","length","ATTRIBUTE_NODE","_namespace","_value","PROCESSING_INSTRUCTION_NODE","_target","_data","TEXT_NODE","COMMENT_NODE","attributeListsEqual","nodes","childrenIterator","elementA","elementB","listA","_attributeList","listB","lengthA","lengthB","i","attrA","some","attrB","isHostInclusiveAncestor","nodeImplA","nodeImplB","ancestor","ancestorsIterator","rootImplB","_host","NodeImpl","constructor","globalObject","args","privateData","initialize","_ownerDocument","ownerDocument","_childNodesList","_childrenList","_version","_memoizedQueries","_registeredObserverList","_referencedRanges","Set","_getTheParent","_assignedSlot","parent","parentNode","getRootNode","options","composed","nodeName","tagName","_qualifiedName","target","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","firstChild","isConnected","root","lastChild","childNodes","createImpl","_globalObject","element","query","childrenToArray","_update","nextSibling","previousSibling","_modified","_clearMemoizedQueries","_childTextContentChangeSteps","myParent","_descendantRemoved","child","_descendantAdded","_attach","_attached","_detach","_lastFocusedElement","hasChildNodes","hasChildren","normalize","treeToArray","_remove","continuousExclusiveTextNodes","currentNode","previousSiblingsIterator","unshift","nextSiblingsIterator","push","data","reduce","d","n","replaceData","currentNodeParent","currentNodeIndex","index","range","_start","_end","_setLiveRangeStart","offset","_setLiveRangeEnd","continuousExclusiveTextNode","parentElement","baseURI","compareDocumentPosition","other","node1","node2","Error","attr1","attr2","_element","attr","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","result","compareTreePosition","DOCUMENT_POSITION_DISCONNECTED","lookupPrefix","namespace","documentElement","lookupNamespaceURI","prefix","isDefaultNamespace","defaultNamespace","contains","Boolean","DOCUMENT_POSITION_CONTAINED_BY","isEqualNode","isSameNode","cloneNode","deep","create","undefined","nodeValue","value","textContent","text","treeIterator","nodeImpl","createTextNode","_replaceAll","insertBefore","childImpl","_preInsert","appendChild","_append","replaceChild","_replace","removeChild","oldChildImpl","_preRemove","_preInsertValidity","parentType","parentName","nodeChildren","parentChildren","nodeChildrenElements","filter","hasNodeTextChildren","referenceChildImpl","_adoptNode","_insert","suppressObservers","count","childrenCount","childIndex","nodesImpl","grandChildImpl","previousChildImpl","_shadowRoot","_assignedNodes","inclusiveDescendant","_ceState","parentChildElements","previousSiblingImpl","removedNodesImpl","addedNodesImpl","descendant","_runPreRemovingSteps","oldPreviousSiblingImpl","oldNextSiblingImpl","remove","hasSlotDescendant","descendantImpl","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/Node-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\n\r\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\r\nconst { simultaneousIterators } = require(\"../../utils\");\r\nconst NODE_TYPE = require(\"../node-type\");\r\nconst NODE_DOCUMENT_POSITION = require(\"../node-document-position\");\r\nconst { clone, locateNamespacePrefix, locateNamespace } = require(\"../node\");\r\nconst { setAnExistingAttributeValue } = require(\"../attributes\");\r\n\r\nconst NodeList = require(\"../generated/NodeList\");\r\n\r\nconst { nodeRoot, nodeLength } = require(\"../helpers/node\");\r\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\r\nconst { documentBaseURLSerialized } = require(\"../helpers/document-base-url\");\r\nconst { queueTreeMutationRecord } = require(\"../helpers/mutation-observers\");\r\nconst { enqueueCECallbackReaction, tryUpgradeElement } = require(\"../helpers/custom-elements\");\r\nconst {\r\n  isShadowRoot, shadowIncludingRoot, assignSlot, assignSlotableForTree, assignSlotable, signalSlotChange, isSlot,\r\n  shadowIncludingInclusiveDescendantsIterator, shadowIncludingDescendantsIterator\r\n} = require(\"../helpers/shadow-dom\");\r\n\r\nfunction isObsoleteNodeType(node) {\r\n  return node.nodeType === NODE_TYPE.ENTITY_NODE ||\r\n    node.nodeType === NODE_TYPE.ENTITY_REFERENCE_NODE ||\r\n    node.nodeType === NODE_TYPE.NOTATION_NODE ||\r\n    node.nodeType === NODE_TYPE.CDATA_SECTION_NODE;\r\n}\r\n\r\nfunction nodeEquals(a, b) {\r\n  if (a.nodeType !== b.nodeType) {\r\n    return false;\r\n  }\r\n\r\n  switch (a.nodeType) {\r\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n      if (a.name !== b.name || a.publicId !== b.publicId ||\r\n          a.systemId !== b.systemId) {\r\n        return false;\r\n      }\r\n      break;\r\n    case NODE_TYPE.ELEMENT_NODE:\r\n      if (a._namespaceURI !== b._namespaceURI || a._prefix !== b._prefix || a._localName !== b._localName ||\r\n          a._attributes.length !== b._attributes.length) {\r\n        return false;\r\n      }\r\n      break;\r\n    case NODE_TYPE.ATTRIBUTE_NODE:\r\n      if (a._namespace !== b._namespace || a._localName !== b._localName || a._value !== b._value) {\r\n        return false;\r\n      }\r\n      break;\r\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n      if (a._target !== b._target || a._data !== b._data) {\r\n        return false;\r\n      }\r\n      break;\r\n    case NODE_TYPE.TEXT_NODE:\r\n    case NODE_TYPE.COMMENT_NODE:\r\n      if (a._data !== b._data) {\r\n        return false;\r\n      }\r\n      break;\r\n  }\r\n\r\n  if (a.nodeType === NODE_TYPE.ELEMENT_NODE && !attributeListsEqual(a, b)) {\r\n    return false;\r\n  }\r\n\r\n  for (const nodes of simultaneousIterators(domSymbolTree.childrenIterator(a), domSymbolTree.childrenIterator(b))) {\r\n    if (!nodes[0] || !nodes[1]) {\r\n      // mismatch in the amount of childNodes\r\n      return false;\r\n    }\r\n\r\n    if (!nodeEquals(nodes[0], nodes[1])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Needed by https://dom.spec.whatwg.org/#concept-node-equals\r\nfunction attributeListsEqual(elementA, elementB) {\r\n  const listA = elementA._attributeList;\r\n  const listB = elementB._attributeList;\r\n\r\n  const lengthA = listA.length;\r\n  const lengthB = listB.length;\r\n\r\n  if (lengthA !== lengthB) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < lengthA; ++i) {\r\n    const attrA = listA[i];\r\n\r\n    if (!listB.some(attrB => nodeEquals(attrA, attrB))) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// https://dom.spec.whatwg.org/#concept-tree-host-including-inclusive-ancestor\r\nfunction isHostInclusiveAncestor(nodeImplA, nodeImplB) {\r\n  for (const ancestor of domSymbolTree.ancestorsIterator(nodeImplB)) {\r\n    if (ancestor === nodeImplA) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const rootImplB = nodeRoot(nodeImplB);\r\n  if (rootImplB._host) {\r\n    return isHostInclusiveAncestor(nodeImplA, rootImplB._host);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nclass NodeImpl extends EventTargetImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n\r\n    domSymbolTree.initialize(this);\r\n\r\n    this._ownerDocument = privateData.ownerDocument;\r\n\r\n    this._childNodesList = null;\r\n    this._childrenList = null;\r\n    this._version = 0;\r\n    this._memoizedQueries = {};\r\n    this._registeredObserverList = [];\r\n    this._referencedRanges = new Set();\r\n  }\r\n\r\n  _getTheParent() {\r\n    if (this._assignedSlot) {\r\n      return this._assignedSlot;\r\n    }\r\n\r\n    return domSymbolTree.parent(this);\r\n  }\r\n\r\n  get parentNode() {\r\n    return domSymbolTree.parent(this);\r\n  }\r\n\r\n  getRootNode(options) {\r\n    return options.composed ? shadowIncludingRoot(this) : nodeRoot(this);\r\n  }\r\n\r\n  get nodeName() {\r\n    switch (this.nodeType) {\r\n      case NODE_TYPE.ELEMENT_NODE:\r\n        return this.tagName;\r\n      case NODE_TYPE.ATTRIBUTE_NODE:\r\n        return this._qualifiedName;\r\n      case NODE_TYPE.TEXT_NODE:\r\n        return \"#text\";\r\n      case NODE_TYPE.CDATA_SECTION_NODE:\r\n        return \"#cdata-section\";\r\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n        return this.target;\r\n      case NODE_TYPE.COMMENT_NODE:\r\n        return \"#comment\";\r\n      case NODE_TYPE.DOCUMENT_NODE:\r\n        return \"#document\";\r\n      case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n        return this.name;\r\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\r\n        return \"#document-fragment\";\r\n    }\r\n\r\n    // should never happen\r\n    return null;\r\n  }\r\n\r\n  get firstChild() {\r\n    return domSymbolTree.firstChild(this);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#connected\r\n  // https://dom.spec.whatwg.org/#dom-node-isconnected\r\n  get isConnected() {\r\n    const root = shadowIncludingRoot(this);\r\n    return root && root.nodeType === NODE_TYPE.DOCUMENT_NODE;\r\n  }\r\n\r\n  get ownerDocument() {\r\n    return this.nodeType === NODE_TYPE.DOCUMENT_NODE ? null : this._ownerDocument;\r\n  }\r\n\r\n  get lastChild() {\r\n    return domSymbolTree.lastChild(this);\r\n  }\r\n\r\n  get childNodes() {\r\n    if (!this._childNodesList) {\r\n      this._childNodesList = NodeList.createImpl(this._globalObject, [], {\r\n        element: this,\r\n        query: () => domSymbolTree.childrenToArray(this)\r\n      });\r\n    } else {\r\n      this._childNodesList._update();\r\n    }\r\n\r\n    return this._childNodesList;\r\n  }\r\n\r\n  get nextSibling() {\r\n    return domSymbolTree.nextSibling(this);\r\n  }\r\n\r\n  get previousSibling() {\r\n    return domSymbolTree.previousSibling(this);\r\n  }\r\n\r\n  _modified() {\r\n    this._version++;\r\n    for (const ancestor of domSymbolTree.ancestorsIterator(this)) {\r\n      ancestor._version++;\r\n    }\r\n\r\n    if (this._childrenList) {\r\n      this._childrenList._update();\r\n    }\r\n    if (this._childNodesList) {\r\n      this._childNodesList._update();\r\n    }\r\n    this._clearMemoizedQueries();\r\n  }\r\n\r\n  _childTextContentChangeSteps() {\r\n    // Default: do nothing\r\n  }\r\n\r\n  _clearMemoizedQueries() {\r\n    this._memoizedQueries = {};\r\n    const myParent = domSymbolTree.parent(this);\r\n    if (myParent) {\r\n      myParent._clearMemoizedQueries();\r\n    }\r\n  }\r\n\r\n  _descendantRemoved(parent, child) {\r\n    const myParent = domSymbolTree.parent(this);\r\n    if (myParent) {\r\n      myParent._descendantRemoved(parent, child);\r\n    }\r\n  }\r\n\r\n  _descendantAdded(parent, child) {\r\n    const myParent = domSymbolTree.parent(this);\r\n    if (myParent) {\r\n      myParent._descendantAdded(parent, child);\r\n    }\r\n  }\r\n\r\n  _attach() {\r\n    this._attached = true;\r\n\r\n    for (const child of domSymbolTree.childrenIterator(this)) {\r\n      if (child._attach) {\r\n        child._attach();\r\n      }\r\n    }\r\n  }\r\n\r\n  _detach() {\r\n    this._attached = false;\r\n\r\n    if (this._ownerDocument && this._ownerDocument._lastFocusedElement === this) {\r\n      this._ownerDocument._lastFocusedElement = null;\r\n    }\r\n\r\n    for (const child of domSymbolTree.childrenIterator(this)) {\r\n      if (child._detach) {\r\n        child._detach();\r\n      }\r\n    }\r\n  }\r\n\r\n  hasChildNodes() {\r\n    return domSymbolTree.hasChildren(this);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-node-normalize\r\n  normalize() {\r\n    // It is important to use a treeToArray instead of a treeToIterator here, because the\r\n    // treeToIterator doesn't support tree mutation in the middle of the traversal.\r\n    for (const node of domSymbolTree.treeToArray(this)) {\r\n      const parentNode = domSymbolTree.parent(node);\r\n      if (parentNode === null || node.nodeType !== NODE_TYPE.TEXT_NODE) {\r\n        continue;\r\n      }\r\n\r\n      let length = nodeLength(node);\r\n\r\n      if (length === 0) {\r\n        parentNode._remove(node);\r\n        continue;\r\n      }\r\n\r\n      const continuousExclusiveTextNodes = [];\r\n\r\n      for (const currentNode of domSymbolTree.previousSiblingsIterator(node)) {\r\n        if (currentNode.nodeType !== NODE_TYPE.TEXT_NODE) {\r\n          break;\r\n        }\r\n\r\n        continuousExclusiveTextNodes.unshift(currentNode);\r\n      }\r\n      for (const currentNode of domSymbolTree.nextSiblingsIterator(node)) {\r\n        if (currentNode.nodeType !== NODE_TYPE.TEXT_NODE) {\r\n          break;\r\n        }\r\n\r\n        continuousExclusiveTextNodes.push(currentNode);\r\n      }\r\n\r\n      const data = continuousExclusiveTextNodes.reduce((d, n) => d + n._data, \"\");\r\n      node.replaceData(length, 0, data);\r\n\r\n      let currentNode = domSymbolTree.nextSibling(node);\r\n      while (currentNode && currentNode.nodeType !== NODE_TYPE.TEXT_NODE) {\r\n        const currentNodeParent = domSymbolTree.parent(currentNode);\r\n        const currentNodeIndex = domSymbolTree.index(currentNode);\r\n\r\n        for (const range of node._referencedRanges) {\r\n          const { _start, _end } = range;\r\n\r\n          if (_start.node === currentNode) {\r\n            range._setLiveRangeStart(node, _start.offset + length);\r\n          }\r\n          if (_end.node === currentNode) {\r\n            range._setLiveRangeEnd(node, _end.offset + length);\r\n          }\r\n          if (_start.node === currentNodeParent && _start.offset === currentNodeIndex) {\r\n            range._setLiveRangeStart(node, length);\r\n          }\r\n          if (_end.node === currentNodeParent && _end.offset === currentNodeIndex) {\r\n            range._setLiveRangeStart(node, length);\r\n          }\r\n        }\r\n\r\n        length += nodeLength(currentNode);\r\n        currentNode = domSymbolTree.nextSibling(currentNode);\r\n      }\r\n\r\n      for (const continuousExclusiveTextNode of continuousExclusiveTextNodes) {\r\n        parentNode._remove(continuousExclusiveTextNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  get parentElement() {\r\n    const parentNode = domSymbolTree.parent(this);\r\n    return parentNode !== null && parentNode.nodeType === NODE_TYPE.ELEMENT_NODE ? parentNode : null;\r\n  }\r\n\r\n  get baseURI() {\r\n    return documentBaseURLSerialized(this._ownerDocument);\r\n  }\r\n\r\n  compareDocumentPosition(other) {\r\n    // Let node1 be other and node2 be the context object.\r\n    let node1 = other;\r\n    let node2 = this;\r\n\r\n    if (isObsoleteNodeType(node2) || isObsoleteNodeType(node1)) {\r\n      throw new Error(\"Obsolete node type\");\r\n    }\r\n\r\n    let attr1 = null;\r\n    let attr2 = null;\r\n\r\n    if (node1.nodeType === NODE_TYPE.ATTRIBUTE_NODE) {\r\n      attr1 = node1;\r\n      node1 = attr1._element;\r\n    }\r\n\r\n    if (node2.nodeType === NODE_TYPE.ATTRIBUTE_NODE) {\r\n      attr2 = node2;\r\n      node2 = attr2._element;\r\n\r\n      if (attr1 !== null && node1 !== null && node2 === node1) {\r\n        for (const attr of node2._attributeList) {\r\n          if (nodeEquals(attr, attr1)) {\r\n            return NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC |\r\n              NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_PRECEDING;\r\n          }\r\n\r\n          if (nodeEquals(attr, attr2)) {\r\n            return NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC |\r\n              NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_FOLLOWING;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const result = domSymbolTree.compareTreePosition(node2, node1);\r\n\r\n    // “If other and reference are not in the same tree, return the result of adding DOCUMENT_POSITION_DISCONNECTED,\r\n    //  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, and either DOCUMENT_POSITION_PRECEDING or\r\n    // DOCUMENT_POSITION_FOLLOWING, with the constraint that this is to be consistent, together.”\r\n    if (result === NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_DISCONNECTED) {\r\n      // symbol-tree does not add these bits required by the spec:\r\n      return NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_DISCONNECTED |\r\n        NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC |\r\n        NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_FOLLOWING;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  lookupPrefix(namespace) {\r\n    if (namespace === null || namespace === \"\") {\r\n      return null;\r\n    }\r\n\r\n    switch (this.nodeType) {\r\n      case NODE_TYPE.ELEMENT_NODE: {\r\n        return locateNamespacePrefix(this, namespace);\r\n      }\r\n      case NODE_TYPE.DOCUMENT_NODE: {\r\n        return this.documentElement !== null ? locateNamespacePrefix(this.documentElement, namespace) : null;\r\n      }\r\n      case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE: {\r\n        return null;\r\n      }\r\n      case NODE_TYPE.ATTRIBUTE_NODE: {\r\n        return this._element !== null ? locateNamespacePrefix(this._element, namespace) : null;\r\n      }\r\n      default: {\r\n        return this.parentElement !== null ? locateNamespacePrefix(this.parentElement, namespace) : null;\r\n      }\r\n    }\r\n  }\r\n\r\n  lookupNamespaceURI(prefix) {\r\n    if (prefix === \"\") {\r\n      prefix = null;\r\n    }\r\n\r\n    return locateNamespace(this, prefix);\r\n  }\r\n\r\n  isDefaultNamespace(namespace) {\r\n    if (namespace === \"\") {\r\n      namespace = null;\r\n    }\r\n\r\n    const defaultNamespace = locateNamespace(this, null);\r\n    return defaultNamespace === namespace;\r\n  }\r\n\r\n  contains(other) {\r\n    if (other === null) {\r\n      return false;\r\n    } else if (this === other) {\r\n      return true;\r\n    }\r\n    return Boolean(this.compareDocumentPosition(other) & NODE_DOCUMENT_POSITION.DOCUMENT_POSITION_CONTAINED_BY);\r\n  }\r\n\r\n  isEqualNode(node) {\r\n    if (node === null) {\r\n      return false;\r\n    }\r\n\r\n    // Fast-path, not in the spec\r\n    if (this === node) {\r\n      return true;\r\n    }\r\n\r\n    return nodeEquals(this, node);\r\n  }\r\n\r\n  isSameNode(node) {\r\n    if (this === node) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cloneNode(deep) {\r\n    if (isShadowRoot(this)) {\r\n      throw DOMException.create(this._globalObject, [\"ShadowRoot nodes are not clonable.\", \"NotSupportedError\"]);\r\n    }\r\n\r\n    deep = Boolean(deep);\r\n\r\n    return clone(this, undefined, deep);\r\n  }\r\n\r\n  get nodeValue() {\r\n    switch (this.nodeType) {\r\n      case NODE_TYPE.ATTRIBUTE_NODE: {\r\n        return this._value;\r\n      }\r\n      case NODE_TYPE.TEXT_NODE:\r\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\r\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n      case NODE_TYPE.COMMENT_NODE: {\r\n        return this._data;\r\n      }\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  set nodeValue(value) {\r\n    if (value === null) {\r\n      value = \"\";\r\n    }\r\n\r\n    switch (this.nodeType) {\r\n      case NODE_TYPE.ATTRIBUTE_NODE: {\r\n        setAnExistingAttributeValue(this, value);\r\n        break;\r\n      }\r\n      case NODE_TYPE.TEXT_NODE:\r\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\r\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n      case NODE_TYPE.COMMENT_NODE: {\r\n        this.replaceData(0, this.length, value);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-node-textcontent\r\n  get textContent() {\r\n    switch (this.nodeType) {\r\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\r\n      case NODE_TYPE.ELEMENT_NODE: {\r\n        let text = \"\";\r\n        for (const child of domSymbolTree.treeIterator(this)) {\r\n          if (child.nodeType === NODE_TYPE.TEXT_NODE || child.nodeType === NODE_TYPE.CDATA_SECTION_NODE) {\r\n            text += child.nodeValue;\r\n          }\r\n        }\r\n        return text;\r\n      }\r\n\r\n      case NODE_TYPE.ATTRIBUTE_NODE: {\r\n        return this._value;\r\n      }\r\n\r\n      case NODE_TYPE.TEXT_NODE:\r\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\r\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n      case NODE_TYPE.COMMENT_NODE: {\r\n        return this._data;\r\n      }\r\n\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n  set textContent(value) {\r\n    if (value === null) {\r\n      value = \"\";\r\n    }\r\n\r\n    switch (this.nodeType) {\r\n      case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\r\n      case NODE_TYPE.ELEMENT_NODE: {\r\n        // https://dom.spec.whatwg.org/#string-replace-all\r\n        let nodeImpl = null;\r\n\r\n        if (value !== \"\") {\r\n          nodeImpl = this._ownerDocument.createTextNode(value);\r\n        }\r\n\r\n        this._replaceAll(nodeImpl);\r\n        break;\r\n      }\r\n\r\n      case NODE_TYPE.ATTRIBUTE_NODE: {\r\n        setAnExistingAttributeValue(this, value);\r\n        break;\r\n      }\r\n\r\n      case NODE_TYPE.TEXT_NODE:\r\n      case NODE_TYPE.CDATA_SECTION_NODE: // CDATASection is a subclass of Text\r\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n      case NODE_TYPE.COMMENT_NODE: {\r\n        this.replaceData(0, this.length, value);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-node-insertbefore\r\n  insertBefore(nodeImpl, childImpl) {\r\n    return this._preInsert(nodeImpl, childImpl);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-node-appendchild\r\n  appendChild(nodeImpl) {\r\n    return this._append(nodeImpl);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-node-replacechild\r\n  replaceChild(nodeImpl, childImpl) {\r\n    return this._replace(nodeImpl, childImpl);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#dom-node-removechild\r\n  removeChild(oldChildImpl) {\r\n    return this._preRemove(oldChildImpl);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n  _preInsertValidity(nodeImpl, childImpl) {\r\n    const { nodeType, nodeName } = nodeImpl;\r\n    const { nodeType: parentType, nodeName: parentName } = this;\r\n\r\n    if (\r\n      parentType !== NODE_TYPE.DOCUMENT_NODE &&\r\n      parentType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE &&\r\n      parentType !== NODE_TYPE.ELEMENT_NODE\r\n    ) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `Node can't be inserted in a ${parentName} parent.`,\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (isHostInclusiveAncestor(nodeImpl, this)) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The operation would yield an incorrect node tree.\",\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (childImpl && domSymbolTree.parent(childImpl) !== this) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The child can not be found in the parent.\",\r\n        \"NotFoundError\"\r\n      ]);\r\n    }\r\n\r\n    if (\r\n      nodeType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE &&\r\n      nodeType !== NODE_TYPE.DOCUMENT_TYPE_NODE &&\r\n      nodeType !== NODE_TYPE.ELEMENT_NODE &&\r\n      nodeType !== NODE_TYPE.TEXT_NODE &&\r\n      nodeType !== NODE_TYPE.CDATA_SECTION_NODE && // CData section extends from Text\r\n      nodeType !== NODE_TYPE.PROCESSING_INSTRUCTION_NODE &&\r\n      nodeType !== NODE_TYPE.COMMENT_NODE\r\n    ) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `${nodeName} node can't be inserted in parent node.`,\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (\r\n      (nodeType === NODE_TYPE.TEXT_NODE && parentType === NODE_TYPE.DOCUMENT_NODE) ||\r\n      (nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE && parentType !== NODE_TYPE.DOCUMENT_NODE)\r\n    ) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `${nodeName} node can't be inserted in ${parentName} parent.`,\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (parentType === NODE_TYPE.DOCUMENT_NODE) {\r\n      const nodeChildren = domSymbolTree.childrenToArray(nodeImpl);\r\n      const parentChildren = domSymbolTree.childrenToArray(this);\r\n\r\n      switch (nodeType) {\r\n        case NODE_TYPE.DOCUMENT_FRAGMENT_NODE: {\r\n          const nodeChildrenElements = nodeChildren.filter(child => child.nodeType === NODE_TYPE.ELEMENT_NODE);\r\n          if (nodeChildrenElements.length > 1) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n\r\n          const hasNodeTextChildren = nodeChildren.some(child => child.nodeType === NODE_TYPE.TEXT_NODE);\r\n          if (hasNodeTextChildren) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n\r\n          if (\r\n            nodeChildrenElements.length === 1 &&\r\n            (\r\n              parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE) ||\r\n              (childImpl && childImpl.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) ||\r\n              (\r\n                childImpl &&\r\n                domSymbolTree.nextSibling(childImpl) &&\r\n                domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE\r\n              )\r\n            )\r\n          ) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n          break;\r\n        }\r\n\r\n        case NODE_TYPE.ELEMENT_NODE:\r\n          if (\r\n            parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE) ||\r\n            (childImpl && childImpl.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) ||\r\n            (\r\n              childImpl &&\r\n              domSymbolTree.nextSibling(childImpl) &&\r\n              domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE\r\n            )\r\n          ) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n          break;\r\n\r\n        case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n          if (\r\n            parentChildren.some(child => child.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE) ||\r\n            (\r\n              childImpl &&\r\n              domSymbolTree.previousSibling(childImpl) &&\r\n              domSymbolTree.previousSibling(childImpl).nodeType === NODE_TYPE.ELEMENT_NODE\r\n            ) ||\r\n            (!childImpl && parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE))\r\n          ) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-pre-insert\r\n  _preInsert(nodeImpl, childImpl) {\r\n    this._preInsertValidity(nodeImpl, childImpl);\r\n\r\n    let referenceChildImpl = childImpl;\r\n    if (referenceChildImpl === nodeImpl) {\r\n      referenceChildImpl = domSymbolTree.nextSibling(nodeImpl);\r\n    }\r\n\r\n    this._ownerDocument._adoptNode(nodeImpl);\r\n\r\n    this._insert(nodeImpl, referenceChildImpl);\r\n\r\n    return nodeImpl;\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-insert\r\n  _insert(nodeImpl, childImpl, suppressObservers) {\r\n    const count = nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE ?\r\n        domSymbolTree.childrenCount(nodeImpl) :\r\n        1;\r\n\r\n    if (childImpl) {\r\n      const childIndex = domSymbolTree.index(childImpl);\r\n\r\n      for (const range of this._referencedRanges) {\r\n        const { _start, _end } = range;\r\n\r\n        if (_start.offset > childIndex) {\r\n          range._setLiveRangeStart(this, _start.offset + count);\r\n        }\r\n\r\n        if (_end.offset > childIndex) {\r\n          range._setLiveRangeEnd(this, _end.offset + count);\r\n        }\r\n      }\r\n    }\r\n\r\n    const nodesImpl = nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE ?\r\n      domSymbolTree.childrenToArray(nodeImpl) :\r\n      [nodeImpl];\r\n\r\n    if (nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\r\n      let grandChildImpl;\r\n      while ((grandChildImpl = domSymbolTree.firstChild(nodeImpl))) {\r\n        nodeImpl._remove(grandChildImpl, true);\r\n      }\r\n    }\r\n\r\n    if (nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\r\n      queueTreeMutationRecord(nodeImpl, [], nodesImpl, null, null);\r\n    }\r\n\r\n    const previousChildImpl = childImpl ?\r\n      domSymbolTree.previousSibling(childImpl) :\r\n      domSymbolTree.lastChild(this);\r\n\r\n    for (const node of nodesImpl) {\r\n      if (!childImpl) {\r\n        domSymbolTree.appendChild(this, node);\r\n      } else {\r\n        domSymbolTree.insertBefore(childImpl, node);\r\n      }\r\n\r\n      if (\r\n        (this.nodeType === NODE_TYPE.ELEMENT_NODE && this._shadowRoot !== null) &&\r\n        (node.nodeType === NODE_TYPE.ELEMENT_NODE || node.nodeType === NODE_TYPE.TEXT_NODE)\r\n      ) {\r\n        assignSlot(node);\r\n      }\r\n\r\n      this._modified();\r\n\r\n      if (node.nodeType === NODE_TYPE.TEXT_NODE ||\r\n          node.nodeType === NODE_TYPE.CDATA_SECTION_NODE) {\r\n        this._childTextContentChangeSteps();\r\n      }\r\n\r\n      if (isSlot(this) && this._assignedNodes.length === 0 && isShadowRoot(nodeRoot(this))) {\r\n        signalSlotChange(this);\r\n      }\r\n\r\n      const root = nodeRoot(node);\r\n      if (isShadowRoot(root)) {\r\n        assignSlotableForTree(root);\r\n      }\r\n\r\n      if (this._attached && nodeImpl._attach) {\r\n        node._attach();\r\n      }\r\n\r\n      this._descendantAdded(this, node);\r\n\r\n      for (const inclusiveDescendant of shadowIncludingInclusiveDescendantsIterator(node)) {\r\n        if (inclusiveDescendant.isConnected) {\r\n          if (inclusiveDescendant._ceState === \"custom\") {\r\n            enqueueCECallbackReaction(inclusiveDescendant, \"connectedCallback\", []);\r\n          } else {\r\n            tryUpgradeElement(inclusiveDescendant);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!suppressObservers) {\r\n      queueTreeMutationRecord(this, nodesImpl, [], previousChildImpl, childImpl);\r\n    }\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-append\r\n  _append(nodeImpl) {\r\n    return this._preInsert(nodeImpl, null);\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-replace\r\n  _replace(nodeImpl, childImpl) {\r\n    const { nodeType, nodeName } = nodeImpl;\r\n    const { nodeType: parentType, nodeName: parentName } = this;\r\n\r\n    // Note: This section differs from the pre-insert validation algorithm.\r\n    if (\r\n      parentType !== NODE_TYPE.DOCUMENT_NODE &&\r\n      parentType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE &&\r\n      parentType !== NODE_TYPE.ELEMENT_NODE\r\n    ) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `Node can't be inserted in a ${parentName} parent.`,\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (isHostInclusiveAncestor(nodeImpl, this)) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The operation would yield an incorrect node tree.\",\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (childImpl && domSymbolTree.parent(childImpl) !== this) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The child can not be found in the parent.\",\r\n        \"NotFoundError\"\r\n      ]);\r\n    }\r\n\r\n    if (\r\n      nodeType !== NODE_TYPE.DOCUMENT_FRAGMENT_NODE &&\r\n      nodeType !== NODE_TYPE.DOCUMENT_TYPE_NODE &&\r\n      nodeType !== NODE_TYPE.ELEMENT_NODE &&\r\n      nodeType !== NODE_TYPE.TEXT_NODE &&\r\n      nodeType !== NODE_TYPE.CDATA_SECTION_NODE && // CData section extends from Text\r\n      nodeType !== NODE_TYPE.PROCESSING_INSTRUCTION_NODE &&\r\n      nodeType !== NODE_TYPE.COMMENT_NODE\r\n    ) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `${nodeName} node can't be inserted in parent node.`,\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (\r\n      (nodeType === NODE_TYPE.TEXT_NODE && parentType === NODE_TYPE.DOCUMENT_NODE) ||\r\n      (nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE && parentType !== NODE_TYPE.DOCUMENT_NODE)\r\n    ) {\r\n      throw DOMException.create(this._globalObject, [\r\n        `${nodeName} node can't be inserted in ${parentName} parent.`,\r\n        \"HierarchyRequestError\"\r\n      ]);\r\n    }\r\n\r\n    if (parentType === NODE_TYPE.DOCUMENT_NODE) {\r\n      const nodeChildren = domSymbolTree.childrenToArray(nodeImpl);\r\n      const parentChildren = domSymbolTree.childrenToArray(this);\r\n\r\n      switch (nodeType) {\r\n        case NODE_TYPE.DOCUMENT_FRAGMENT_NODE: {\r\n          const nodeChildrenElements = nodeChildren.filter(child => child.nodeType === NODE_TYPE.ELEMENT_NODE);\r\n          if (nodeChildrenElements.length > 1) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n\r\n          const hasNodeTextChildren = nodeChildren.some(child => child.nodeType === NODE_TYPE.TEXT_NODE);\r\n          if (hasNodeTextChildren) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n\r\n\r\n          const parentChildElements = parentChildren.filter(child => child.nodeType === NODE_TYPE.ELEMENT_NODE);\r\n          if (\r\n            nodeChildrenElements.length === 1 &&\r\n            (\r\n              (parentChildElements.length === 1 && parentChildElements[0] !== childImpl) ||\r\n              (\r\n                childImpl &&\r\n                domSymbolTree.nextSibling(childImpl) &&\r\n                domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE\r\n              )\r\n            )\r\n          ) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n          break;\r\n        }\r\n\r\n        case NODE_TYPE.ELEMENT_NODE:\r\n          if (\r\n            parentChildren.some(child => child.nodeType === NODE_TYPE.ELEMENT_NODE && child !== childImpl) ||\r\n            (\r\n              childImpl &&\r\n              domSymbolTree.nextSibling(childImpl) &&\r\n              domSymbolTree.nextSibling(childImpl).nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE\r\n            )\r\n          ) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n          break;\r\n\r\n        case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n          if (\r\n            parentChildren.some(child => child.nodeType === NODE_TYPE.DOCUMENT_TYPE_NODE && child !== childImpl) ||\r\n            (\r\n              childImpl &&\r\n              domSymbolTree.previousSibling(childImpl) &&\r\n              domSymbolTree.previousSibling(childImpl).nodeType === NODE_TYPE.ELEMENT_NODE\r\n            )\r\n          ) {\r\n            throw DOMException.create(this._globalObject, [\r\n              `Invalid insertion of ${nodeName} node in ${parentName} node.`,\r\n              \"HierarchyRequestError\"\r\n            ]);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    let referenceChildImpl = domSymbolTree.nextSibling(childImpl);\r\n    if (referenceChildImpl === nodeImpl) {\r\n      referenceChildImpl = domSymbolTree.nextSibling(nodeImpl);\r\n    }\r\n\r\n    const previousSiblingImpl = domSymbolTree.previousSibling(childImpl);\r\n\r\n    this._ownerDocument._adoptNode(nodeImpl);\r\n\r\n    let removedNodesImpl = [];\r\n\r\n    if (domSymbolTree.parent(childImpl)) {\r\n      removedNodesImpl = [childImpl];\r\n      this._remove(childImpl, true);\r\n    }\r\n\r\n    const nodesImpl = nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE ?\r\n      domSymbolTree.childrenToArray(nodeImpl) :\r\n      [nodeImpl];\r\n\r\n    this._insert(nodeImpl, referenceChildImpl, true);\r\n\r\n    queueTreeMutationRecord(this, nodesImpl, removedNodesImpl, previousSiblingImpl, referenceChildImpl);\r\n\r\n    return childImpl;\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-replace-all\r\n  _replaceAll(nodeImpl) {\r\n    if (nodeImpl !== null) {\r\n      this._ownerDocument._adoptNode(nodeImpl);\r\n    }\r\n\r\n    const removedNodesImpl = domSymbolTree.childrenToArray(this);\r\n\r\n    let addedNodesImpl;\r\n    if (nodeImpl === null) {\r\n      addedNodesImpl = [];\r\n    } else if (nodeImpl.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\r\n      addedNodesImpl = domSymbolTree.childrenToArray(nodeImpl);\r\n    } else {\r\n      addedNodesImpl = [nodeImpl];\r\n    }\r\n\r\n    for (const childImpl of domSymbolTree.childrenIterator(this)) {\r\n      this._remove(childImpl, true);\r\n    }\r\n\r\n    if (nodeImpl !== null) {\r\n      this._insert(nodeImpl, null, true);\r\n    }\r\n\r\n    if (addedNodesImpl.length > 0 || removedNodesImpl.length > 0) {\r\n      queueTreeMutationRecord(this, addedNodesImpl, removedNodesImpl, null, null);\r\n    }\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-pre-remove\r\n  _preRemove(childImpl) {\r\n    if (domSymbolTree.parent(childImpl) !== this) {\r\n      throw DOMException.create(this._globalObject, [\r\n        \"The node to be removed is not a child of this node.\",\r\n        \"NotFoundError\"\r\n      ]);\r\n    }\r\n\r\n    this._remove(childImpl);\r\n\r\n    return childImpl;\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#concept-node-remove\r\n  _remove(nodeImpl, suppressObservers) {\r\n    const index = domSymbolTree.index(nodeImpl);\r\n\r\n    for (const descendant of domSymbolTree.treeIterator(nodeImpl)) {\r\n      for (const range of descendant._referencedRanges) {\r\n        const { _start, _end } = range;\r\n\r\n        if (_start.node === descendant) {\r\n          range._setLiveRangeStart(this, index);\r\n        }\r\n\r\n        if (_end.node === descendant) {\r\n          range._setLiveRangeEnd(this, index);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const range of this._referencedRanges) {\r\n      const { _start, _end } = range;\r\n\r\n      if (_start.node === this && _start.offset > index) {\r\n        range._setLiveRangeStart(this, _start.offset - 1);\r\n      }\r\n\r\n      if (_end.node === this && _end.offset > index) {\r\n        range._setLiveRangeEnd(this, _end.offset - 1);\r\n      }\r\n    }\r\n\r\n    if (this._ownerDocument) {\r\n      this._ownerDocument._runPreRemovingSteps(nodeImpl);\r\n    }\r\n\r\n    const oldPreviousSiblingImpl = domSymbolTree.previousSibling(nodeImpl);\r\n    const oldNextSiblingImpl = domSymbolTree.nextSibling(nodeImpl);\r\n\r\n    domSymbolTree.remove(nodeImpl);\r\n\r\n    if (nodeImpl._assignedSlot) {\r\n      assignSlotable(nodeImpl._assignedSlot);\r\n    }\r\n\r\n    if (isSlot(this) && this._assignedNodes.length === 0 && isShadowRoot(nodeRoot(this))) {\r\n      signalSlotChange(this);\r\n    }\r\n\r\n    let hasSlotDescendant = isSlot(nodeImpl);\r\n    if (!hasSlotDescendant) {\r\n      for (const child of domSymbolTree.treeIterator(nodeImpl)) {\r\n        if (isSlot(child)) {\r\n          hasSlotDescendant = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hasSlotDescendant) {\r\n      assignSlotableForTree(nodeRoot(this));\r\n      assignSlotableForTree(nodeImpl);\r\n    }\r\n\r\n    this._modified();\r\n    nodeImpl._detach();\r\n    this._descendantRemoved(this, nodeImpl);\r\n\r\n    if (this.isConnected) {\r\n      if (nodeImpl._ceState === \"custom\") {\r\n        enqueueCECallbackReaction(nodeImpl, \"disconnectedCallback\", []);\r\n      }\r\n\r\n      for (const descendantImpl of shadowIncludingDescendantsIterator(nodeImpl)) {\r\n        if (descendantImpl._ceState === \"custom\") {\r\n          enqueueCECallbackReaction(descendantImpl, \"disconnectedCallback\", []);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!suppressObservers) {\r\n      queueTreeMutationRecord(this, [], [nodeImpl], oldPreviousSiblingImpl, oldNextSiblingImpl);\r\n    }\r\n\r\n    if (nodeImpl.nodeType === NODE_TYPE.TEXT_NODE) {\r\n      this._childTextContentChangeSteps();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: NodeImpl\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}