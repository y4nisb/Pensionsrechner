{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  HTML_NS\n} = require(\"./helpers/namespaces\");\nconst {\n  asciiLowercase\n} = require(\"./helpers/strings\");\nconst {\n  queueAttributeMutationRecord\n} = require(\"./helpers/mutation-observers\");\nconst {\n  enqueueCECallbackReaction\n} = require(\"./helpers/custom-elements\");\n\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\n/* eslint-disable no-restricted-properties */\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n};\n\n// https://dom.spec.whatwg.org/#concept-element-attributes-change\nexports.changeAttribute = (element, attribute, value) => {\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, _value, value, _namespace]);\n  }\n  attribute._value = value;\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n  element._attrModified(attribute._qualifiedName, value, _value);\n};\n\n// https://dom.spec.whatwg.org/#concept-element-attributes-append\nexports.appendAttribute = function (element, attribute) {\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, null);\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, null, _value, _namespace]);\n  }\n  const attributeList = element._attributeList;\n  attributeList.push(attribute);\n  attribute._element = element;\n\n  // Sync name cache\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n  entry.push(attribute);\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n  element._attrModified(name, _value, null);\n};\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, _value, null, _namespace]);\n  }\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null;\n\n      // Sync name cache\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n      if (entry.length === 0) {\n        cache.delete(name);\n      }\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n      element._attrModified(name, null, attribute._value);\n      return;\n    }\n  }\n};\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = oldAttr;\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, _value, newAttr._value, _namespace]);\n  }\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element;\n\n      // Sync name cache\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n      element._attrModified(name, newAttr._value, oldAttr._value);\n      return;\n    }\n  }\n};\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\n  if (element._namespaceURI === HTML_NS && element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n  if (!entry) {\n    return null;\n  }\n  return entry[0];\n};\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n  return null;\n};\n\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n  if (!attr) {\n    return \"\";\n  }\n  return attr._value;\n};\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n  if (!attr) {\n    return \"\";\n  }\n  return attr._value;\n};\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n\n  if (attr._element !== null && attr._element !== element) {\n    throw DOMException.create(element._globalObject, [\"The attribute is in use.\", \"InUseAttributeError\"]);\n  }\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n  if (oldAttr === attr) {\n    return attr;\n  }\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n  return oldAttr;\n};\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n\n  if (prefix === undefined) {\n    prefix = null;\n  }\n  if (namespace === undefined) {\n    namespace = null;\n  }\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attribute === null) {\n    const newAttribute = element._ownerDocument._createAttribute({\n      namespace,\n      namespacePrefix: prefix,\n      localName,\n      value\n    });\n    exports.appendAttribute(element, newAttribute);\n    return;\n  }\n  exports.changeAttribute(element, attribute, value);\n};\n\n// https://dom.spec.whatwg.org/#set-an-existing-attribute-value\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  const element = attribute._element;\n  if (element === null) {\n    attribute._value = value;\n  } else {\n    exports.changeAttribute(element, attribute, value);\n  }\n};\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\n  const attr = exports.getAttributeByName(element, name);\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n  return attr;\n};\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n  return attr;\n};\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n\n  return element._attributeList.map(a => a._qualifiedName);\n};\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n\n  return element._attributeList.length > 0;\n};","map":{"version":3,"names":["DOMException","require","HTML_NS","asciiLowercase","queueAttributeMutationRecord","enqueueCECallbackReaction","exports","hasAttribute","element","A","_attributeList","includes","hasAttributeByName","name","_attributesByNameMap","has","hasAttributeByNameNS","namespace","localName","some","attribute","_localName","_namespace","changeAttribute","value","_value","_ceState","_attrModified","_qualifiedName","appendAttribute","attributeList","push","_element","cache","entry","get","set","removeAttribute","i","length","splice","indexOf","delete","replaceAttribute","oldAttr","newAttr","getAttributeByName","_namespaceURI","_ownerDocument","_parsingMode","getAttributeByNameNS","attr","getAttributeValue","getAttributeValueNS","setAttribute","create","_globalObject","setAttributeValue","prefix","undefined","newAttribute","_createAttribute","namespacePrefix","setAnExistingAttributeValue","removeAttributeByName","removeAttributeByNameNS","attributeNames","map","a","hasAttributes"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/attributes.js"],"sourcesContent":["\"use strict\";\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\n\r\nconst { HTML_NS } = require(\"./helpers/namespaces\");\r\nconst { asciiLowercase } = require(\"./helpers/strings\");\r\nconst { queueAttributeMutationRecord } = require(\"./helpers/mutation-observers\");\r\nconst { enqueueCECallbackReaction } = require(\"./helpers/custom-elements\");\r\n\r\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\r\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\r\n\r\n/* eslint-disable no-restricted-properties */\r\n\r\nexports.hasAttribute = function (element, A) {\r\n  return element._attributeList.includes(A);\r\n};\r\n\r\nexports.hasAttributeByName = function (element, name) {\r\n  return element._attributesByNameMap.has(name);\r\n};\r\n\r\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\r\n  return element._attributeList.some(attribute => {\r\n    return attribute._localName === localName && attribute._namespace === namespace;\r\n  });\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#concept-element-attributes-change\r\nexports.changeAttribute = (element, attribute, value) => {\r\n  const { _localName, _namespace, _value } = attribute;\r\n\r\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\r\n\r\n  if (element._ceState === \"custom\") {\r\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\r\n      _localName,\r\n      _value,\r\n      value,\r\n      _namespace\r\n    ]);\r\n  }\r\n\r\n  attribute._value = value;\r\n\r\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\r\n  element._attrModified(attribute._qualifiedName, value, _value);\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#concept-element-attributes-append\r\nexports.appendAttribute = function (element, attribute) {\r\n  const { _localName, _namespace, _value } = attribute;\r\n  queueAttributeMutationRecord(element, _localName, _namespace, null);\r\n\r\n  if (element._ceState === \"custom\") {\r\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\r\n      _localName,\r\n      null,\r\n      _value,\r\n      _namespace\r\n    ]);\r\n  }\r\n\r\n  const attributeList = element._attributeList;\r\n\r\n  attributeList.push(attribute);\r\n  attribute._element = element;\r\n\r\n  // Sync name cache\r\n  const name = attribute._qualifiedName;\r\n  const cache = element._attributesByNameMap;\r\n  let entry = cache.get(name);\r\n  if (!entry) {\r\n    entry = [];\r\n    cache.set(name, entry);\r\n  }\r\n  entry.push(attribute);\r\n\r\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\r\n  element._attrModified(name, _value, null);\r\n};\r\n\r\nexports.removeAttribute = function (element, attribute) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\r\n\r\n  const { _localName, _namespace, _value } = attribute;\r\n\r\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\r\n\r\n  if (element._ceState === \"custom\") {\r\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\r\n      _localName,\r\n      _value,\r\n      null,\r\n      _namespace\r\n    ]);\r\n  }\r\n\r\n  const attributeList = element._attributeList;\r\n\r\n  for (let i = 0; i < attributeList.length; ++i) {\r\n    if (attributeList[i] === attribute) {\r\n      attributeList.splice(i, 1);\r\n      attribute._element = null;\r\n\r\n      // Sync name cache\r\n      const name = attribute._qualifiedName;\r\n      const cache = element._attributesByNameMap;\r\n      const entry = cache.get(name);\r\n      entry.splice(entry.indexOf(attribute), 1);\r\n      if (entry.length === 0) {\r\n        cache.delete(name);\r\n      }\r\n\r\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\r\n      element._attrModified(name, null, attribute._value);\r\n\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\r\n\r\n  const { _localName, _namespace, _value } = oldAttr;\r\n\r\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\r\n\r\n  if (element._ceState === \"custom\") {\r\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\r\n      _localName,\r\n      _value,\r\n      newAttr._value,\r\n      _namespace\r\n    ]);\r\n  }\r\n\r\n  const attributeList = element._attributeList;\r\n\r\n  for (let i = 0; i < attributeList.length; ++i) {\r\n    if (attributeList[i] === oldAttr) {\r\n      attributeList.splice(i, 1, newAttr);\r\n      oldAttr._element = null;\r\n      newAttr._element = element;\r\n\r\n      // Sync name cache\r\n      const name = newAttr._qualifiedName;\r\n      const cache = element._attributesByNameMap;\r\n      let entry = cache.get(name);\r\n      if (!entry) {\r\n        entry = [];\r\n        cache.set(name, entry);\r\n      }\r\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\r\n\r\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\r\n      element._attrModified(name, newAttr._value, oldAttr._value);\r\n\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexports.getAttributeByName = function (element, name) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\r\n\r\n  if (element._namespaceURI === HTML_NS &&\r\n      element._ownerDocument._parsingMode === \"html\") {\r\n    name = asciiLowercase(name);\r\n  }\r\n\r\n  const cache = element._attributesByNameMap;\r\n  const entry = cache.get(name);\r\n  if (!entry) {\r\n    return null;\r\n  }\r\n\r\n  return entry[0];\r\n};\r\n\r\nexports.getAttributeByNameNS = function (element, namespace, localName) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\r\n\r\n  if (namespace === \"\") {\r\n    namespace = null;\r\n  }\r\n\r\n  const attributeList = element._attributeList;\r\n  for (let i = 0; i < attributeList.length; ++i) {\r\n    const attr = attributeList[i];\r\n    if (attr._namespace === namespace && attr._localName === localName) {\r\n      return attr;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\r\n// Separated them into two to keep symmetry with other functions.\r\nexports.getAttributeValue = function (element, localName) {\r\n  const attr = exports.getAttributeByNameNS(element, null, localName);\r\n\r\n  if (!attr) {\r\n    return \"\";\r\n  }\r\n\r\n  return attr._value;\r\n};\r\n\r\nexports.getAttributeValueNS = function (element, namespace, localName) {\r\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\r\n\r\n  if (!attr) {\r\n    return \"\";\r\n  }\r\n\r\n  return attr._value;\r\n};\r\n\r\nexports.setAttribute = function (element, attr) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\r\n\r\n  if (attr._element !== null && attr._element !== element) {\r\n    throw DOMException.create(element._globalObject, [\"The attribute is in use.\", \"InUseAttributeError\"]);\r\n  }\r\n\r\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\r\n  if (oldAttr === attr) {\r\n    return attr;\r\n  }\r\n\r\n  if (oldAttr !== null) {\r\n    exports.replaceAttribute(element, oldAttr, attr);\r\n  } else {\r\n    exports.appendAttribute(element, attr);\r\n  }\r\n\r\n  return oldAttr;\r\n};\r\n\r\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\r\n\r\n  if (prefix === undefined) {\r\n    prefix = null;\r\n  }\r\n  if (namespace === undefined) {\r\n    namespace = null;\r\n  }\r\n\r\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\r\n  if (attribute === null) {\r\n    const newAttribute = element._ownerDocument._createAttribute({\r\n      namespace,\r\n      namespacePrefix: prefix,\r\n      localName,\r\n      value\r\n    });\r\n    exports.appendAttribute(element, newAttribute);\r\n\r\n    return;\r\n  }\r\n\r\n  exports.changeAttribute(element, attribute, value);\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#set-an-existing-attribute-value\r\nexports.setAnExistingAttributeValue = (attribute, value) => {\r\n  const element = attribute._element;\r\n  if (element === null) {\r\n    attribute._value = value;\r\n  } else {\r\n    exports.changeAttribute(element, attribute, value);\r\n  }\r\n};\r\n\r\nexports.removeAttributeByName = function (element, name) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\r\n\r\n  const attr = exports.getAttributeByName(element, name);\r\n\r\n  if (attr !== null) {\r\n    exports.removeAttribute(element, attr);\r\n  }\r\n\r\n  return attr;\r\n};\r\n\r\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\r\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\r\n\r\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\r\n\r\n  if (attr !== null) {\r\n    exports.removeAttribute(element, attr);\r\n  }\r\n\r\n  return attr;\r\n};\r\n\r\nexports.attributeNames = function (element) {\r\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\r\n\r\n  return element._attributeList.map(a => a._qualifiedName);\r\n};\r\n\r\nexports.hasAttributes = function (element) {\r\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\r\n\r\n  return element._attributeList.length > 0;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}