{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst {\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\nconst {\n  parseFloatingPointNumber\n} = require(\"../helpers/strings\");\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    const parsedValue = parseFloatingPointNumber(valueAttr);\n    if (parsedValue !== null && parsedValue > 0) {\n      return parsedValue;\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n  get _currentValue() {\n    const value = this._value;\n    return value > this.max ? this.max : value;\n  }\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n    return 0;\n  }\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n  get max() {\n    const max = this.getAttributeNS(null, \"max\");\n    if (max !== null) {\n      const parsedMax = parseFloatingPointNumber(max);\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n    return 1.0;\n  }\n  set max(value) {\n    if (value > 0) {\n      this.setAttributeNS(null, \"max\", value);\n    }\n  }\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n    return this._currentValue / this.max;\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n}\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","getLabelsForLabelable","parseFloatingPointNumber","HTMLProgressElementImpl","constructor","globalObject","args","privateData","_labels","_isDeterminate","hasAttributeNS","_value","valueAttr","getAttributeNS","parsedValue","_currentValue","value","max","setAttributeNS","parsedMax","position","labels","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\r\nconst { getLabelsForLabelable } = require(\"../helpers/form-controls\");\r\nconst { parseFloatingPointNumber } = require(\"../helpers/strings\");\r\n\r\nclass HTMLProgressElementImpl extends HTMLElementImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n    this._labels = null;\r\n  }\r\n\r\n  get _isDeterminate() {\r\n    return this.hasAttributeNS(null, \"value\");\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\r\n  get _value() {\r\n    const valueAttr = this.getAttributeNS(null, \"value\");\r\n    const parsedValue = parseFloatingPointNumber(valueAttr);\r\n    if (parsedValue !== null && parsedValue > 0) {\r\n      return parsedValue;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\r\n  get _currentValue() {\r\n    const value = this._value;\r\n    return value > this.max ? this.max : value;\r\n  }\r\n\r\n  get value() {\r\n    if (this._isDeterminate) {\r\n      return this._currentValue;\r\n    }\r\n    return 0;\r\n  }\r\n  set value(value) {\r\n    this.setAttributeNS(null, \"value\", value);\r\n  }\r\n\r\n  get max() {\r\n    const max = this.getAttributeNS(null, \"max\");\r\n    if (max !== null) {\r\n      const parsedMax = parseFloatingPointNumber(max);\r\n      if (parsedMax !== null && parsedMax > 0) {\r\n        return parsedMax;\r\n      }\r\n    }\r\n    return 1.0;\r\n  }\r\n  set max(value) {\r\n    if (value > 0) {\r\n      this.setAttributeNS(null, \"max\", value);\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (!this._isDeterminate) {\r\n      return -1;\r\n    }\r\n\r\n    return this._currentValue / this.max;\r\n  }\r\n\r\n  get labels() {\r\n    return getLabelsForLabelable(this);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: HTMLProgressElementImpl\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACC,cAAc;AACpE,MAAM;EAAEC;AAAsB,CAAC,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AACrE,MAAM;EAAEG;AAAyB,CAAC,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAElE,MAAMI,uBAAuB,SAASL,eAAe,CAAC;EACpDM,WAAWA,CAACC,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAE;IAC3C,KAAK,CAACF,YAAY,EAAEC,IAAI,EAAEC,WAAW,CAAC;IACtC,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB;EAEA,IAAIC,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC;EAC3C;;EAEA;EACA,IAAIC,MAAMA,CAAA,EAAG;IACX,MAAMC,SAAS,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC;IACpD,MAAMC,WAAW,GAAGZ,wBAAwB,CAACU,SAAS,CAAC;IACvD,IAAIE,WAAW,KAAK,IAAI,IAAIA,WAAW,GAAG,CAAC,EAAE;MAC3C,OAAOA,WAAW;IACpB;IACA,OAAO,CAAC;EACV;;EAEA;EACA,IAAIC,aAAaA,CAAA,EAAG;IAClB,MAAMC,KAAK,GAAG,IAAI,CAACL,MAAM;IACzB,OAAOK,KAAK,GAAG,IAAI,CAACC,GAAG,GAAG,IAAI,CAACA,GAAG,GAAGD,KAAK;EAC5C;EAEA,IAAIA,KAAKA,CAAA,EAAG;IACV,IAAI,IAAI,CAACP,cAAc,EAAE;MACvB,OAAO,IAAI,CAACM,aAAa;IAC3B;IACA,OAAO,CAAC;EACV;EACA,IAAIC,KAAKA,CAACA,KAAK,EAAE;IACf,IAAI,CAACE,cAAc,CAAC,IAAI,EAAE,OAAO,EAAEF,KAAK,CAAC;EAC3C;EAEA,IAAIC,GAAGA,CAAA,EAAG;IACR,MAAMA,GAAG,GAAG,IAAI,CAACJ,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC;IAC5C,IAAII,GAAG,KAAK,IAAI,EAAE;MAChB,MAAME,SAAS,GAAGjB,wBAAwB,CAACe,GAAG,CAAC;MAC/C,IAAIE,SAAS,KAAK,IAAI,IAAIA,SAAS,GAAG,CAAC,EAAE;QACvC,OAAOA,SAAS;MAClB;IACF;IACA,OAAO,GAAG;EACZ;EACA,IAAIF,GAAGA,CAACD,KAAK,EAAE;IACb,IAAIA,KAAK,GAAG,CAAC,EAAE;MACb,IAAI,CAACE,cAAc,CAAC,IAAI,EAAE,KAAK,EAAEF,KAAK,CAAC;IACzC;EACF;EAEA,IAAII,QAAQA,CAAA,EAAG;IACb,IAAI,CAAC,IAAI,CAACX,cAAc,EAAE;MACxB,OAAO,CAAC,CAAC;IACX;IAEA,OAAO,IAAI,CAACM,aAAa,GAAG,IAAI,CAACE,GAAG;EACtC;EAEA,IAAII,MAAMA,CAAA,EAAG;IACX,OAAOpB,qBAAqB,CAAC,IAAI,CAAC;EACpC;AACF;AAEAqB,MAAM,CAACC,OAAO,GAAG;EACfvB,cAAc,EAAEG;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}