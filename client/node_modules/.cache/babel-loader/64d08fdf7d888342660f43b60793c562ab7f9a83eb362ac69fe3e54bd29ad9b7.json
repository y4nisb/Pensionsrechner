{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\nconst whatwgURL = require(\"whatwg-url\");\nconst {\n  domSymbolTree\n} = require(\"./living/helpers/internal-constants\");\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\nexports.hasWeakRefs = typeof WeakRef === \"function\";\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  // path might contain spaces, so convert those to %20\n  return \"file://\" + encodeURI(pathname);\n};\n\n/**\r\n * Define a set of properties on an object, by copying the property descriptors\r\n * from the original object.\r\n *\r\n * - `object` {Object} the target object\r\n * - `properties` {Object} the source from which to copy property descriptors\r\n */\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n\n/**\r\n * Define a list of constants on a constructor and its .prototype\r\n *\r\n * - `Constructor` {Function} the constructor to define the constants on\r\n * - `propertyMap` {Object}  key/value map of properties to define\r\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\nexports.mixin = (target, source) => {\n  const keys = Reflect.ownKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\nlet memoizeQueryTypeCounter = 0;\n\n/**\r\n * Returns a version of a method that memoizes specific types of calls on the object\r\n *\r\n * - `fn` {Function} the method to be memozied\r\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n  const type = memoizeQueryTypeCounter++;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (!this._memoizedQueries) {\n      return fn.apply(this, args);\n    }\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n    let key;\n    if (args.length === 1 && typeof args[0] === \"string\") {\n      key = args[0];\n    } else if (args.length === 2 && typeof args[0] === \"string\" && typeof args[1] === \"string\") {\n      key = args[0] + \"::\" + args[1];\n    } else {\n      return fn.apply(this, args);\n    }\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, args);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n    yield [firstResult.done ? null : firstResult.value, secondResult.done ? null : secondResult.value];\n  }\n};\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) {\n    // b is preceding a\n    return 1;\n  }\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  }\n\n  // disconnected or equal:\n  return 0;\n};\n\n/* eslint-disable global-require */\n\nexports.Canvas = null;\nlet canvasInstalled = false;\ntry {\n  require.resolve(\"canvas\");\n  canvasInstalled = true;\n} catch (e) {\n  // canvas is not installed\n}\nif (canvasInstalled) {\n  const Canvas = require(\"canvas\");\n  if (typeof Canvas.createCanvas === \"function\") {\n    // In browserify, the require will succeed but return an empty object\n    exports.Canvas = Canvas;\n  }\n}","map":{"version":3,"names":["path","require","whatwgURL","domSymbolTree","SYMBOL_TREE_POSITION","TreePosition","exports","hasWeakRefs","WeakRef","toFileUrl","fileName","pathname","resolve","process","cwd","replace","encodeURI","define","object","properties","name","Object","getOwnPropertyNames","propDesc","getOwnPropertyDescriptor","defineProperty","addConstants","Constructor","propertyMap","property","value","addConstant","prototype","configurable","enumerable","writable","mixin","target","source","keys","Reflect","ownKeys","i","length","memoizeQueryTypeCounter","memoizeQuery","fn","type","_len","arguments","args","Array","_key","_memoizedQueries","apply","create","key","isValidAbsoluteURL","str","parseURL","isValidTargetOrigin","simultaneousIterators","first","second","firstResult","next","secondResult","done","treeOrderSorter","a","b","compare","compareTreePosition","PRECEDING","FOLLOWING","Canvas","canvasInstalled","e","createCanvas"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/utils.js"],"sourcesContent":["\"use strict\";\r\nconst path = require(\"path\");\r\nconst whatwgURL = require(\"whatwg-url\");\r\nconst { domSymbolTree } = require(\"./living/helpers/internal-constants\");\r\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\r\n\r\nexports.hasWeakRefs = typeof WeakRef === \"function\";\r\n\r\nexports.toFileUrl = function (fileName) {\r\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\r\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\r\n  // drive letter.\r\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\r\n  if (pathname[0] !== \"/\") {\r\n    pathname = \"/\" + pathname;\r\n  }\r\n\r\n  // path might contain spaces, so convert those to %20\r\n  return \"file://\" + encodeURI(pathname);\r\n};\r\n\r\n/**\r\n * Define a set of properties on an object, by copying the property descriptors\r\n * from the original object.\r\n *\r\n * - `object` {Object} the target object\r\n * - `properties` {Object} the source from which to copy property descriptors\r\n */\r\nexports.define = function define(object, properties) {\r\n  for (const name of Object.getOwnPropertyNames(properties)) {\r\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\r\n    Object.defineProperty(object, name, propDesc);\r\n  }\r\n};\r\n\r\n/**\r\n * Define a list of constants on a constructor and its .prototype\r\n *\r\n * - `Constructor` {Function} the constructor to define the constants on\r\n * - `propertyMap` {Object}  key/value map of properties to define\r\n */\r\nexports.addConstants = function addConstants(Constructor, propertyMap) {\r\n  for (const property in propertyMap) {\r\n    const value = propertyMap[property];\r\n    addConstant(Constructor, property, value);\r\n    addConstant(Constructor.prototype, property, value);\r\n  }\r\n};\r\n\r\nfunction addConstant(object, property, value) {\r\n  Object.defineProperty(object, property, {\r\n    configurable: false,\r\n    enumerable: true,\r\n    writable: false,\r\n    value\r\n  });\r\n}\r\n\r\nexports.mixin = (target, source) => {\r\n  const keys = Reflect.ownKeys(source);\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    if (keys[i] in target) {\r\n      continue;\r\n    }\r\n\r\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\r\n  }\r\n};\r\n\r\nlet memoizeQueryTypeCounter = 0;\r\n\r\n/**\r\n * Returns a version of a method that memoizes specific types of calls on the object\r\n *\r\n * - `fn` {Function} the method to be memozied\r\n */\r\nexports.memoizeQuery = function memoizeQuery(fn) {\r\n  // Only memoize query functions with arity <= 2\r\n  if (fn.length > 2) {\r\n    return fn;\r\n  }\r\n\r\n  const type = memoizeQueryTypeCounter++;\r\n\r\n  return function (...args) {\r\n    if (!this._memoizedQueries) {\r\n      return fn.apply(this, args);\r\n    }\r\n\r\n    if (!this._memoizedQueries[type]) {\r\n      this._memoizedQueries[type] = Object.create(null);\r\n    }\r\n\r\n    let key;\r\n    if (args.length === 1 && typeof args[0] === \"string\") {\r\n      key = args[0];\r\n    } else if (args.length === 2 && typeof args[0] === \"string\" && typeof args[1] === \"string\") {\r\n      key = args[0] + \"::\" + args[1];\r\n    } else {\r\n      return fn.apply(this, args);\r\n    }\r\n\r\n    if (!(key in this._memoizedQueries[type])) {\r\n      this._memoizedQueries[type][key] = fn.apply(this, args);\r\n    }\r\n    return this._memoizedQueries[type][key];\r\n  };\r\n};\r\n\r\nfunction isValidAbsoluteURL(str) {\r\n  return whatwgURL.parseURL(str) !== null;\r\n}\r\n\r\nexports.isValidTargetOrigin = function (str) {\r\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\r\n};\r\n\r\nexports.simultaneousIterators = function* (first, second) {\r\n  for (;;) {\r\n    const firstResult = first.next();\r\n    const secondResult = second.next();\r\n\r\n    if (firstResult.done && secondResult.done) {\r\n      return;\r\n    }\r\n\r\n    yield [\r\n      firstResult.done ? null : firstResult.value,\r\n      secondResult.done ? null : secondResult.value\r\n    ];\r\n  }\r\n};\r\n\r\nexports.treeOrderSorter = function (a, b) {\r\n  const compare = domSymbolTree.compareTreePosition(a, b);\r\n\r\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) { // b is preceding a\r\n    return 1;\r\n  }\r\n\r\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\r\n    return -1;\r\n  }\r\n\r\n  // disconnected or equal:\r\n  return 0;\r\n};\r\n\r\n/* eslint-disable global-require */\r\n\r\nexports.Canvas = null;\r\nlet canvasInstalled = false;\r\ntry {\r\n  require.resolve(\"canvas\");\r\n  canvasInstalled = true;\r\n} catch (e) {\r\n  // canvas is not installed\r\n}\r\nif (canvasInstalled) {\r\n  const Canvas = require(\"canvas\");\r\n  if (typeof Canvas.createCanvas === \"function\") {\r\n    // In browserify, the require will succeed but return an empty object\r\n    exports.Canvas = Canvas;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}