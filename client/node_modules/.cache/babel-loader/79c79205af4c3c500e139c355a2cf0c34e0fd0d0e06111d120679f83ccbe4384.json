{"ast":null,"code":"/*********************************************************************\r\n * These are commonly used parsers for CSS Values they take a string *\r\n * to parse and return a string after it's been converted, if needed *\r\n ********************************************************************/\n'use strict';\n\nconst namedColors = require('./named_colors.json');\nconst {\n  hslToRgb\n} = require('./utils/colorSpace');\nexports.TYPES = {\n  INTEGER: 1,\n  NUMBER: 2,\n  LENGTH: 3,\n  PERCENT: 4,\n  URL: 5,\n  COLOR: 6,\n  STRING: 7,\n  ANGLE: 8,\n  KEYWORD: 9,\n  NULL_OR_EMPTY_STR: 10,\n  CALC: 11\n};\n\n// rough regular expressions\nvar integerRegEx = /^[-+]?[0-9]+$/;\nvar numberRegEx = /^[-+]?[0-9]*\\.?[0-9]+$/;\nvar lengthRegEx = /^(0|[-+]?[0-9]*\\.?[0-9]+(in|cm|em|mm|pt|pc|px|ex|rem|vh|vw|ch))$/;\nvar percentRegEx = /^[-+]?[0-9]*\\.?[0-9]+%$/;\nvar urlRegEx = /^url\\(\\s*([^)]*)\\s*\\)$/;\nvar stringRegEx = /^(\"[^\"]*\"|'[^']*')$/;\nvar colorRegEx1 = /^#([0-9a-fA-F]{3,4}){1,2}$/;\nvar colorRegEx2 = /^rgb\\(([^)]*)\\)$/;\nvar colorRegEx3 = /^rgba\\(([^)]*)\\)$/;\nvar calcRegEx = /^calc\\(([^)]*)\\)$/;\nvar colorRegEx4 = /^hsla?\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*(,\\s*(-?\\d+|-?\\d*.\\d+)\\s*)?\\)/;\nvar angleRegEx = /^([-+]?[0-9]*\\.?[0-9]+)(deg|grad|rad)$/;\n\n// This will return one of the above types based on the passed in string\nexports.valueType = function valueType(val) {\n  if (val === '' || val === null) {\n    return exports.TYPES.NULL_OR_EMPTY_STR;\n  }\n  if (typeof val === 'number') {\n    val = val.toString();\n  }\n  if (typeof val !== 'string') {\n    return undefined;\n  }\n  if (integerRegEx.test(val)) {\n    return exports.TYPES.INTEGER;\n  }\n  if (numberRegEx.test(val)) {\n    return exports.TYPES.NUMBER;\n  }\n  if (lengthRegEx.test(val)) {\n    return exports.TYPES.LENGTH;\n  }\n  if (percentRegEx.test(val)) {\n    return exports.TYPES.PERCENT;\n  }\n  if (urlRegEx.test(val)) {\n    return exports.TYPES.URL;\n  }\n  if (calcRegEx.test(val)) {\n    return exports.TYPES.CALC;\n  }\n  if (stringRegEx.test(val)) {\n    return exports.TYPES.STRING;\n  }\n  if (angleRegEx.test(val)) {\n    return exports.TYPES.ANGLE;\n  }\n  if (colorRegEx1.test(val)) {\n    return exports.TYPES.COLOR;\n  }\n  var res = colorRegEx2.exec(val);\n  var parts;\n  if (res !== null) {\n    parts = res[1].split(/\\s*,\\s*/);\n    if (parts.length !== 3) {\n      return undefined;\n    }\n    if (parts.every(percentRegEx.test.bind(percentRegEx)) || parts.every(integerRegEx.test.bind(integerRegEx))) {\n      return exports.TYPES.COLOR;\n    }\n    return undefined;\n  }\n  res = colorRegEx3.exec(val);\n  if (res !== null) {\n    parts = res[1].split(/\\s*,\\s*/);\n    if (parts.length !== 4) {\n      return undefined;\n    }\n    if (parts.slice(0, 3).every(percentRegEx.test.bind(percentRegEx)) || parts.slice(0, 3).every(integerRegEx.test.bind(integerRegEx))) {\n      if (numberRegEx.test(parts[3])) {\n        return exports.TYPES.COLOR;\n      }\n    }\n    return undefined;\n  }\n  if (colorRegEx4.test(val)) {\n    return exports.TYPES.COLOR;\n  }\n\n  // could still be a color, one of the standard keyword colors\n  val = val.toLowerCase();\n  if (namedColors.includes(val)) {\n    return exports.TYPES.COLOR;\n  }\n  switch (val) {\n    // the following are deprecated in CSS3\n    case 'activeborder':\n    case 'activecaption':\n    case 'appworkspace':\n    case 'background':\n    case 'buttonface':\n    case 'buttonhighlight':\n    case 'buttonshadow':\n    case 'buttontext':\n    case 'captiontext':\n    case 'graytext':\n    case 'highlight':\n    case 'highlighttext':\n    case 'inactiveborder':\n    case 'inactivecaption':\n    case 'inactivecaptiontext':\n    case 'infobackground':\n    case 'infotext':\n    case 'menu':\n    case 'menutext':\n    case 'scrollbar':\n    case 'threeddarkshadow':\n    case 'threedface':\n    case 'threedhighlight':\n    case 'threedlightshadow':\n    case 'threedshadow':\n    case 'window':\n    case 'windowframe':\n    case 'windowtext':\n      return exports.TYPES.COLOR;\n    default:\n      return exports.TYPES.KEYWORD;\n  }\n};\nexports.parseInteger = function parseInteger(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.INTEGER) {\n    return undefined;\n  }\n  return String(parseInt(val, 10));\n};\nexports.parseNumber = function parseNumber(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.NUMBER && type !== exports.TYPES.INTEGER) {\n    return undefined;\n  }\n  return String(parseFloat(val));\n};\nexports.parseLength = function parseLength(val) {\n  if (val === 0 || val === '0') {\n    return '0px';\n  }\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.LENGTH) {\n    return undefined;\n  }\n  return val;\n};\nexports.parsePercent = function parsePercent(val) {\n  if (val === 0 || val === '0') {\n    return '0%';\n  }\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.PERCENT) {\n    return undefined;\n  }\n  return val;\n};\n\n// either a length or a percent\nexports.parseMeasurement = function parseMeasurement(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.CALC) {\n    return val;\n  }\n  var length = exports.parseLength(val);\n  if (length !== undefined) {\n    return length;\n  }\n  return exports.parsePercent(val);\n};\nexports.parseUrl = function parseUrl(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  var res = urlRegEx.exec(val);\n  // does it match the regex?\n  if (!res) {\n    return undefined;\n  }\n  var str = res[1];\n  // if it starts with single or double quotes, does it end with the same?\n  if ((str[0] === '\"' || str[0] === \"'\") && str[0] !== str[str.length - 1]) {\n    return undefined;\n  }\n  if (str[0] === '\"' || str[0] === \"'\") {\n    str = str.substr(1, str.length - 2);\n  }\n  var i;\n  for (i = 0; i < str.length; i++) {\n    switch (str[i]) {\n      case '(':\n      case ')':\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case \"'\":\n      case '\"':\n        return undefined;\n      case '\\\\':\n        i++;\n        break;\n    }\n  }\n  return 'url(' + str + ')';\n};\nexports.parseString = function parseString(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.STRING) {\n    return undefined;\n  }\n  var i;\n  for (i = 1; i < val.length - 1; i++) {\n    switch (val[i]) {\n      case val[0]:\n        return undefined;\n      case '\\\\':\n        i++;\n        while (i < val.length - 1 && /[0-9A-Fa-f]/.test(val[i])) {\n          i++;\n        }\n        break;\n    }\n  }\n  if (i >= val.length) {\n    return undefined;\n  }\n  return val;\n};\nexports.parseColor = function parseColor(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  var red,\n    green,\n    blue,\n    hue,\n    saturation,\n    lightness,\n    alpha = 1;\n  var parts;\n  var res = colorRegEx1.exec(val);\n  // is it #aaa, #ababab, #aaaa, #abababaa\n  if (res) {\n    var defaultHex = val.substr(1);\n    var hex = val.substr(1);\n    if (hex.length === 3 || hex.length === 4) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      if (defaultHex.length === 4) {\n        hex = hex + defaultHex[3] + defaultHex[3];\n      }\n    }\n    red = parseInt(hex.substr(0, 2), 16);\n    green = parseInt(hex.substr(2, 2), 16);\n    blue = parseInt(hex.substr(4, 2), 16);\n    if (hex.length === 8) {\n      var hexAlpha = hex.substr(6, 2);\n      var hexAlphaToRgbaAlpha = Number((parseInt(hexAlpha, 16) / 255).toFixed(3));\n      return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + hexAlphaToRgbaAlpha + ')';\n    }\n    return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n  }\n  res = colorRegEx2.exec(val);\n  if (res) {\n    parts = res[1].split(/\\s*,\\s*/);\n    if (parts.length !== 3) {\n      return undefined;\n    }\n    if (parts.every(percentRegEx.test.bind(percentRegEx))) {\n      red = Math.floor(parseFloat(parts[0].slice(0, -1)) * 255 / 100);\n      green = Math.floor(parseFloat(parts[1].slice(0, -1)) * 255 / 100);\n      blue = Math.floor(parseFloat(parts[2].slice(0, -1)) * 255 / 100);\n    } else if (parts.every(integerRegEx.test.bind(integerRegEx))) {\n      red = parseInt(parts[0], 10);\n      green = parseInt(parts[1], 10);\n      blue = parseInt(parts[2], 10);\n    } else {\n      return undefined;\n    }\n    red = Math.min(255, Math.max(0, red));\n    green = Math.min(255, Math.max(0, green));\n    blue = Math.min(255, Math.max(0, blue));\n    return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n  }\n  res = colorRegEx3.exec(val);\n  if (res) {\n    parts = res[1].split(/\\s*,\\s*/);\n    if (parts.length !== 4) {\n      return undefined;\n    }\n    if (parts.slice(0, 3).every(percentRegEx.test.bind(percentRegEx))) {\n      red = Math.floor(parseFloat(parts[0].slice(0, -1)) * 255 / 100);\n      green = Math.floor(parseFloat(parts[1].slice(0, -1)) * 255 / 100);\n      blue = Math.floor(parseFloat(parts[2].slice(0, -1)) * 255 / 100);\n      alpha = parseFloat(parts[3]);\n    } else if (parts.slice(0, 3).every(integerRegEx.test.bind(integerRegEx))) {\n      red = parseInt(parts[0], 10);\n      green = parseInt(parts[1], 10);\n      blue = parseInt(parts[2], 10);\n      alpha = parseFloat(parts[3]);\n    } else {\n      return undefined;\n    }\n    if (isNaN(alpha)) {\n      alpha = 1;\n    }\n    red = Math.min(255, Math.max(0, red));\n    green = Math.min(255, Math.max(0, green));\n    blue = Math.min(255, Math.max(0, blue));\n    alpha = Math.min(1, Math.max(0, alpha));\n    if (alpha === 1) {\n      return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n    }\n    return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';\n  }\n  res = colorRegEx4.exec(val);\n  if (res) {\n    const [, _hue, _saturation, _lightness, _alphaString = ''] = res;\n    const _alpha = parseFloat(_alphaString.replace(',', '').trim());\n    if (!_hue || !_saturation || !_lightness) {\n      return undefined;\n    }\n    hue = parseFloat(_hue);\n    saturation = parseInt(_saturation, 10);\n    lightness = parseInt(_lightness, 10);\n    if (_alpha && numberRegEx.test(_alpha)) {\n      alpha = parseFloat(_alpha);\n    }\n    const [r, g, b] = hslToRgb(hue, saturation / 100, lightness / 100);\n    if (!_alphaString || alpha === 1) {\n      return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n    }\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  }\n  if (type === exports.TYPES.COLOR) {\n    return val;\n  }\n  return undefined;\n};\nexports.parseAngle = function parseAngle(val) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.ANGLE) {\n    return undefined;\n  }\n  var res = angleRegEx.exec(val);\n  var flt = parseFloat(res[1]);\n  if (res[2] === 'rad') {\n    flt *= 180 / Math.PI;\n  } else if (res[2] === 'grad') {\n    flt *= 360 / 400;\n  }\n  while (flt < 0) {\n    flt += 360;\n  }\n  while (flt > 360) {\n    flt -= 360;\n  }\n  return flt + 'deg';\n};\nexports.parseKeyword = function parseKeyword(val, valid_keywords) {\n  var type = exports.valueType(val);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    return val;\n  }\n  if (type !== exports.TYPES.KEYWORD) {\n    return undefined;\n  }\n  val = val.toString().toLowerCase();\n  var i;\n  for (i = 0; i < valid_keywords.length; i++) {\n    if (valid_keywords[i].toLowerCase() === val) {\n      return valid_keywords[i];\n    }\n  }\n  return undefined;\n};\n\n// utility to translate from border-width to borderWidth\nvar dashedToCamelCase = function (dashed) {\n  var i;\n  var camel = '';\n  var nextCap = false;\n  for (i = 0; i < dashed.length; i++) {\n    if (dashed[i] !== '-') {\n      camel += nextCap ? dashed[i].toUpperCase() : dashed[i];\n      nextCap = false;\n    } else {\n      nextCap = true;\n    }\n  }\n  return camel;\n};\nexports.dashedToCamelCase = dashedToCamelCase;\nvar is_space = /\\s/;\nvar opening_deliminators = ['\"', \"'\", '('];\nvar closing_deliminators = ['\"', \"'\", ')'];\n// this splits on whitespace, but keeps quoted and parened parts together\nvar getParts = function (str) {\n  var deliminator_stack = [];\n  var length = str.length;\n  var i;\n  var parts = [];\n  var current_part = '';\n  var opening_index;\n  var closing_index;\n  for (i = 0; i < length; i++) {\n    opening_index = opening_deliminators.indexOf(str[i]);\n    closing_index = closing_deliminators.indexOf(str[i]);\n    if (is_space.test(str[i])) {\n      if (deliminator_stack.length === 0) {\n        if (current_part !== '') {\n          parts.push(current_part);\n        }\n        current_part = '';\n      } else {\n        current_part += str[i];\n      }\n    } else {\n      if (str[i] === '\\\\') {\n        i++;\n        current_part += str[i];\n      } else {\n        current_part += str[i];\n        if (closing_index !== -1 && closing_index === deliminator_stack[deliminator_stack.length - 1]) {\n          deliminator_stack.pop();\n        } else if (opening_index !== -1) {\n          deliminator_stack.push(opening_index);\n        }\n      }\n    }\n  }\n  if (current_part !== '') {\n    parts.push(current_part);\n  }\n  return parts;\n};\n\n/*\r\n * this either returns undefined meaning that it isn't valid\r\n * or returns an object where the keys are dashed short\r\n * hand properties and the values are the values to set\r\n * on them\r\n */\nexports.shorthandParser = function parse(v, shorthand_for) {\n  var obj = {};\n  var type = exports.valueType(v);\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\n    Object.keys(shorthand_for).forEach(function (property) {\n      obj[property] = '';\n    });\n    return obj;\n  }\n  if (typeof v === 'number') {\n    v = v.toString();\n  }\n  if (typeof v !== 'string') {\n    return undefined;\n  }\n  if (v.toLowerCase() === 'inherit') {\n    return {};\n  }\n  var parts = getParts(v);\n  var valid = true;\n  parts.forEach(function (part, i) {\n    var part_valid = false;\n    Object.keys(shorthand_for).forEach(function (property) {\n      if (shorthand_for[property].isValid(part, i)) {\n        part_valid = true;\n        obj[property] = part;\n      }\n    });\n    valid = valid && part_valid;\n  });\n  if (!valid) {\n    return undefined;\n  }\n  return obj;\n};\nexports.shorthandSetter = function (property, shorthand_for) {\n  return function (v) {\n    var obj = exports.shorthandParser(v, shorthand_for);\n    if (obj === undefined) {\n      return;\n    }\n    //console.log('shorthandSetter for:', property, 'obj:', obj);\n    Object.keys(obj).forEach(function (subprop) {\n      // in case subprop is an implicit property, this will clear\n      // *its* subpropertiesX\n      var camel = dashedToCamelCase(subprop);\n      this[camel] = obj[subprop];\n      // in case it gets translated into something else (0 -> 0px)\n      obj[subprop] = this[camel];\n      this.removeProperty(subprop);\n      // don't add in empty properties\n      if (obj[subprop] !== '') {\n        this._values[subprop] = obj[subprop];\n      }\n    }, this);\n    Object.keys(shorthand_for).forEach(function (subprop) {\n      if (!obj.hasOwnProperty(subprop)) {\n        this.removeProperty(subprop);\n        delete this._values[subprop];\n      }\n    }, this);\n    // in case the value is something like 'none' that removes all values,\n    // check that the generated one is not empty, first remove the property\n    // if it already exists, then call the shorthandGetter, if it's an empty\n    // string, don't set the property\n    this.removeProperty(property);\n    var calculated = exports.shorthandGetter(property, shorthand_for).call(this);\n    if (calculated !== '') {\n      this._setProperty(property, calculated);\n    }\n  };\n};\nexports.shorthandGetter = function (property, shorthand_for) {\n  return function () {\n    if (this._values[property] !== undefined) {\n      return this.getPropertyValue(property);\n    }\n    return Object.keys(shorthand_for).map(function (subprop) {\n      return this.getPropertyValue(subprop);\n    }, this).filter(function (value) {\n      return value !== '';\n    }).join(' ');\n  };\n};\n\n// isValid(){1,4} | inherit\n// if one, it applies to all\n// if two, the first applies to the top and bottom, and the second to left and right\n// if three, the first applies to the top, the second to left and right, the third bottom\n// if four, top, right, bottom, left\nexports.implicitSetter = function (property_before, property_after, isValid, parser) {\n  property_after = property_after || '';\n  if (property_after !== '') {\n    property_after = '-' + property_after;\n  }\n  var part_names = ['top', 'right', 'bottom', 'left'];\n  return function (v) {\n    if (typeof v === 'number') {\n      v = v.toString();\n    }\n    if (typeof v !== 'string') {\n      return undefined;\n    }\n    var parts;\n    if (v.toLowerCase() === 'inherit' || v === '') {\n      parts = [v];\n    } else {\n      parts = getParts(v);\n    }\n    if (parts.length < 1 || parts.length > 4) {\n      return undefined;\n    }\n    if (!parts.every(isValid)) {\n      return undefined;\n    }\n    parts = parts.map(function (part) {\n      return parser(part);\n    });\n    this._setProperty(property_before + property_after, parts.join(' '));\n    if (parts.length === 1) {\n      parts[1] = parts[0];\n    }\n    if (parts.length === 2) {\n      parts[2] = parts[0];\n    }\n    if (parts.length === 3) {\n      parts[3] = parts[1];\n    }\n    for (var i = 0; i < 4; i++) {\n      var property = property_before + '-' + part_names[i] + property_after;\n      this.removeProperty(property);\n      if (parts[i] !== '') {\n        this._values[property] = parts[i];\n      }\n    }\n    return v;\n  };\n};\n\n//\n//  Companion to implicitSetter, but for the individual parts.\n//  This sets the individual value, and checks to see if all four\n//  sub-parts are set.  If so, it sets the shorthand version and removes\n//  the individual parts from the cssText.\n//\nexports.subImplicitSetter = function (prefix, part, isValid, parser) {\n  var property = prefix + '-' + part;\n  var subparts = [prefix + '-top', prefix + '-right', prefix + '-bottom', prefix + '-left'];\n  return function (v) {\n    if (typeof v === 'number') {\n      v = v.toString();\n    }\n    if (typeof v !== 'string') {\n      return undefined;\n    }\n    if (!isValid(v)) {\n      return undefined;\n    }\n    v = parser(v);\n    this._setProperty(property, v);\n    var parts = [];\n    for (var i = 0; i < 4; i++) {\n      if (this._values[subparts[i]] == null || this._values[subparts[i]] === '') {\n        break;\n      }\n      parts.push(this._values[subparts[i]]);\n    }\n    if (parts.length === 4) {\n      for (i = 0; i < 4; i++) {\n        this.removeProperty(subparts[i]);\n        this._values[subparts[i]] = parts[i];\n      }\n      this._setProperty(prefix, parts.join(' '));\n    }\n    return v;\n  };\n};\nvar camel_to_dashed = /[A-Z]/g;\nvar first_segment = /^\\([^-]\\)-/;\nvar vendor_prefixes = ['o', 'moz', 'ms', 'webkit'];\nexports.camelToDashed = function (camel_case) {\n  var match;\n  var dashed = camel_case.replace(camel_to_dashed, '-$&').toLowerCase();\n  match = dashed.match(first_segment);\n  if (match && vendor_prefixes.indexOf(match[1]) !== -1) {\n    dashed = '-' + dashed;\n  }\n  return dashed;\n};","map":{"version":3,"names":["namedColors","require","hslToRgb","exports","TYPES","INTEGER","NUMBER","LENGTH","PERCENT","URL","COLOR","STRING","ANGLE","KEYWORD","NULL_OR_EMPTY_STR","CALC","integerRegEx","numberRegEx","lengthRegEx","percentRegEx","urlRegEx","stringRegEx","colorRegEx1","colorRegEx2","colorRegEx3","calcRegEx","colorRegEx4","angleRegEx","valueType","val","toString","undefined","test","res","exec","parts","split","length","every","bind","slice","toLowerCase","includes","parseInteger","type","String","parseInt","parseNumber","parseFloat","parseLength","parsePercent","parseMeasurement","parseUrl","str","substr","i","parseString","parseColor","red","green","blue","hue","saturation","lightness","alpha","defaultHex","hex","hexAlpha","hexAlphaToRgbaAlpha","Number","toFixed","Math","floor","min","max","isNaN","_hue","_saturation","_lightness","_alphaString","_alpha","replace","trim","r","g","b","parseAngle","flt","PI","parseKeyword","valid_keywords","dashedToCamelCase","dashed","camel","nextCap","toUpperCase","is_space","opening_deliminators","closing_deliminators","getParts","deliminator_stack","current_part","opening_index","closing_index","indexOf","push","pop","shorthandParser","parse","v","shorthand_for","obj","Object","keys","forEach","property","valid","part","part_valid","isValid","shorthandSetter","subprop","removeProperty","_values","hasOwnProperty","calculated","shorthandGetter","call","_setProperty","getPropertyValue","map","filter","value","join","implicitSetter","property_before","property_after","parser","part_names","subImplicitSetter","prefix","subparts","camel_to_dashed","first_segment","vendor_prefixes","camelToDashed","camel_case","match"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/cssstyle/lib/parsers.js"],"sourcesContent":["/*********************************************************************\r\n * These are commonly used parsers for CSS Values they take a string *\r\n * to parse and return a string after it's been converted, if needed *\r\n ********************************************************************/\r\n'use strict';\r\n\r\nconst namedColors = require('./named_colors.json');\r\nconst { hslToRgb } = require('./utils/colorSpace');\r\n\r\nexports.TYPES = {\r\n  INTEGER: 1,\r\n  NUMBER: 2,\r\n  LENGTH: 3,\r\n  PERCENT: 4,\r\n  URL: 5,\r\n  COLOR: 6,\r\n  STRING: 7,\r\n  ANGLE: 8,\r\n  KEYWORD: 9,\r\n  NULL_OR_EMPTY_STR: 10,\r\n  CALC: 11,\r\n};\r\n\r\n// rough regular expressions\r\nvar integerRegEx = /^[-+]?[0-9]+$/;\r\nvar numberRegEx = /^[-+]?[0-9]*\\.?[0-9]+$/;\r\nvar lengthRegEx = /^(0|[-+]?[0-9]*\\.?[0-9]+(in|cm|em|mm|pt|pc|px|ex|rem|vh|vw|ch))$/;\r\nvar percentRegEx = /^[-+]?[0-9]*\\.?[0-9]+%$/;\r\nvar urlRegEx = /^url\\(\\s*([^)]*)\\s*\\)$/;\r\nvar stringRegEx = /^(\"[^\"]*\"|'[^']*')$/;\r\nvar colorRegEx1 = /^#([0-9a-fA-F]{3,4}){1,2}$/;\r\nvar colorRegEx2 = /^rgb\\(([^)]*)\\)$/;\r\nvar colorRegEx3 = /^rgba\\(([^)]*)\\)$/;\r\nvar calcRegEx = /^calc\\(([^)]*)\\)$/;\r\nvar colorRegEx4 = /^hsla?\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*(,\\s*(-?\\d+|-?\\d*.\\d+)\\s*)?\\)/;\r\nvar angleRegEx = /^([-+]?[0-9]*\\.?[0-9]+)(deg|grad|rad)$/;\r\n\r\n// This will return one of the above types based on the passed in string\r\nexports.valueType = function valueType(val) {\r\n  if (val === '' || val === null) {\r\n    return exports.TYPES.NULL_OR_EMPTY_STR;\r\n  }\r\n  if (typeof val === 'number') {\r\n    val = val.toString();\r\n  }\r\n\r\n  if (typeof val !== 'string') {\r\n    return undefined;\r\n  }\r\n\r\n  if (integerRegEx.test(val)) {\r\n    return exports.TYPES.INTEGER;\r\n  }\r\n  if (numberRegEx.test(val)) {\r\n    return exports.TYPES.NUMBER;\r\n  }\r\n  if (lengthRegEx.test(val)) {\r\n    return exports.TYPES.LENGTH;\r\n  }\r\n  if (percentRegEx.test(val)) {\r\n    return exports.TYPES.PERCENT;\r\n  }\r\n  if (urlRegEx.test(val)) {\r\n    return exports.TYPES.URL;\r\n  }\r\n  if (calcRegEx.test(val)) {\r\n    return exports.TYPES.CALC;\r\n  }\r\n  if (stringRegEx.test(val)) {\r\n    return exports.TYPES.STRING;\r\n  }\r\n  if (angleRegEx.test(val)) {\r\n    return exports.TYPES.ANGLE;\r\n  }\r\n  if (colorRegEx1.test(val)) {\r\n    return exports.TYPES.COLOR;\r\n  }\r\n\r\n  var res = colorRegEx2.exec(val);\r\n  var parts;\r\n  if (res !== null) {\r\n    parts = res[1].split(/\\s*,\\s*/);\r\n    if (parts.length !== 3) {\r\n      return undefined;\r\n    }\r\n    if (\r\n      parts.every(percentRegEx.test.bind(percentRegEx)) ||\r\n      parts.every(integerRegEx.test.bind(integerRegEx))\r\n    ) {\r\n      return exports.TYPES.COLOR;\r\n    }\r\n    return undefined;\r\n  }\r\n  res = colorRegEx3.exec(val);\r\n  if (res !== null) {\r\n    parts = res[1].split(/\\s*,\\s*/);\r\n    if (parts.length !== 4) {\r\n      return undefined;\r\n    }\r\n    if (\r\n      parts.slice(0, 3).every(percentRegEx.test.bind(percentRegEx)) ||\r\n      parts.slice(0, 3).every(integerRegEx.test.bind(integerRegEx))\r\n    ) {\r\n      if (numberRegEx.test(parts[3])) {\r\n        return exports.TYPES.COLOR;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  if (colorRegEx4.test(val)) {\r\n    return exports.TYPES.COLOR;\r\n  }\r\n\r\n  // could still be a color, one of the standard keyword colors\r\n  val = val.toLowerCase();\r\n\r\n  if (namedColors.includes(val)) {\r\n    return exports.TYPES.COLOR;\r\n  }\r\n\r\n  switch (val) {\r\n    // the following are deprecated in CSS3\r\n    case 'activeborder':\r\n    case 'activecaption':\r\n    case 'appworkspace':\r\n    case 'background':\r\n    case 'buttonface':\r\n    case 'buttonhighlight':\r\n    case 'buttonshadow':\r\n    case 'buttontext':\r\n    case 'captiontext':\r\n    case 'graytext':\r\n    case 'highlight':\r\n    case 'highlighttext':\r\n    case 'inactiveborder':\r\n    case 'inactivecaption':\r\n    case 'inactivecaptiontext':\r\n    case 'infobackground':\r\n    case 'infotext':\r\n    case 'menu':\r\n    case 'menutext':\r\n    case 'scrollbar':\r\n    case 'threeddarkshadow':\r\n    case 'threedface':\r\n    case 'threedhighlight':\r\n    case 'threedlightshadow':\r\n    case 'threedshadow':\r\n    case 'window':\r\n    case 'windowframe':\r\n    case 'windowtext':\r\n      return exports.TYPES.COLOR;\r\n    default:\r\n      return exports.TYPES.KEYWORD;\r\n  }\r\n};\r\n\r\nexports.parseInteger = function parseInteger(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.INTEGER) {\r\n    return undefined;\r\n  }\r\n  return String(parseInt(val, 10));\r\n};\r\n\r\nexports.parseNumber = function parseNumber(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.NUMBER && type !== exports.TYPES.INTEGER) {\r\n    return undefined;\r\n  }\r\n  return String(parseFloat(val));\r\n};\r\n\r\nexports.parseLength = function parseLength(val) {\r\n  if (val === 0 || val === '0') {\r\n    return '0px';\r\n  }\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.LENGTH) {\r\n    return undefined;\r\n  }\r\n  return val;\r\n};\r\n\r\nexports.parsePercent = function parsePercent(val) {\r\n  if (val === 0 || val === '0') {\r\n    return '0%';\r\n  }\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.PERCENT) {\r\n    return undefined;\r\n  }\r\n  return val;\r\n};\r\n\r\n// either a length or a percent\r\nexports.parseMeasurement = function parseMeasurement(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.CALC) {\r\n    return val;\r\n  }\r\n\r\n  var length = exports.parseLength(val);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n  return exports.parsePercent(val);\r\n};\r\n\r\nexports.parseUrl = function parseUrl(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  var res = urlRegEx.exec(val);\r\n  // does it match the regex?\r\n  if (!res) {\r\n    return undefined;\r\n  }\r\n  var str = res[1];\r\n  // if it starts with single or double quotes, does it end with the same?\r\n  if ((str[0] === '\"' || str[0] === \"'\") && str[0] !== str[str.length - 1]) {\r\n    return undefined;\r\n  }\r\n  if (str[0] === '\"' || str[0] === \"'\") {\r\n    str = str.substr(1, str.length - 2);\r\n  }\r\n\r\n  var i;\r\n  for (i = 0; i < str.length; i++) {\r\n    switch (str[i]) {\r\n      case '(':\r\n      case ')':\r\n      case ' ':\r\n      case '\\t':\r\n      case '\\n':\r\n      case \"'\":\r\n      case '\"':\r\n        return undefined;\r\n      case '\\\\':\r\n        i++;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return 'url(' + str + ')';\r\n};\r\n\r\nexports.parseString = function parseString(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.STRING) {\r\n    return undefined;\r\n  }\r\n  var i;\r\n  for (i = 1; i < val.length - 1; i++) {\r\n    switch (val[i]) {\r\n      case val[0]:\r\n        return undefined;\r\n      case '\\\\':\r\n        i++;\r\n        while (i < val.length - 1 && /[0-9A-Fa-f]/.test(val[i])) {\r\n          i++;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  if (i >= val.length) {\r\n    return undefined;\r\n  }\r\n  return val;\r\n};\r\n\r\nexports.parseColor = function parseColor(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  var red,\r\n    green,\r\n    blue,\r\n    hue,\r\n    saturation,\r\n    lightness,\r\n    alpha = 1;\r\n  var parts;\r\n  var res = colorRegEx1.exec(val);\r\n  // is it #aaa, #ababab, #aaaa, #abababaa\r\n  if (res) {\r\n    var defaultHex = val.substr(1);\r\n    var hex = val.substr(1);\r\n    if (hex.length === 3 || hex.length === 4) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n\r\n      if (defaultHex.length === 4) {\r\n        hex = hex + defaultHex[3] + defaultHex[3];\r\n      }\r\n    }\r\n    red = parseInt(hex.substr(0, 2), 16);\r\n    green = parseInt(hex.substr(2, 2), 16);\r\n    blue = parseInt(hex.substr(4, 2), 16);\r\n    if (hex.length === 8) {\r\n      var hexAlpha = hex.substr(6, 2);\r\n      var hexAlphaToRgbaAlpha = Number((parseInt(hexAlpha, 16) / 255).toFixed(3));\r\n\r\n      return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + hexAlphaToRgbaAlpha + ')';\r\n    }\r\n    return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\r\n  }\r\n\r\n  res = colorRegEx2.exec(val);\r\n  if (res) {\r\n    parts = res[1].split(/\\s*,\\s*/);\r\n    if (parts.length !== 3) {\r\n      return undefined;\r\n    }\r\n    if (parts.every(percentRegEx.test.bind(percentRegEx))) {\r\n      red = Math.floor((parseFloat(parts[0].slice(0, -1)) * 255) / 100);\r\n      green = Math.floor((parseFloat(parts[1].slice(0, -1)) * 255) / 100);\r\n      blue = Math.floor((parseFloat(parts[2].slice(0, -1)) * 255) / 100);\r\n    } else if (parts.every(integerRegEx.test.bind(integerRegEx))) {\r\n      red = parseInt(parts[0], 10);\r\n      green = parseInt(parts[1], 10);\r\n      blue = parseInt(parts[2], 10);\r\n    } else {\r\n      return undefined;\r\n    }\r\n    red = Math.min(255, Math.max(0, red));\r\n    green = Math.min(255, Math.max(0, green));\r\n    blue = Math.min(255, Math.max(0, blue));\r\n    return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\r\n  }\r\n\r\n  res = colorRegEx3.exec(val);\r\n  if (res) {\r\n    parts = res[1].split(/\\s*,\\s*/);\r\n    if (parts.length !== 4) {\r\n      return undefined;\r\n    }\r\n    if (parts.slice(0, 3).every(percentRegEx.test.bind(percentRegEx))) {\r\n      red = Math.floor((parseFloat(parts[0].slice(0, -1)) * 255) / 100);\r\n      green = Math.floor((parseFloat(parts[1].slice(0, -1)) * 255) / 100);\r\n      blue = Math.floor((parseFloat(parts[2].slice(0, -1)) * 255) / 100);\r\n      alpha = parseFloat(parts[3]);\r\n    } else if (parts.slice(0, 3).every(integerRegEx.test.bind(integerRegEx))) {\r\n      red = parseInt(parts[0], 10);\r\n      green = parseInt(parts[1], 10);\r\n      blue = parseInt(parts[2], 10);\r\n      alpha = parseFloat(parts[3]);\r\n    } else {\r\n      return undefined;\r\n    }\r\n    if (isNaN(alpha)) {\r\n      alpha = 1;\r\n    }\r\n    red = Math.min(255, Math.max(0, red));\r\n    green = Math.min(255, Math.max(0, green));\r\n    blue = Math.min(255, Math.max(0, blue));\r\n    alpha = Math.min(1, Math.max(0, alpha));\r\n    if (alpha === 1) {\r\n      return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\r\n    }\r\n    return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';\r\n  }\r\n\r\n  res = colorRegEx4.exec(val);\r\n  if (res) {\r\n    const [, _hue, _saturation, _lightness, _alphaString = ''] = res;\r\n    const _alpha = parseFloat(_alphaString.replace(',', '').trim());\r\n    if (!_hue || !_saturation || !_lightness) {\r\n      return undefined;\r\n    }\r\n    hue = parseFloat(_hue);\r\n    saturation = parseInt(_saturation, 10);\r\n    lightness = parseInt(_lightness, 10);\r\n    if (_alpha && numberRegEx.test(_alpha)) {\r\n      alpha = parseFloat(_alpha);\r\n    }\r\n\r\n    const [r, g, b] = hslToRgb(hue, saturation / 100, lightness / 100);\r\n    if (!_alphaString || alpha === 1) {\r\n      return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n    }\r\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\r\n  }\r\n\r\n  if (type === exports.TYPES.COLOR) {\r\n    return val;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexports.parseAngle = function parseAngle(val) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.ANGLE) {\r\n    return undefined;\r\n  }\r\n  var res = angleRegEx.exec(val);\r\n  var flt = parseFloat(res[1]);\r\n  if (res[2] === 'rad') {\r\n    flt *= 180 / Math.PI;\r\n  } else if (res[2] === 'grad') {\r\n    flt *= 360 / 400;\r\n  }\r\n\r\n  while (flt < 0) {\r\n    flt += 360;\r\n  }\r\n  while (flt > 360) {\r\n    flt -= 360;\r\n  }\r\n  return flt + 'deg';\r\n};\r\n\r\nexports.parseKeyword = function parseKeyword(val, valid_keywords) {\r\n  var type = exports.valueType(val);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    return val;\r\n  }\r\n  if (type !== exports.TYPES.KEYWORD) {\r\n    return undefined;\r\n  }\r\n  val = val.toString().toLowerCase();\r\n  var i;\r\n  for (i = 0; i < valid_keywords.length; i++) {\r\n    if (valid_keywords[i].toLowerCase() === val) {\r\n      return valid_keywords[i];\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\n// utility to translate from border-width to borderWidth\r\nvar dashedToCamelCase = function(dashed) {\r\n  var i;\r\n  var camel = '';\r\n  var nextCap = false;\r\n  for (i = 0; i < dashed.length; i++) {\r\n    if (dashed[i] !== '-') {\r\n      camel += nextCap ? dashed[i].toUpperCase() : dashed[i];\r\n      nextCap = false;\r\n    } else {\r\n      nextCap = true;\r\n    }\r\n  }\r\n  return camel;\r\n};\r\nexports.dashedToCamelCase = dashedToCamelCase;\r\n\r\nvar is_space = /\\s/;\r\nvar opening_deliminators = ['\"', \"'\", '('];\r\nvar closing_deliminators = ['\"', \"'\", ')'];\r\n// this splits on whitespace, but keeps quoted and parened parts together\r\nvar getParts = function(str) {\r\n  var deliminator_stack = [];\r\n  var length = str.length;\r\n  var i;\r\n  var parts = [];\r\n  var current_part = '';\r\n  var opening_index;\r\n  var closing_index;\r\n  for (i = 0; i < length; i++) {\r\n    opening_index = opening_deliminators.indexOf(str[i]);\r\n    closing_index = closing_deliminators.indexOf(str[i]);\r\n    if (is_space.test(str[i])) {\r\n      if (deliminator_stack.length === 0) {\r\n        if (current_part !== '') {\r\n          parts.push(current_part);\r\n        }\r\n        current_part = '';\r\n      } else {\r\n        current_part += str[i];\r\n      }\r\n    } else {\r\n      if (str[i] === '\\\\') {\r\n        i++;\r\n        current_part += str[i];\r\n      } else {\r\n        current_part += str[i];\r\n        if (\r\n          closing_index !== -1 &&\r\n          closing_index === deliminator_stack[deliminator_stack.length - 1]\r\n        ) {\r\n          deliminator_stack.pop();\r\n        } else if (opening_index !== -1) {\r\n          deliminator_stack.push(opening_index);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (current_part !== '') {\r\n    parts.push(current_part);\r\n  }\r\n  return parts;\r\n};\r\n\r\n/*\r\n * this either returns undefined meaning that it isn't valid\r\n * or returns an object where the keys are dashed short\r\n * hand properties and the values are the values to set\r\n * on them\r\n */\r\nexports.shorthandParser = function parse(v, shorthand_for) {\r\n  var obj = {};\r\n  var type = exports.valueType(v);\r\n  if (type === exports.TYPES.NULL_OR_EMPTY_STR) {\r\n    Object.keys(shorthand_for).forEach(function(property) {\r\n      obj[property] = '';\r\n    });\r\n    return obj;\r\n  }\r\n\r\n  if (typeof v === 'number') {\r\n    v = v.toString();\r\n  }\r\n\r\n  if (typeof v !== 'string') {\r\n    return undefined;\r\n  }\r\n\r\n  if (v.toLowerCase() === 'inherit') {\r\n    return {};\r\n  }\r\n  var parts = getParts(v);\r\n  var valid = true;\r\n  parts.forEach(function(part, i) {\r\n    var part_valid = false;\r\n    Object.keys(shorthand_for).forEach(function(property) {\r\n      if (shorthand_for[property].isValid(part, i)) {\r\n        part_valid = true;\r\n        obj[property] = part;\r\n      }\r\n    });\r\n    valid = valid && part_valid;\r\n  });\r\n  if (!valid) {\r\n    return undefined;\r\n  }\r\n  return obj;\r\n};\r\n\r\nexports.shorthandSetter = function(property, shorthand_for) {\r\n  return function(v) {\r\n    var obj = exports.shorthandParser(v, shorthand_for);\r\n    if (obj === undefined) {\r\n      return;\r\n    }\r\n    //console.log('shorthandSetter for:', property, 'obj:', obj);\r\n    Object.keys(obj).forEach(function(subprop) {\r\n      // in case subprop is an implicit property, this will clear\r\n      // *its* subpropertiesX\r\n      var camel = dashedToCamelCase(subprop);\r\n      this[camel] = obj[subprop];\r\n      // in case it gets translated into something else (0 -> 0px)\r\n      obj[subprop] = this[camel];\r\n      this.removeProperty(subprop);\r\n      // don't add in empty properties\r\n      if (obj[subprop] !== '') {\r\n        this._values[subprop] = obj[subprop];\r\n      }\r\n    }, this);\r\n    Object.keys(shorthand_for).forEach(function(subprop) {\r\n      if (!obj.hasOwnProperty(subprop)) {\r\n        this.removeProperty(subprop);\r\n        delete this._values[subprop];\r\n      }\r\n    }, this);\r\n    // in case the value is something like 'none' that removes all values,\r\n    // check that the generated one is not empty, first remove the property\r\n    // if it already exists, then call the shorthandGetter, if it's an empty\r\n    // string, don't set the property\r\n    this.removeProperty(property);\r\n    var calculated = exports.shorthandGetter(property, shorthand_for).call(this);\r\n    if (calculated !== '') {\r\n      this._setProperty(property, calculated);\r\n    }\r\n  };\r\n};\r\n\r\nexports.shorthandGetter = function(property, shorthand_for) {\r\n  return function() {\r\n    if (this._values[property] !== undefined) {\r\n      return this.getPropertyValue(property);\r\n    }\r\n    return Object.keys(shorthand_for)\r\n      .map(function(subprop) {\r\n        return this.getPropertyValue(subprop);\r\n      }, this)\r\n      .filter(function(value) {\r\n        return value !== '';\r\n      })\r\n      .join(' ');\r\n  };\r\n};\r\n\r\n// isValid(){1,4} | inherit\r\n// if one, it applies to all\r\n// if two, the first applies to the top and bottom, and the second to left and right\r\n// if three, the first applies to the top, the second to left and right, the third bottom\r\n// if four, top, right, bottom, left\r\nexports.implicitSetter = function(property_before, property_after, isValid, parser) {\r\n  property_after = property_after || '';\r\n  if (property_after !== '') {\r\n    property_after = '-' + property_after;\r\n  }\r\n  var part_names = ['top', 'right', 'bottom', 'left'];\r\n\r\n  return function(v) {\r\n    if (typeof v === 'number') {\r\n      v = v.toString();\r\n    }\r\n    if (typeof v !== 'string') {\r\n      return undefined;\r\n    }\r\n    var parts;\r\n    if (v.toLowerCase() === 'inherit' || v === '') {\r\n      parts = [v];\r\n    } else {\r\n      parts = getParts(v);\r\n    }\r\n    if (parts.length < 1 || parts.length > 4) {\r\n      return undefined;\r\n    }\r\n\r\n    if (!parts.every(isValid)) {\r\n      return undefined;\r\n    }\r\n\r\n    parts = parts.map(function(part) {\r\n      return parser(part);\r\n    });\r\n    this._setProperty(property_before + property_after, parts.join(' '));\r\n    if (parts.length === 1) {\r\n      parts[1] = parts[0];\r\n    }\r\n    if (parts.length === 2) {\r\n      parts[2] = parts[0];\r\n    }\r\n    if (parts.length === 3) {\r\n      parts[3] = parts[1];\r\n    }\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      var property = property_before + '-' + part_names[i] + property_after;\r\n      this.removeProperty(property);\r\n      if (parts[i] !== '') {\r\n        this._values[property] = parts[i];\r\n      }\r\n    }\r\n    return v;\r\n  };\r\n};\r\n\r\n//\r\n//  Companion to implicitSetter, but for the individual parts.\r\n//  This sets the individual value, and checks to see if all four\r\n//  sub-parts are set.  If so, it sets the shorthand version and removes\r\n//  the individual parts from the cssText.\r\n//\r\nexports.subImplicitSetter = function(prefix, part, isValid, parser) {\r\n  var property = prefix + '-' + part;\r\n  var subparts = [prefix + '-top', prefix + '-right', prefix + '-bottom', prefix + '-left'];\r\n\r\n  return function(v) {\r\n    if (typeof v === 'number') {\r\n      v = v.toString();\r\n    }\r\n    if (typeof v !== 'string') {\r\n      return undefined;\r\n    }\r\n    if (!isValid(v)) {\r\n      return undefined;\r\n    }\r\n    v = parser(v);\r\n    this._setProperty(property, v);\r\n    var parts = [];\r\n    for (var i = 0; i < 4; i++) {\r\n      if (this._values[subparts[i]] == null || this._values[subparts[i]] === '') {\r\n        break;\r\n      }\r\n      parts.push(this._values[subparts[i]]);\r\n    }\r\n    if (parts.length === 4) {\r\n      for (i = 0; i < 4; i++) {\r\n        this.removeProperty(subparts[i]);\r\n        this._values[subparts[i]] = parts[i];\r\n      }\r\n      this._setProperty(prefix, parts.join(' '));\r\n    }\r\n    return v;\r\n  };\r\n};\r\n\r\nvar camel_to_dashed = /[A-Z]/g;\r\nvar first_segment = /^\\([^-]\\)-/;\r\nvar vendor_prefixes = ['o', 'moz', 'ms', 'webkit'];\r\nexports.camelToDashed = function(camel_case) {\r\n  var match;\r\n  var dashed = camel_case.replace(camel_to_dashed, '-$&').toLowerCase();\r\n  match = dashed.match(first_segment);\r\n  if (match && vendor_prefixes.indexOf(match[1]) !== -1) {\r\n    dashed = '-' + dashed;\r\n  }\r\n  return dashed;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}