{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"SVGStringList\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'SVGStringList'.`);\n};\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n  const ctor = globalObject[ctorRegistrySymbol][\"SVGStringList\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor SVGStringList is not installed on the passed global object\");\n  }\n  return Object.create(ctor.prototype);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper = new Proxy(wrapper, proxyHandler);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = globalObject => {\n  let wrapper = makeWrapper(globalObject);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper = new Proxy(wrapper, proxyHandler);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class SVGStringList {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n    clear() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'clear' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      return esValue[implSymbol].clear();\n    }\n    initialize(newItem) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'initialize' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'initialize' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initialize' on 'SVGStringList': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].initialize(...args);\n    }\n    getItem(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'getItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'getItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'getItem' on 'SVGStringList': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].getItem(...args);\n    }\n    insertItemBefore(newItem, index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'insertItemBefore' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'insertItemBefore' on 'SVGStringList': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].insertItemBefore(...args);\n    }\n    replaceItem(newItem, index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'replaceItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'replaceItem' on 'SVGStringList': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].replaceItem(...args);\n    }\n    removeItem(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'removeItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'removeItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'removeItem' on 'SVGStringList': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].removeItem(...args);\n    }\n    appendItem(newItem) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'appendItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'appendItem' on 'SVGStringList': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'appendItem' on 'SVGStringList': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].appendItem(...args);\n    }\n    get length() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get length' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      return esValue[implSymbol][\"length\"];\n    }\n    get numberOfItems() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get numberOfItems' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      return esValue[implSymbol][\"numberOfItems\"];\n    }\n  }\n  Object.defineProperties(SVGStringList.prototype, {\n    clear: {\n      enumerable: true\n    },\n    initialize: {\n      enumerable: true\n    },\n    getItem: {\n      enumerable: true\n    },\n    insertItemBefore: {\n      enumerable: true\n    },\n    replaceItem: {\n      enumerable: true\n    },\n    removeItem: {\n      enumerable: true\n    },\n    appendItem: {\n      enumerable: true\n    },\n    length: {\n      enumerable: true\n    },\n    numberOfItems: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"SVGStringList\",\n      configurable: true\n    },\n    [Symbol.iterator]: {\n      value: Array.prototype[Symbol.iterator],\n      configurable: true,\n      writable: true\n    }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = SVGStringList;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: SVGStringList\n  });\n};\nconst proxyHandler = {\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n      if (parent === null) {\n        return undefined;\n      }\n      return Reflect.get(target, P, receiver);\n    }\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n    const getter = desc.get;\n    if (getter === undefined) {\n      return undefined;\n    }\n    return Reflect.apply(getter, receiver, []);\n  },\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc !== undefined) {\n      return true;\n    }\n    const parent = Object.getPrototypeOf(target);\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n    return false;\n  },\n  ownKeys(target) {\n    const keys = new Set();\n    for (const key of target[implSymbol][utils.supportedPropertyIndices]) {\n      keys.add(`${key}`);\n    }\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n    return [...keys];\n  },\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    let ignoreNamedProps = false;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\n        const indexedValue = target[implSymbol].getItem(index);\n        return {\n          writable: true,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n      ignoreNamedProps = true;\n    }\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  },\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n    // The `receiver` argument refers to the Proxy exotic object or an object\n    // that inherits from it, whereas `target` refers to the Proxy target:\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {\n      if (utils.isArrayIndexPropName(P)) {\n        const index = P >>> 0;\n        let indexedValue = V;\n        indexedValue = conversions[\"DOMString\"](indexedValue, {\n          context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\n        });\n        const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\n        if (creating) {\n          target[implSymbol][utils.indexedSetNew](index, indexedValue);\n        } else {\n          target[implSymbol][utils.indexedSetExisting](index, indexedValue);\n        }\n        return true;\n      }\n    }\n    let ownDesc;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\n        const indexedValue = target[implSymbol].getItem(index);\n        ownDesc = {\n          writable: true,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n    }\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n      ownDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: undefined\n      };\n    }\n    if (!ownDesc.writable) {\n      return false;\n    }\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n      if (!existingDesc.writable) {\n        return false;\n      }\n      valueDesc = {\n        value: V\n      };\n    } else {\n      valueDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: V\n      };\n    }\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  },\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n    if (utils.isArrayIndexPropName(P)) {\n      if (desc.get || desc.set) {\n        return false;\n      }\n      const index = P >>> 0;\n      let indexedValue = desc.value;\n      indexedValue = conversions[\"DOMString\"](indexedValue, {\n        context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\n      });\n      const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\n      if (creating) {\n        target[implSymbol][utils.indexedSetNew](index, indexedValue);\n      } else {\n        target[implSymbol][utils.indexedSetExisting](index, indexedValue);\n      }\n      return true;\n    }\n    return Reflect.defineProperty(target, P, desc);\n  },\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      return !target[implSymbol][utils.supportsPropertyIndex](index);\n    }\n    return Reflect.deleteProperty(target, P);\n  },\n  preventExtensions() {\n    return false;\n  }\n};\nconst Impl = require(\"../svg/SVGStringList-impl.js\");","map":{"version":3,"names":["conversions","require","utils","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","globalObject","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","Proxy","proxyHandler","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","SVGStringList","constructor","clear","esValue","initialize","newItem","args","curArg","push","getItem","index","insertItemBefore","replaceItem","removeItem","appendItem","numberOfItems","defineProperties","enumerable","Symbol","toStringTag","iterator","Array","writable","get","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","set","getter","apply","ownKeys","keys","key","supportedPropertyIndices","add","ignoreNamedProps","isArrayIndexPropName","supportsPropertyIndex","indexedValue","tryWrapperForImpl","V","creating","indexedSetNew","indexedSetExisting","ownDesc","existingDesc","valueDesc","deleteProperty","preventExtensions"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/generated/SVGStringList.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst conversions = require(\"webidl-conversions\");\r\nconst utils = require(\"./utils.js\");\r\n\r\nconst implSymbol = utils.implSymbol;\r\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\r\n\r\nconst interfaceName = \"SVGStringList\";\r\n\r\nexports.is = value => {\r\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\r\n};\r\nexports.isImpl = value => {\r\n  return utils.isObject(value) && value instanceof Impl.implementation;\r\n};\r\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\r\n  if (exports.is(value)) {\r\n    return utils.implForWrapper(value);\r\n  }\r\n  throw new TypeError(`${context} is not of type 'SVGStringList'.`);\r\n};\r\n\r\nfunction makeWrapper(globalObject) {\r\n  if (globalObject[ctorRegistrySymbol] === undefined) {\r\n    throw new Error(\"Internal error: invalid global object\");\r\n  }\r\n\r\n  const ctor = globalObject[ctorRegistrySymbol][\"SVGStringList\"];\r\n  if (ctor === undefined) {\r\n    throw new Error(\"Internal error: constructor SVGStringList is not installed on the passed global object\");\r\n  }\r\n\r\n  return Object.create(ctor.prototype);\r\n}\r\n\r\nexports.create = (globalObject, constructorArgs, privateData) => {\r\n  const wrapper = makeWrapper(globalObject);\r\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\r\n};\r\n\r\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\r\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\r\n  return utils.implForWrapper(wrapper);\r\n};\r\n\r\nexports._internalSetup = (wrapper, globalObject) => {};\r\n\r\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\r\n  privateData.wrapper = wrapper;\r\n\r\n  exports._internalSetup(wrapper, globalObject);\r\n  Object.defineProperty(wrapper, implSymbol, {\r\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\r\n    configurable: true\r\n  });\r\n\r\n  wrapper = new Proxy(wrapper, proxyHandler);\r\n\r\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\r\n  if (Impl.init) {\r\n    Impl.init(wrapper[implSymbol]);\r\n  }\r\n  return wrapper;\r\n};\r\n\r\nexports.new = globalObject => {\r\n  let wrapper = makeWrapper(globalObject);\r\n\r\n  exports._internalSetup(wrapper, globalObject);\r\n  Object.defineProperty(wrapper, implSymbol, {\r\n    value: Object.create(Impl.implementation.prototype),\r\n    configurable: true\r\n  });\r\n\r\n  wrapper = new Proxy(wrapper, proxyHandler);\r\n\r\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\r\n  if (Impl.init) {\r\n    Impl.init(wrapper[implSymbol]);\r\n  }\r\n  return wrapper[implSymbol];\r\n};\r\n\r\nconst exposed = new Set([\"Window\"]);\r\n\r\nexports.install = (globalObject, globalNames) => {\r\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\r\n    return;\r\n  }\r\n  class SVGStringList {\r\n    constructor() {\r\n      throw new TypeError(\"Illegal constructor\");\r\n    }\r\n\r\n    clear() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'clear' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      return esValue[implSymbol].clear();\r\n    }\r\n\r\n    initialize(newItem) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'initialize' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'initialize' on 'SVGStringList': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"DOMString\"](curArg, {\r\n          context: \"Failed to execute 'initialize' on 'SVGStringList': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].initialize(...args);\r\n    }\r\n\r\n    getItem(index) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'getItem' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'getItem' on 'SVGStringList': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"unsigned long\"](curArg, {\r\n          context: \"Failed to execute 'getItem' on 'SVGStringList': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].getItem(...args);\r\n    }\r\n\r\n    insertItemBefore(newItem, index) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'insertItemBefore' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      if (arguments.length < 2) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'insertItemBefore' on 'SVGStringList': 2 arguments required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"DOMString\"](curArg, {\r\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      {\r\n        let curArg = arguments[1];\r\n        curArg = conversions[\"unsigned long\"](curArg, {\r\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 2\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].insertItemBefore(...args);\r\n    }\r\n\r\n    replaceItem(newItem, index) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'replaceItem' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      if (arguments.length < 2) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'replaceItem' on 'SVGStringList': 2 arguments required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"DOMString\"](curArg, {\r\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      {\r\n        let curArg = arguments[1];\r\n        curArg = conversions[\"unsigned long\"](curArg, {\r\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 2\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].replaceItem(...args);\r\n    }\r\n\r\n    removeItem(index) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'removeItem' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'removeItem' on 'SVGStringList': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"unsigned long\"](curArg, {\r\n          context: \"Failed to execute 'removeItem' on 'SVGStringList': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].removeItem(...args);\r\n    }\r\n\r\n    appendItem(newItem) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'appendItem' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'appendItem' on 'SVGStringList': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"DOMString\"](curArg, {\r\n          context: \"Failed to execute 'appendItem' on 'SVGStringList': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].appendItem(...args);\r\n    }\r\n\r\n    get length() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get length' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"length\"];\r\n    }\r\n\r\n    get numberOfItems() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"'get numberOfItems' called on an object that is not a valid instance of SVGStringList.\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"numberOfItems\"];\r\n    }\r\n  }\r\n  Object.defineProperties(SVGStringList.prototype, {\r\n    clear: { enumerable: true },\r\n    initialize: { enumerable: true },\r\n    getItem: { enumerable: true },\r\n    insertItemBefore: { enumerable: true },\r\n    replaceItem: { enumerable: true },\r\n    removeItem: { enumerable: true },\r\n    appendItem: { enumerable: true },\r\n    length: { enumerable: true },\r\n    numberOfItems: { enumerable: true },\r\n    [Symbol.toStringTag]: { value: \"SVGStringList\", configurable: true },\r\n    [Symbol.iterator]: { value: Array.prototype[Symbol.iterator], configurable: true, writable: true }\r\n  });\r\n  if (globalObject[ctorRegistrySymbol] === undefined) {\r\n    globalObject[ctorRegistrySymbol] = Object.create(null);\r\n  }\r\n  globalObject[ctorRegistrySymbol][interfaceName] = SVGStringList;\r\n\r\n  Object.defineProperty(globalObject, interfaceName, {\r\n    configurable: true,\r\n    writable: true,\r\n    value: SVGStringList\r\n  });\r\n};\r\n\r\nconst proxyHandler = {\r\n  get(target, P, receiver) {\r\n    if (typeof P === \"symbol\") {\r\n      return Reflect.get(target, P, receiver);\r\n    }\r\n    const desc = this.getOwnPropertyDescriptor(target, P);\r\n    if (desc === undefined) {\r\n      const parent = Object.getPrototypeOf(target);\r\n      if (parent === null) {\r\n        return undefined;\r\n      }\r\n      return Reflect.get(target, P, receiver);\r\n    }\r\n    if (!desc.get && !desc.set) {\r\n      return desc.value;\r\n    }\r\n    const getter = desc.get;\r\n    if (getter === undefined) {\r\n      return undefined;\r\n    }\r\n    return Reflect.apply(getter, receiver, []);\r\n  },\r\n\r\n  has(target, P) {\r\n    if (typeof P === \"symbol\") {\r\n      return Reflect.has(target, P);\r\n    }\r\n    const desc = this.getOwnPropertyDescriptor(target, P);\r\n    if (desc !== undefined) {\r\n      return true;\r\n    }\r\n    const parent = Object.getPrototypeOf(target);\r\n    if (parent !== null) {\r\n      return Reflect.has(parent, P);\r\n    }\r\n    return false;\r\n  },\r\n\r\n  ownKeys(target) {\r\n    const keys = new Set();\r\n\r\n    for (const key of target[implSymbol][utils.supportedPropertyIndices]) {\r\n      keys.add(`${key}`);\r\n    }\r\n\r\n    for (const key of Reflect.ownKeys(target)) {\r\n      keys.add(key);\r\n    }\r\n    return [...keys];\r\n  },\r\n\r\n  getOwnPropertyDescriptor(target, P) {\r\n    if (typeof P === \"symbol\") {\r\n      return Reflect.getOwnPropertyDescriptor(target, P);\r\n    }\r\n    let ignoreNamedProps = false;\r\n\r\n    if (utils.isArrayIndexPropName(P)) {\r\n      const index = P >>> 0;\r\n\r\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\r\n        const indexedValue = target[implSymbol].getItem(index);\r\n        return {\r\n          writable: true,\r\n          enumerable: true,\r\n          configurable: true,\r\n          value: utils.tryWrapperForImpl(indexedValue)\r\n        };\r\n      }\r\n      ignoreNamedProps = true;\r\n    }\r\n\r\n    return Reflect.getOwnPropertyDescriptor(target, P);\r\n  },\r\n\r\n  set(target, P, V, receiver) {\r\n    if (typeof P === \"symbol\") {\r\n      return Reflect.set(target, P, V, receiver);\r\n    }\r\n    // The `receiver` argument refers to the Proxy exotic object or an object\r\n    // that inherits from it, whereas `target` refers to the Proxy target:\r\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {\r\n      if (utils.isArrayIndexPropName(P)) {\r\n        const index = P >>> 0;\r\n        let indexedValue = V;\r\n\r\n        indexedValue = conversions[\"DOMString\"](indexedValue, {\r\n          context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\r\n        });\r\n\r\n        const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\r\n        if (creating) {\r\n          target[implSymbol][utils.indexedSetNew](index, indexedValue);\r\n        } else {\r\n          target[implSymbol][utils.indexedSetExisting](index, indexedValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n    }\r\n    let ownDesc;\r\n\r\n    if (utils.isArrayIndexPropName(P)) {\r\n      const index = P >>> 0;\r\n\r\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\r\n        const indexedValue = target[implSymbol].getItem(index);\r\n        ownDesc = {\r\n          writable: true,\r\n          enumerable: true,\r\n          configurable: true,\r\n          value: utils.tryWrapperForImpl(indexedValue)\r\n        };\r\n      }\r\n    }\r\n\r\n    if (ownDesc === undefined) {\r\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\r\n    }\r\n    if (ownDesc === undefined) {\r\n      const parent = Reflect.getPrototypeOf(target);\r\n      if (parent !== null) {\r\n        return Reflect.set(parent, P, V, receiver);\r\n      }\r\n      ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\r\n    }\r\n    if (!ownDesc.writable) {\r\n      return false;\r\n    }\r\n    if (!utils.isObject(receiver)) {\r\n      return false;\r\n    }\r\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\r\n    let valueDesc;\r\n    if (existingDesc !== undefined) {\r\n      if (existingDesc.get || existingDesc.set) {\r\n        return false;\r\n      }\r\n      if (!existingDesc.writable) {\r\n        return false;\r\n      }\r\n      valueDesc = { value: V };\r\n    } else {\r\n      valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\r\n    }\r\n    return Reflect.defineProperty(receiver, P, valueDesc);\r\n  },\r\n\r\n  defineProperty(target, P, desc) {\r\n    if (typeof P === \"symbol\") {\r\n      return Reflect.defineProperty(target, P, desc);\r\n    }\r\n\r\n    if (utils.isArrayIndexPropName(P)) {\r\n      if (desc.get || desc.set) {\r\n        return false;\r\n      }\r\n\r\n      const index = P >>> 0;\r\n      let indexedValue = desc.value;\r\n\r\n      indexedValue = conversions[\"DOMString\"](indexedValue, {\r\n        context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\"\r\n      });\r\n\r\n      const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\r\n      if (creating) {\r\n        target[implSymbol][utils.indexedSetNew](index, indexedValue);\r\n      } else {\r\n        target[implSymbol][utils.indexedSetExisting](index, indexedValue);\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return Reflect.defineProperty(target, P, desc);\r\n  },\r\n\r\n  deleteProperty(target, P) {\r\n    if (typeof P === \"symbol\") {\r\n      return Reflect.deleteProperty(target, P);\r\n    }\r\n\r\n    if (utils.isArrayIndexPropName(P)) {\r\n      const index = P >>> 0;\r\n      return !target[implSymbol][utils.supportsPropertyIndex](index);\r\n    }\r\n\r\n    return Reflect.deleteProperty(target, P);\r\n  },\r\n\r\n  preventExtensions() {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst Impl = require(\"../svg/SVGStringList-impl.js\");\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}