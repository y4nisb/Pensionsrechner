{"ast":null,"code":"\"use strict\";\n\nconst {\n  appendAttribute\n} = require(\"./attributes\");\nconst NODE_TYPE = require(\"./node-type\");\nconst orderedSetParse = require(\"./helpers/ordered-set\").parse;\nconst {\n  createElement\n} = require(\"./helpers/create-element\");\nconst {\n  HTML_NS,\n  XMLNS_NS\n} = require(\"./helpers/namespaces\");\nconst {\n  cloningSteps,\n  domSymbolTree\n} = require(\"./helpers/internal-constants\");\nconst {\n  asciiCaseInsensitiveMatch,\n  asciiLowercase\n} = require(\"./helpers/strings\");\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\nexports.clone = (node, document, cloneChildren) => {\n  if (document === undefined) {\n    document = node._ownerDocument;\n  }\n  let copy;\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_NODE:\n      // Can't use a simple `Document.createImpl` because of circular dependency issues :-/\n      copy = node._cloneDocument();\n      break;\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      copy = document.implementation.createDocumentType(node.name, node.publicId, node.systemId);\n      break;\n    case NODE_TYPE.ELEMENT_NODE:\n      copy = createElement(document, node._localName, node._namespaceURI, node._prefix, node._isValue, false);\n      for (const attribute of node._attributeList) {\n        appendAttribute(copy, exports.clone(attribute, document));\n      }\n      break;\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      copy = document._createAttribute({\n        namespace: node._namespace,\n        namespacePrefix: node._namespacePrefix,\n        localName: node._localName,\n        value: node._value\n      });\n      break;\n    case NODE_TYPE.TEXT_NODE:\n      copy = document.createTextNode(node._data);\n      break;\n    case NODE_TYPE.CDATA_SECTION_NODE:\n      copy = document.createCDATASection(node._data);\n      break;\n    case NODE_TYPE.COMMENT_NODE:\n      copy = document.createComment(node._data);\n      break;\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      copy = document.createProcessingInstruction(node.target, node._data);\n      break;\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      copy = document.createDocumentFragment();\n      break;\n  }\n  if (node[cloningSteps]) {\n    node[cloningSteps](copy, node, document, cloneChildren);\n  }\n  if (cloneChildren) {\n    for (const child of domSymbolTree.childrenIterator(node)) {\n      const childCopy = exports.clone(child, document, true);\n      copy._append(childCopy);\n    }\n  }\n  return copy;\n};\n\n// For the following, memoization is not applied here since the memoized results are stored on `this`.\n\nexports.listOfElementsWithClassNames = (classNames, root) => {\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\n\n  const classes = orderedSetParse(classNames);\n  if (classes.size === 0) {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => []\n    });\n  }\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: () => {\n      const isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\n      return domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n          const {\n            classList\n          } = node;\n          if (isQuirksMode) {\n            for (const className of classes) {\n              if (!classList.tokenSet.some(cur => asciiCaseInsensitiveMatch(cur, className))) {\n                return false;\n              }\n            }\n          } else {\n            for (const className of classes) {\n              if (!classList.tokenSet.contains(className)) {\n                return false;\n              }\n            }\n          }\n          return true;\n        }\n      });\n    }\n  });\n};\nexports.listOfElementsWithQualifiedName = (qualifiedName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagname\n\n  if (qualifiedName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n  if (root._ownerDocument._parsingMode === \"html\") {\n    const lowerQualifiedName = asciiLowercase(qualifiedName);\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n          if (node._namespaceURI === HTML_NS) {\n            return node._qualifiedName === lowerQualifiedName;\n          }\n          return node._qualifiedName === qualifiedName;\n        }\n      })\n    });\n  }\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n        return node._qualifiedName === qualifiedName;\n      }\n    })\n  });\n};\nexports.listOfElementsWithNamespaceAndLocalName = (namespace, localName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagnamens\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n  if (namespace === \"*\" && localName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n  if (namespace === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n          return node._localName === localName;\n        }\n      })\n    });\n  }\n  if (localName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n          return node._namespaceURI === namespace;\n        }\n      })\n    });\n  }\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n        return node._localName === localName && node._namespaceURI === namespace;\n      }\n    })\n  });\n};\n\n// https://dom.spec.whatwg.org/#converting-nodes-into-a-node\n// create a fragment (or just return a node for one item)\nexports.convertNodesIntoNode = (document, nodes) => {\n  if (nodes.length === 1) {\n    // note: I'd prefer to check instanceof Node rather than string\n    return typeof nodes[0] === \"string\" ? document.createTextNode(nodes[0]) : nodes[0];\n  }\n  const fragment = document.createDocumentFragment();\n  for (let i = 0; i < nodes.length; i++) {\n    fragment._append(typeof nodes[i] === \"string\" ? document.createTextNode(nodes[i]) : nodes[i]);\n  }\n  return fragment;\n};\n\n// https://dom.spec.whatwg.org/#locate-a-namespace-prefix\nexports.locateNamespacePrefix = (element, namespace) => {\n  if (element._namespaceURI === namespace && element._prefix !== null) {\n    return element._prefix;\n  }\n  for (const attribute of element._attributeList) {\n    if (attribute._namespacePrefix === \"xmlns\" && attribute._value === namespace) {\n      return attribute._localName;\n    }\n  }\n  if (element.parentElement !== null) {\n    return exports.locateNamespacePrefix(element.parentElement, namespace);\n  }\n  return null;\n};\n\n// https://dom.spec.whatwg.org/#locate-a-namespace\nexports.locateNamespace = (node, prefix) => {\n  switch (node.nodeType) {\n    case NODE_TYPE.ELEMENT_NODE:\n      {\n        if (node._namespaceURI !== null && node._prefix === prefix) {\n          return node._namespaceURI;\n        }\n        if (prefix === null) {\n          for (const attribute of node._attributeList) {\n            if (attribute._namespace === XMLNS_NS && attribute._namespacePrefix === null && attribute._localName === \"xmlns\") {\n              return attribute._value !== \"\" ? attribute._value : null;\n            }\n          }\n        } else {\n          for (const attribute of node._attributeList) {\n            if (attribute._namespace === XMLNS_NS && attribute._namespacePrefix === \"xmlns\" && attribute._localName === prefix) {\n              return attribute._value !== \"\" ? attribute._value : null;\n            }\n          }\n        }\n        if (node.parentElement === null) {\n          return null;\n        }\n        return exports.locateNamespace(node.parentElement, prefix);\n      }\n    case NODE_TYPE.DOCUMENT_NODE:\n      {\n        if (node.documentElement === null) {\n          return null;\n        }\n        return exports.locateNamespace(node.documentElement, prefix);\n      }\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      {\n        return null;\n      }\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      {\n        if (node._element === null) {\n          return null;\n        }\n        return exports.locateNamespace(node._element, prefix);\n      }\n    default:\n      {\n        if (node.parentElement === null) {\n          return null;\n        }\n        return exports.locateNamespace(node.parentElement, prefix);\n      }\n  }\n};","map":{"version":3,"names":["appendAttribute","require","NODE_TYPE","orderedSetParse","parse","createElement","HTML_NS","XMLNS_NS","cloningSteps","domSymbolTree","asciiCaseInsensitiveMatch","asciiLowercase","HTMLCollection","exports","clone","node","document","cloneChildren","undefined","_ownerDocument","copy","nodeType","DOCUMENT_NODE","_cloneDocument","DOCUMENT_TYPE_NODE","implementation","createDocumentType","name","publicId","systemId","ELEMENT_NODE","_localName","_namespaceURI","_prefix","_isValue","attribute","_attributeList","ATTRIBUTE_NODE","_createAttribute","namespace","_namespace","namespacePrefix","_namespacePrefix","localName","value","_value","TEXT_NODE","createTextNode","_data","CDATA_SECTION_NODE","createCDATASection","COMMENT_NODE","createComment","PROCESSING_INSTRUCTION_NODE","createProcessingInstruction","target","DOCUMENT_FRAGMENT_NODE","createDocumentFragment","child","childrenIterator","childCopy","_append","listOfElementsWithClassNames","classNames","root","classes","size","createImpl","_globalObject","element","query","isQuirksMode","compatMode","treeToArray","filter","classList","className","tokenSet","some","cur","contains","listOfElementsWithQualifiedName","qualifiedName","_parsingMode","lowerQualifiedName","_qualifiedName","listOfElementsWithNamespaceAndLocalName","convertNodesIntoNode","nodes","length","fragment","i","locateNamespacePrefix","parentElement","locateNamespace","prefix","documentElement","_element"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/node.js"],"sourcesContent":["\"use strict\";\r\nconst { appendAttribute } = require(\"./attributes\");\r\nconst NODE_TYPE = require(\"./node-type\");\r\n\r\nconst orderedSetParse = require(\"./helpers/ordered-set\").parse;\r\nconst { createElement } = require(\"./helpers/create-element\");\r\nconst { HTML_NS, XMLNS_NS } = require(\"./helpers/namespaces\");\r\nconst { cloningSteps, domSymbolTree } = require(\"./helpers/internal-constants\");\r\nconst { asciiCaseInsensitiveMatch, asciiLowercase } = require(\"./helpers/strings\");\r\n\r\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\r\n\r\nexports.clone = (node, document, cloneChildren) => {\r\n  if (document === undefined) {\r\n    document = node._ownerDocument;\r\n  }\r\n\r\n  let copy;\r\n  switch (node.nodeType) {\r\n    case NODE_TYPE.DOCUMENT_NODE:\r\n      // Can't use a simple `Document.createImpl` because of circular dependency issues :-/\r\n      copy = node._cloneDocument();\r\n      break;\r\n\r\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n      copy = document.implementation.createDocumentType(node.name, node.publicId, node.systemId);\r\n      break;\r\n\r\n    case NODE_TYPE.ELEMENT_NODE:\r\n      copy = createElement(\r\n        document,\r\n        node._localName,\r\n        node._namespaceURI,\r\n        node._prefix,\r\n        node._isValue,\r\n        false\r\n      );\r\n\r\n      for (const attribute of node._attributeList) {\r\n        appendAttribute(copy, exports.clone(attribute, document));\r\n      }\r\n      break;\r\n\r\n    case NODE_TYPE.ATTRIBUTE_NODE:\r\n      copy = document._createAttribute({\r\n        namespace: node._namespace,\r\n        namespacePrefix: node._namespacePrefix,\r\n        localName: node._localName,\r\n        value: node._value\r\n      });\r\n      break;\r\n\r\n    case NODE_TYPE.TEXT_NODE:\r\n      copy = document.createTextNode(node._data);\r\n      break;\r\n\r\n    case NODE_TYPE.CDATA_SECTION_NODE:\r\n      copy = document.createCDATASection(node._data);\r\n      break;\r\n\r\n    case NODE_TYPE.COMMENT_NODE:\r\n      copy = document.createComment(node._data);\r\n      break;\r\n\r\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\r\n      copy = document.createProcessingInstruction(node.target, node._data);\r\n      break;\r\n\r\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\r\n      copy = document.createDocumentFragment();\r\n      break;\r\n  }\r\n\r\n  if (node[cloningSteps]) {\r\n    node[cloningSteps](copy, node, document, cloneChildren);\r\n  }\r\n\r\n  if (cloneChildren) {\r\n    for (const child of domSymbolTree.childrenIterator(node)) {\r\n      const childCopy = exports.clone(child, document, true);\r\n      copy._append(childCopy);\r\n    }\r\n  }\r\n\r\n  return copy;\r\n};\r\n\r\n// For the following, memoization is not applied here since the memoized results are stored on `this`.\r\n\r\nexports.listOfElementsWithClassNames = (classNames, root) => {\r\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\r\n\r\n  const classes = orderedSetParse(classNames);\r\n\r\n  if (classes.size === 0) {\r\n    return HTMLCollection.createImpl(root._globalObject, [], { element: root, query: () => [] });\r\n  }\r\n\r\n  return HTMLCollection.createImpl(root._globalObject, [], {\r\n    element: root,\r\n    query: () => {\r\n      const isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\r\n\r\n      return domSymbolTree.treeToArray(root, { filter(node) {\r\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\r\n          return false;\r\n        }\r\n\r\n        const { classList } = node;\r\n        if (isQuirksMode) {\r\n          for (const className of classes) {\r\n            if (!classList.tokenSet.some(cur => asciiCaseInsensitiveMatch(cur, className))) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          for (const className of classes) {\r\n            if (!classList.tokenSet.contains(className)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n\r\n        return true;\r\n      } });\r\n    }\r\n  });\r\n};\r\n\r\nexports.listOfElementsWithQualifiedName = (qualifiedName, root) => {\r\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagname\r\n\r\n  if (qualifiedName === \"*\") {\r\n    return HTMLCollection.createImpl(root._globalObject, [], {\r\n      element: root,\r\n      query: () => domSymbolTree.treeToArray(root, {\r\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\r\n      })\r\n    });\r\n  }\r\n\r\n  if (root._ownerDocument._parsingMode === \"html\") {\r\n    const lowerQualifiedName = asciiLowercase(qualifiedName);\r\n\r\n    return HTMLCollection.createImpl(root._globalObject, [], {\r\n      element: root,\r\n      query: () => domSymbolTree.treeToArray(root, {\r\n        filter(node) {\r\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\r\n            return false;\r\n          }\r\n\r\n          if (node._namespaceURI === HTML_NS) {\r\n            return node._qualifiedName === lowerQualifiedName;\r\n          }\r\n\r\n          return node._qualifiedName === qualifiedName;\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  return HTMLCollection.createImpl(root._globalObject, [], {\r\n    element: root,\r\n    query: () => domSymbolTree.treeToArray(root, {\r\n      filter(node) {\r\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\r\n          return false;\r\n        }\r\n\r\n        return node._qualifiedName === qualifiedName;\r\n      }\r\n    })\r\n  });\r\n};\r\n\r\nexports.listOfElementsWithNamespaceAndLocalName = (namespace, localName, root) => {\r\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagnamens\r\n\r\n  if (namespace === \"\") {\r\n    namespace = null;\r\n  }\r\n\r\n  if (namespace === \"*\" && localName === \"*\") {\r\n    return HTMLCollection.createImpl(root._globalObject, [], {\r\n      element: root,\r\n      query: () => domSymbolTree.treeToArray(root, {\r\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\r\n      })\r\n    });\r\n  }\r\n\r\n  if (namespace === \"*\") {\r\n    return HTMLCollection.createImpl(root._globalObject, [], {\r\n      element: root,\r\n      query: () => domSymbolTree.treeToArray(root, {\r\n        filter(node) {\r\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\r\n            return false;\r\n          }\r\n\r\n          return node._localName === localName;\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  if (localName === \"*\") {\r\n    return HTMLCollection.createImpl(root._globalObject, [], {\r\n      element: root,\r\n      query: () => domSymbolTree.treeToArray(root, {\r\n        filter(node) {\r\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\r\n            return false;\r\n          }\r\n\r\n          return node._namespaceURI === namespace;\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  return HTMLCollection.createImpl(root._globalObject, [], {\r\n    element: root,\r\n    query: () => domSymbolTree.treeToArray(root, {\r\n      filter(node) {\r\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\r\n          return false;\r\n        }\r\n\r\n        return node._localName === localName && node._namespaceURI === namespace;\r\n      }\r\n    })\r\n  });\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#converting-nodes-into-a-node\r\n// create a fragment (or just return a node for one item)\r\nexports.convertNodesIntoNode = (document, nodes) => {\r\n  if (nodes.length === 1) { // note: I'd prefer to check instanceof Node rather than string\r\n    return typeof nodes[0] === \"string\" ? document.createTextNode(nodes[0]) : nodes[0];\r\n  }\r\n  const fragment = document.createDocumentFragment();\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    fragment._append(typeof nodes[i] === \"string\" ? document.createTextNode(nodes[i]) : nodes[i]);\r\n  }\r\n  return fragment;\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#locate-a-namespace-prefix\r\nexports.locateNamespacePrefix = (element, namespace) => {\r\n  if (element._namespaceURI === namespace && element._prefix !== null) {\r\n    return element._prefix;\r\n  }\r\n\r\n  for (const attribute of element._attributeList) {\r\n    if (attribute._namespacePrefix === \"xmlns\" && attribute._value === namespace) {\r\n      return attribute._localName;\r\n    }\r\n  }\r\n\r\n  if (element.parentElement !== null) {\r\n    return exports.locateNamespacePrefix(element.parentElement, namespace);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// https://dom.spec.whatwg.org/#locate-a-namespace\r\nexports.locateNamespace = (node, prefix) => {\r\n  switch (node.nodeType) {\r\n    case NODE_TYPE.ELEMENT_NODE: {\r\n      if (node._namespaceURI !== null && node._prefix === prefix) {\r\n        return node._namespaceURI;\r\n      }\r\n\r\n      if (prefix === null) {\r\n        for (const attribute of node._attributeList) {\r\n          if (attribute._namespace === XMLNS_NS &&\r\n              attribute._namespacePrefix === null &&\r\n              attribute._localName === \"xmlns\") {\r\n            return attribute._value !== \"\" ? attribute._value : null;\r\n          }\r\n        }\r\n      } else {\r\n        for (const attribute of node._attributeList) {\r\n          if (attribute._namespace === XMLNS_NS &&\r\n              attribute._namespacePrefix === \"xmlns\" &&\r\n              attribute._localName === prefix) {\r\n            return attribute._value !== \"\" ? attribute._value : null;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (node.parentElement === null) {\r\n        return null;\r\n      }\r\n\r\n      return exports.locateNamespace(node.parentElement, prefix);\r\n    }\r\n\r\n    case NODE_TYPE.DOCUMENT_NODE: {\r\n      if (node.documentElement === null) {\r\n        return null;\r\n      }\r\n\r\n      return exports.locateNamespace(node.documentElement, prefix);\r\n    }\r\n\r\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\r\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE: {\r\n      return null;\r\n    }\r\n\r\n    case NODE_TYPE.ATTRIBUTE_NODE: {\r\n      if (node._element === null) {\r\n        return null;\r\n      }\r\n\r\n      return exports.locateNamespace(node._element, prefix);\r\n    }\r\n\r\n    default: {\r\n      if (node.parentElement === null) {\r\n        return null;\r\n      }\r\n\r\n      return exports.locateNamespace(node.parentElement, prefix);\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}