{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst {\n  mixin\n} = require(\"../../utils\");\nconst {\n  isDisabled,\n  formOwner,\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\nconst {\n  asciiLowercase\n} = require(\"../helpers/strings\");\nclass HTMLButtonElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._customValidityErrorMessage = \"\";\n    this._labels = null;\n    this._hasActivationBehavior = true;\n  }\n  _activationBehavior() {\n    const {\n      form\n    } = this;\n    if (form && !isDisabled(this)) {\n      if (this.type === \"submit\") {\n        form._doSubmit();\n      }\n      if (this.type === \"reset\") {\n        form._doReset();\n      }\n    }\n  }\n  _getValue() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    return valueAttr === null ? \"\" : valueAttr;\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n  get form() {\n    return formOwner(this);\n  }\n  get type() {\n    const typeAttr = asciiLowercase(this.getAttributeNS(null, \"type\") || \"\");\n    switch (typeAttr) {\n      case \"submit\":\n      case \"reset\":\n      case \"button\":\n        return typeAttr;\n      default:\n        return \"submit\";\n    }\n  }\n  set type(v) {\n    v = asciiLowercase(String(v));\n    switch (v) {\n      case \"submit\":\n      case \"reset\":\n      case \"button\":\n        this.setAttributeNS(null, \"type\", v);\n        break;\n      default:\n        this.setAttributeNS(null, \"type\", \"submit\");\n        break;\n    }\n  }\n  _barredFromConstraintValidationSpecialization() {\n    return this.type === \"reset\" || this.type === \"button\";\n  }\n}\nmixin(HTMLButtonElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLButtonElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","DefaultConstraintValidationImpl","mixin","isDisabled","formOwner","getLabelsForLabelable","asciiLowercase","HTMLButtonElementImpl","constructor","globalObject","args","privateData","_customValidityErrorMessage","_labels","_hasActivationBehavior","_activationBehavior","form","type","_doSubmit","_doReset","_getValue","valueAttr","getAttributeNS","labels","typeAttr","v","String","setAttributeNS","_barredFromConstraintValidationSpecialization","prototype","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js"],"sourcesContent":["\"use strict\";\r\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\r\nconst DefaultConstraintValidationImpl =\r\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\r\nconst { mixin } = require(\"../../utils\");\r\nconst { isDisabled, formOwner, getLabelsForLabelable } = require(\"../helpers/form-controls\");\r\nconst { asciiLowercase } = require(\"../helpers/strings\");\r\n\r\nclass HTMLButtonElementImpl extends HTMLElementImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n\r\n    this._customValidityErrorMessage = \"\";\r\n    this._labels = null;\r\n\r\n    this._hasActivationBehavior = true;\r\n  }\r\n\r\n  _activationBehavior() {\r\n    const { form } = this;\r\n    if (form && !isDisabled(this)) {\r\n      if (this.type === \"submit\") {\r\n        form._doSubmit();\r\n      }\r\n      if (this.type === \"reset\") {\r\n        form._doReset();\r\n      }\r\n    }\r\n  }\r\n\r\n  _getValue() {\r\n    const valueAttr = this.getAttributeNS(null, \"value\");\r\n    return valueAttr === null ? \"\" : valueAttr;\r\n  }\r\n\r\n  get labels() {\r\n    return getLabelsForLabelable(this);\r\n  }\r\n\r\n  get form() {\r\n    return formOwner(this);\r\n  }\r\n\r\n  get type() {\r\n    const typeAttr = asciiLowercase(this.getAttributeNS(null, \"type\") || \"\");\r\n    switch (typeAttr) {\r\n      case \"submit\":\r\n      case \"reset\":\r\n      case \"button\":\r\n        return typeAttr;\r\n      default:\r\n        return \"submit\";\r\n    }\r\n  }\r\n\r\n  set type(v) {\r\n    v = asciiLowercase(String(v));\r\n    switch (v) {\r\n      case \"submit\":\r\n      case \"reset\":\r\n      case \"button\":\r\n        this.setAttributeNS(null, \"type\", v);\r\n        break;\r\n      default:\r\n        this.setAttributeNS(null, \"type\", \"submit\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  _barredFromConstraintValidationSpecialization() {\r\n    return this.type === \"reset\" || this.type === \"button\";\r\n  }\r\n}\r\n\r\nmixin(HTMLButtonElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\r\n\r\nmodule.exports = {\r\n  implementation: HTMLButtonElementImpl\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACC,cAAc;AACpE,MAAMC,+BAA+B,GACnCF,OAAO,CAAC,2DAA2D,CAAC,CAACC,cAAc;AACrF,MAAM;EAAEE;AAAM,CAAC,GAAGH,OAAO,CAAC,aAAa,CAAC;AACxC,MAAM;EAAEI,UAAU;EAAEC,SAAS;EAAEC;AAAsB,CAAC,GAAGN,OAAO,CAAC,0BAA0B,CAAC;AAC5F,MAAM;EAAEO;AAAe,CAAC,GAAGP,OAAO,CAAC,oBAAoB,CAAC;AAExD,MAAMQ,qBAAqB,SAAST,eAAe,CAAC;EAClDU,WAAWA,CAACC,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAE;IAC3C,KAAK,CAACF,YAAY,EAAEC,IAAI,EAAEC,WAAW,CAAC;IAEtC,IAAI,CAACC,2BAA2B,GAAG,EAAE;IACrC,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACC,sBAAsB,GAAG,IAAI;EACpC;EAEAC,mBAAmBA,CAAA,EAAG;IACpB,MAAM;MAAEC;IAAK,CAAC,GAAG,IAAI;IACrB,IAAIA,IAAI,IAAI,CAACb,UAAU,CAAC,IAAI,CAAC,EAAE;MAC7B,IAAI,IAAI,CAACc,IAAI,KAAK,QAAQ,EAAE;QAC1BD,IAAI,CAACE,SAAS,EAAE;MAClB;MACA,IAAI,IAAI,CAACD,IAAI,KAAK,OAAO,EAAE;QACzBD,IAAI,CAACG,QAAQ,EAAE;MACjB;IACF;EACF;EAEAC,SAASA,CAAA,EAAG;IACV,MAAMC,SAAS,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC;IACpD,OAAOD,SAAS,KAAK,IAAI,GAAG,EAAE,GAAGA,SAAS;EAC5C;EAEA,IAAIE,MAAMA,CAAA,EAAG;IACX,OAAOlB,qBAAqB,CAAC,IAAI,CAAC;EACpC;EAEA,IAAIW,IAAIA,CAAA,EAAG;IACT,OAAOZ,SAAS,CAAC,IAAI,CAAC;EACxB;EAEA,IAAIa,IAAIA,CAAA,EAAG;IACT,MAAMO,QAAQ,GAAGlB,cAAc,CAAC,IAAI,CAACgB,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;IACxE,QAAQE,QAAQ;MACd,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,QAAQ;QACX,OAAOA,QAAQ;MACjB;QACE,OAAO,QAAQ;IAAC;EAEtB;EAEA,IAAIP,IAAIA,CAACQ,CAAC,EAAE;IACVA,CAAC,GAAGnB,cAAc,CAACoB,MAAM,CAACD,CAAC,CAAC,CAAC;IAC7B,QAAQA,CAAC;MACP,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,QAAQ;QACX,IAAI,CAACE,cAAc,CAAC,IAAI,EAAE,MAAM,EAAEF,CAAC,CAAC;QACpC;MACF;QACE,IAAI,CAACE,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;QAC3C;IAAM;EAEZ;EAEAC,6CAA6CA,CAAA,EAAG;IAC9C,OAAO,IAAI,CAACX,IAAI,KAAK,OAAO,IAAI,IAAI,CAACA,IAAI,KAAK,QAAQ;EACxD;AACF;AAEAf,KAAK,CAACK,qBAAqB,CAACsB,SAAS,EAAE5B,+BAA+B,CAAC4B,SAAS,CAAC;AAEjFC,MAAM,CAACC,OAAO,GAAG;EACf/B,cAAc,EAAEO;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}