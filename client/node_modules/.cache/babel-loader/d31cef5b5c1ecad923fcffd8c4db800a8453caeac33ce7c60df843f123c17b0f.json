{"ast":null,"code":"\"use strict\";\n\nconst Blob = require(\"../generated/Blob\");\nconst {\n  isArrayBuffer\n} = require(\"../generated/utils\");\nfunction convertLineEndingsToNative(s) {\n  // jsdom always pretends to be *nix, for consistency.\n  // See also https://github.com/jsdom/jsdom/issues/2396.\n  return s.replace(/\\r\\n|\\r|\\n/g, \"\\n\");\n}\nexports.implementation = class BlobImpl {\n  constructor(globalObject, args) {\n    const parts = args[0];\n    const properties = args[1];\n    const buffers = [];\n    if (parts !== undefined) {\n      for (const part of parts) {\n        let buffer;\n        if (isArrayBuffer(part)) {\n          buffer = Buffer.from(part);\n        } else if (ArrayBuffer.isView(part)) {\n          buffer = Buffer.from(part.buffer, part.byteOffset, part.byteLength);\n        } else if (Blob.isImpl(part)) {\n          buffer = part._buffer;\n        } else {\n          let s = part;\n          if (properties.endings === \"native\") {\n            s = convertLineEndingsToNative(part);\n          }\n          buffer = Buffer.from(s);\n        }\n        buffers.push(buffer);\n      }\n    }\n    this._buffer = Buffer.concat(buffers);\n    this._globalObject = globalObject;\n    this.type = properties.type;\n    if (/[^\\u0020-\\u007E]/.test(this.type)) {\n      this.type = \"\";\n    } else {\n      this.type = this.type.toLowerCase();\n    }\n  }\n  get size() {\n    return this._buffer.length;\n  }\n  slice(start, end, contentType) {\n    const {\n      size\n    } = this;\n    let relativeStart, relativeEnd, relativeContentType;\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n    if (contentType === undefined) {\n      relativeContentType = \"\";\n    } else {\n      // sanitization (lower case and invalid char check) is done in the\n      // constructor\n      relativeContentType = contentType;\n    }\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const buffer = this._buffer;\n    const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n    const blob = Blob.createImpl(this._globalObject, [[], {\n      type: relativeContentType\n    }], {});\n    blob._buffer = slicedBuffer;\n    return blob;\n  }\n};","map":{"version":3,"names":["Blob","require","isArrayBuffer","convertLineEndingsToNative","s","replace","exports","implementation","BlobImpl","constructor","globalObject","args","parts","properties","buffers","undefined","part","buffer","Buffer","from","ArrayBuffer","isView","byteOffset","byteLength","isImpl","_buffer","endings","push","concat","_globalObject","type","test","toLowerCase","size","length","slice","start","end","contentType","relativeStart","relativeEnd","relativeContentType","Math","max","min","span","slicedBuffer","blob","createImpl"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js"],"sourcesContent":["\"use strict\";\r\nconst Blob = require(\"../generated/Blob\");\r\nconst { isArrayBuffer } = require(\"../generated/utils\");\r\n\r\nfunction convertLineEndingsToNative(s) {\r\n  // jsdom always pretends to be *nix, for consistency.\r\n  // See also https://github.com/jsdom/jsdom/issues/2396.\r\n  return s.replace(/\\r\\n|\\r|\\n/g, \"\\n\");\r\n}\r\n\r\nexports.implementation = class BlobImpl {\r\n  constructor(globalObject, args) {\r\n    const parts = args[0];\r\n    const properties = args[1];\r\n\r\n    const buffers = [];\r\n\r\n    if (parts !== undefined) {\r\n      for (const part of parts) {\r\n        let buffer;\r\n        if (isArrayBuffer(part)) {\r\n          buffer = Buffer.from(part);\r\n        } else if (ArrayBuffer.isView(part)) {\r\n          buffer = Buffer.from(part.buffer, part.byteOffset, part.byteLength);\r\n        } else if (Blob.isImpl(part)) {\r\n          buffer = part._buffer;\r\n        } else {\r\n          let s = part;\r\n          if (properties.endings === \"native\") {\r\n            s = convertLineEndingsToNative(part);\r\n          }\r\n          buffer = Buffer.from(s);\r\n        }\r\n        buffers.push(buffer);\r\n      }\r\n    }\r\n\r\n    this._buffer = Buffer.concat(buffers);\r\n    this._globalObject = globalObject;\r\n\r\n    this.type = properties.type;\r\n    if (/[^\\u0020-\\u007E]/.test(this.type)) {\r\n      this.type = \"\";\r\n    } else {\r\n      this.type = this.type.toLowerCase();\r\n    }\r\n  }\r\n\r\n  get size() {\r\n    return this._buffer.length;\r\n  }\r\n\r\n  slice(start, end, contentType) {\r\n    const { size } = this;\r\n\r\n    let relativeStart, relativeEnd, relativeContentType;\r\n\r\n    if (start === undefined) {\r\n      relativeStart = 0;\r\n    } else if (start < 0) {\r\n      relativeStart = Math.max(size + start, 0);\r\n    } else {\r\n      relativeStart = Math.min(start, size);\r\n    }\r\n    if (end === undefined) {\r\n      relativeEnd = size;\r\n    } else if (end < 0) {\r\n      relativeEnd = Math.max(size + end, 0);\r\n    } else {\r\n      relativeEnd = Math.min(end, size);\r\n    }\r\n\r\n    if (contentType === undefined) {\r\n      relativeContentType = \"\";\r\n    } else {\r\n      // sanitization (lower case and invalid char check) is done in the\r\n      // constructor\r\n      relativeContentType = contentType;\r\n    }\r\n\r\n    const span = Math.max(relativeEnd - relativeStart, 0);\r\n\r\n    const buffer = this._buffer;\r\n    const slicedBuffer = buffer.slice(\r\n      relativeStart,\r\n      relativeStart + span\r\n    );\r\n\r\n    const blob = Blob.createImpl(this._globalObject, [[], { type: relativeContentType }], {});\r\n    blob._buffer = slicedBuffer;\r\n    return blob;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}