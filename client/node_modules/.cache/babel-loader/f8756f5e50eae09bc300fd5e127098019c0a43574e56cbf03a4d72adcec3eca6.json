{"ast":null,"code":"'use strict';\n\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Default serializer options\nconst DEFAULT_OPTIONS = {\n  treeAdapter: defaultTreeAdapter\n};\n\n//Escaping regexes\nconst AMP_REGEX = /&/g;\nconst NBSP_REGEX = /\\u00a0/g;\nconst DOUBLE_QUOTE_REGEX = /\"/g;\nconst LT_REGEX = /</g;\nconst GT_REGEX = />/g;\n\n//Serializer\nclass Serializer {\n  constructor(node, options) {\n    this.options = mergeOptions(DEFAULT_OPTIONS, options);\n    this.treeAdapter = this.options.treeAdapter;\n    this.html = '';\n    this.startNode = node;\n  }\n\n  //API\n  serialize() {\n    this._serializeChildNodes(this.startNode);\n    return this.html;\n  }\n\n  //Internals\n  _serializeChildNodes(parentNode) {\n    const childNodes = this.treeAdapter.getChildNodes(parentNode);\n    if (childNodes) {\n      for (let i = 0, cnLength = childNodes.length; i < cnLength; i++) {\n        const currentNode = childNodes[i];\n        if (this.treeAdapter.isElementNode(currentNode)) {\n          this._serializeElement(currentNode);\n        } else if (this.treeAdapter.isTextNode(currentNode)) {\n          this._serializeTextNode(currentNode);\n        } else if (this.treeAdapter.isCommentNode(currentNode)) {\n          this._serializeCommentNode(currentNode);\n        } else if (this.treeAdapter.isDocumentTypeNode(currentNode)) {\n          this._serializeDocumentTypeNode(currentNode);\n        }\n      }\n    }\n  }\n  _serializeElement(node) {\n    const tn = this.treeAdapter.getTagName(node);\n    const ns = this.treeAdapter.getNamespaceURI(node);\n    this.html += '<' + tn;\n    this._serializeAttributes(node);\n    this.html += '>';\n    if (tn !== $.AREA && tn !== $.BASE && tn !== $.BASEFONT && tn !== $.BGSOUND && tn !== $.BR && tn !== $.COL && tn !== $.EMBED && tn !== $.FRAME && tn !== $.HR && tn !== $.IMG && tn !== $.INPUT && tn !== $.KEYGEN && tn !== $.LINK && tn !== $.META && tn !== $.PARAM && tn !== $.SOURCE && tn !== $.TRACK && tn !== $.WBR) {\n      const childNodesHolder = tn === $.TEMPLATE && ns === NS.HTML ? this.treeAdapter.getTemplateContent(node) : node;\n      this._serializeChildNodes(childNodesHolder);\n      this.html += '</' + tn + '>';\n    }\n  }\n  _serializeAttributes(node) {\n    const attrs = this.treeAdapter.getAttrList(node);\n    for (let i = 0, attrsLength = attrs.length; i < attrsLength; i++) {\n      const attr = attrs[i];\n      const value = Serializer.escapeString(attr.value, true);\n      this.html += ' ';\n      if (!attr.namespace) {\n        this.html += attr.name;\n      } else if (attr.namespace === NS.XML) {\n        this.html += 'xml:' + attr.name;\n      } else if (attr.namespace === NS.XMLNS) {\n        if (attr.name !== 'xmlns') {\n          this.html += 'xmlns:';\n        }\n        this.html += attr.name;\n      } else if (attr.namespace === NS.XLINK) {\n        this.html += 'xlink:' + attr.name;\n      } else {\n        this.html += attr.prefix + ':' + attr.name;\n      }\n      this.html += '=\"' + value + '\"';\n    }\n  }\n  _serializeTextNode(node) {\n    const content = this.treeAdapter.getTextNodeContent(node);\n    const parent = this.treeAdapter.getParentNode(node);\n    let parentTn = void 0;\n    if (parent && this.treeAdapter.isElementNode(parent)) {\n      parentTn = this.treeAdapter.getTagName(parent);\n    }\n    if (parentTn === $.STYLE || parentTn === $.SCRIPT || parentTn === $.XMP || parentTn === $.IFRAME || parentTn === $.NOEMBED || parentTn === $.NOFRAMES || parentTn === $.PLAINTEXT || parentTn === $.NOSCRIPT) {\n      this.html += content;\n    } else {\n      this.html += Serializer.escapeString(content, false);\n    }\n  }\n  _serializeCommentNode(node) {\n    this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';\n  }\n  _serializeDocumentTypeNode(node) {\n    const name = this.treeAdapter.getDocumentTypeNodeName(node);\n    this.html += '<' + doctype.serializeContent(name, null, null) + '>';\n  }\n}\n\n// NOTE: used in tests and by rewriting stream\nSerializer.escapeString = function (str, attrMode) {\n  str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');\n  if (attrMode) {\n    str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');\n  } else {\n    str = str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');\n  }\n  return str;\n};\nmodule.exports = Serializer;","map":{"version":3,"names":["defaultTreeAdapter","require","mergeOptions","doctype","HTML","$","TAG_NAMES","NS","NAMESPACES","DEFAULT_OPTIONS","treeAdapter","AMP_REGEX","NBSP_REGEX","DOUBLE_QUOTE_REGEX","LT_REGEX","GT_REGEX","Serializer","constructor","node","options","html","startNode","serialize","_serializeChildNodes","parentNode","childNodes","getChildNodes","i","cnLength","length","currentNode","isElementNode","_serializeElement","isTextNode","_serializeTextNode","isCommentNode","_serializeCommentNode","isDocumentTypeNode","_serializeDocumentTypeNode","tn","getTagName","ns","getNamespaceURI","_serializeAttributes","AREA","BASE","BASEFONT","BGSOUND","BR","COL","EMBED","FRAME","HR","IMG","INPUT","KEYGEN","LINK","META","PARAM","SOURCE","TRACK","WBR","childNodesHolder","TEMPLATE","getTemplateContent","attrs","getAttrList","attrsLength","attr","value","escapeString","namespace","name","XML","XMLNS","XLINK","prefix","content","getTextNodeContent","parent","getParentNode","parentTn","STYLE","SCRIPT","XMP","IFRAME","NOEMBED","NOFRAMES","PLAINTEXT","NOSCRIPT","getCommentNodeContent","getDocumentTypeNodeName","serializeContent","str","attrMode","replace","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/parse5/lib/serializer/index.js"],"sourcesContent":["'use strict';\r\n\r\nconst defaultTreeAdapter = require('../tree-adapters/default');\r\nconst mergeOptions = require('../utils/merge-options');\r\nconst doctype = require('../common/doctype');\r\nconst HTML = require('../common/html');\r\n\r\n//Aliases\r\nconst $ = HTML.TAG_NAMES;\r\nconst NS = HTML.NAMESPACES;\r\n\r\n//Default serializer options\r\nconst DEFAULT_OPTIONS = {\r\n    treeAdapter: defaultTreeAdapter\r\n};\r\n\r\n//Escaping regexes\r\nconst AMP_REGEX = /&/g;\r\nconst NBSP_REGEX = /\\u00a0/g;\r\nconst DOUBLE_QUOTE_REGEX = /\"/g;\r\nconst LT_REGEX = /</g;\r\nconst GT_REGEX = />/g;\r\n\r\n//Serializer\r\nclass Serializer {\r\n    constructor(node, options) {\r\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\r\n        this.treeAdapter = this.options.treeAdapter;\r\n\r\n        this.html = '';\r\n        this.startNode = node;\r\n    }\r\n\r\n    //API\r\n    serialize() {\r\n        this._serializeChildNodes(this.startNode);\r\n\r\n        return this.html;\r\n    }\r\n\r\n    //Internals\r\n    _serializeChildNodes(parentNode) {\r\n        const childNodes = this.treeAdapter.getChildNodes(parentNode);\r\n\r\n        if (childNodes) {\r\n            for (let i = 0, cnLength = childNodes.length; i < cnLength; i++) {\r\n                const currentNode = childNodes[i];\r\n\r\n                if (this.treeAdapter.isElementNode(currentNode)) {\r\n                    this._serializeElement(currentNode);\r\n                } else if (this.treeAdapter.isTextNode(currentNode)) {\r\n                    this._serializeTextNode(currentNode);\r\n                } else if (this.treeAdapter.isCommentNode(currentNode)) {\r\n                    this._serializeCommentNode(currentNode);\r\n                } else if (this.treeAdapter.isDocumentTypeNode(currentNode)) {\r\n                    this._serializeDocumentTypeNode(currentNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _serializeElement(node) {\r\n        const tn = this.treeAdapter.getTagName(node);\r\n        const ns = this.treeAdapter.getNamespaceURI(node);\r\n\r\n        this.html += '<' + tn;\r\n        this._serializeAttributes(node);\r\n        this.html += '>';\r\n\r\n        if (\r\n            tn !== $.AREA &&\r\n            tn !== $.BASE &&\r\n            tn !== $.BASEFONT &&\r\n            tn !== $.BGSOUND &&\r\n            tn !== $.BR &&\r\n            tn !== $.COL &&\r\n            tn !== $.EMBED &&\r\n            tn !== $.FRAME &&\r\n            tn !== $.HR &&\r\n            tn !== $.IMG &&\r\n            tn !== $.INPUT &&\r\n            tn !== $.KEYGEN &&\r\n            tn !== $.LINK &&\r\n            tn !== $.META &&\r\n            tn !== $.PARAM &&\r\n            tn !== $.SOURCE &&\r\n            tn !== $.TRACK &&\r\n            tn !== $.WBR\r\n        ) {\r\n            const childNodesHolder =\r\n                tn === $.TEMPLATE && ns === NS.HTML ? this.treeAdapter.getTemplateContent(node) : node;\r\n\r\n            this._serializeChildNodes(childNodesHolder);\r\n            this.html += '</' + tn + '>';\r\n        }\r\n    }\r\n\r\n    _serializeAttributes(node) {\r\n        const attrs = this.treeAdapter.getAttrList(node);\r\n\r\n        for (let i = 0, attrsLength = attrs.length; i < attrsLength; i++) {\r\n            const attr = attrs[i];\r\n            const value = Serializer.escapeString(attr.value, true);\r\n\r\n            this.html += ' ';\r\n\r\n            if (!attr.namespace) {\r\n                this.html += attr.name;\r\n            } else if (attr.namespace === NS.XML) {\r\n                this.html += 'xml:' + attr.name;\r\n            } else if (attr.namespace === NS.XMLNS) {\r\n                if (attr.name !== 'xmlns') {\r\n                    this.html += 'xmlns:';\r\n                }\r\n\r\n                this.html += attr.name;\r\n            } else if (attr.namespace === NS.XLINK) {\r\n                this.html += 'xlink:' + attr.name;\r\n            } else {\r\n                this.html += attr.prefix + ':' + attr.name;\r\n            }\r\n\r\n            this.html += '=\"' + value + '\"';\r\n        }\r\n    }\r\n\r\n    _serializeTextNode(node) {\r\n        const content = this.treeAdapter.getTextNodeContent(node);\r\n        const parent = this.treeAdapter.getParentNode(node);\r\n        let parentTn = void 0;\r\n\r\n        if (parent && this.treeAdapter.isElementNode(parent)) {\r\n            parentTn = this.treeAdapter.getTagName(parent);\r\n        }\r\n\r\n        if (\r\n            parentTn === $.STYLE ||\r\n            parentTn === $.SCRIPT ||\r\n            parentTn === $.XMP ||\r\n            parentTn === $.IFRAME ||\r\n            parentTn === $.NOEMBED ||\r\n            parentTn === $.NOFRAMES ||\r\n            parentTn === $.PLAINTEXT ||\r\n            parentTn === $.NOSCRIPT\r\n        ) {\r\n            this.html += content;\r\n        } else {\r\n            this.html += Serializer.escapeString(content, false);\r\n        }\r\n    }\r\n\r\n    _serializeCommentNode(node) {\r\n        this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';\r\n    }\r\n\r\n    _serializeDocumentTypeNode(node) {\r\n        const name = this.treeAdapter.getDocumentTypeNodeName(node);\r\n\r\n        this.html += '<' + doctype.serializeContent(name, null, null) + '>';\r\n    }\r\n}\r\n\r\n// NOTE: used in tests and by rewriting stream\r\nSerializer.escapeString = function(str, attrMode) {\r\n    str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');\r\n\r\n    if (attrMode) {\r\n        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');\r\n    } else {\r\n        str = str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\nmodule.exports = Serializer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}