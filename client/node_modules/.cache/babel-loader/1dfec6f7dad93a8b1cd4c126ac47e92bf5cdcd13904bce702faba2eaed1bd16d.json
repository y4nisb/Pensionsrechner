{"ast":null,"code":"\"use strict\";\n\nconst whatwgURL = require(\"whatwg-url\");\nconst {\n  parseURLToResultingURLRecord\n} = require(\"../helpers/document-base-url\");\nconst {\n  asciiCaseInsensitiveMatch\n} = require(\"../helpers/strings\");\nconst {\n  navigate\n} = require(\"../window/navigation\");\nexports.implementation = class HTMLHyperlinkElementUtilsImpl {\n  _htmlHyperlinkElementUtilsSetup() {\n    this.url = null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/links.html#cannot-navigate\n  _cannotNavigate() {\n    // TODO: Correctly check if the document is fully active\n    return this._localName !== \"a\" && !this.isConnected;\n  }\n\n  // https://html.spec.whatwg.org/multipage/semantics.html#get-an-element's-target\n  _getAnElementsTarget() {\n    if (this.hasAttributeNS(null, \"target\")) {\n      return this.getAttributeNS(null, \"target\");\n    }\n    const baseEl = this._ownerDocument.querySelector(\"base[target]\");\n    if (baseEl) {\n      return baseEl.getAttributeNS(null, \"target\");\n    }\n    return \"\";\n  }\n\n  // https://html.spec.whatwg.org/multipage/browsers.html#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name\n  _chooseABrowsingContext(name, current) {\n    let chosen = null;\n    if (name === \"\" || asciiCaseInsensitiveMatch(name, \"_self\")) {\n      chosen = current;\n    } else if (asciiCaseInsensitiveMatch(name, \"_parent\")) {\n      chosen = current.parent;\n    } else if (asciiCaseInsensitiveMatch(name, \"_top\")) {\n      chosen = current.top;\n    } else if (!asciiCaseInsensitiveMatch(name, \"_blank\")) {\n      // https://github.com/whatwg/html/issues/1440\n    }\n\n    // TODO: Create new browsing context, handle noopener\n\n    return chosen;\n  }\n\n  // https://html.spec.whatwg.org/multipage/links.html#following-hyperlinks-2\n  _followAHyperlink() {\n    if (this._cannotNavigate()) {\n      return;\n    }\n    const source = this._ownerDocument._defaultView;\n    let targetAttributeValue = \"\";\n    if (this._localName === \"a\" || this._localName === \"area\") {\n      targetAttributeValue = this._getAnElementsTarget();\n    }\n    const noopener = this.relList.contains(\"noreferrer\") || this.relList.contains(\"noopener\");\n    const target = this._chooseABrowsingContext(targetAttributeValue, source, noopener);\n    if (target === null) {\n      return;\n    }\n    const url = parseURLToResultingURLRecord(this.href, this._ownerDocument);\n    if (url === null) {\n      return;\n    }\n\n    // TODO: Handle hyperlink suffix and referrerpolicy\n    setTimeout(() => {\n      navigate(target, url, {});\n    }, 0);\n  }\n  toString() {\n    return this.href;\n  }\n  get href() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      const href = this.getAttributeNS(null, \"href\");\n      return href === null ? \"\" : href;\n    }\n    return whatwgURL.serializeURL(url);\n  }\n  set href(v) {\n    this.setAttributeNS(null, \"href\", v);\n  }\n  get origin() {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return \"\";\n    }\n    return whatwgURL.serializeURLOrigin(this.url);\n  }\n  get protocol() {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return \":\";\n    }\n    return this.url.scheme + \":\";\n  }\n  set protocol(v) {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return;\n    }\n    whatwgURL.basicURLParse(v + \":\", {\n      url: this.url,\n      stateOverride: \"scheme start\"\n    });\n    updateHref(this);\n  }\n  get username() {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return \"\";\n    }\n    return this.url.username;\n  }\n  set username(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n    whatwgURL.setTheUsername(url, v);\n    updateHref(this);\n  }\n  get password() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return \"\";\n    }\n    return url.password;\n  }\n  set password(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n    whatwgURL.setThePassword(url, v);\n    updateHref(this);\n  }\n  get host() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n    if (url.port === null) {\n      return whatwgURL.serializeHost(url.host);\n    }\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n  }\n  set host(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"host\"\n    });\n    updateHref(this);\n  }\n  get hostname() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n    return whatwgURL.serializeHost(url.host);\n  }\n  set hostname(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"hostname\"\n    });\n    updateHref(this);\n  }\n  get port() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.port === null) {\n      return \"\";\n    }\n    return whatwgURL.serializeInteger(url.port);\n  }\n  set port(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n    if (v === \"\") {\n      url.port = null;\n    } else {\n      whatwgURL.basicURLParse(v, {\n        url,\n        stateOverride: \"port\"\n      });\n    }\n    updateHref(this);\n  }\n  get pathname() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return \"\";\n    }\n    if (url.cannotBeABaseURL) {\n      return url.path[0];\n    }\n    return \"/\" + url.path.join(\"/\");\n  }\n  set pathname(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n    url.path = [];\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"path start\"\n    });\n    updateHref(this);\n  }\n  get search() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.query === null || url.query === \"\") {\n      return \"\";\n    }\n    return \"?\" + url.query;\n  }\n  set search(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return;\n    }\n    if (v === \"\") {\n      url.query = null;\n    } else {\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"query\",\n        encodingOverride: this._ownerDocument.charset\n      });\n    }\n    updateHref(this);\n  }\n  get hash() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.fragment === null || url.fragment === \"\") {\n      return \"\";\n    }\n    return \"#\" + url.fragment;\n  }\n  set hash(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return;\n    }\n    if (v === \"\") {\n      url.fragment = null;\n    } else {\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      url.fragment = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"fragment\"\n      });\n    }\n    updateHref(this);\n  }\n};\nfunction reinitializeURL(hheu) {\n  if (hheu.url !== null && hheu.url.scheme === \"blob\" && hheu.url.cannotBeABaseURL) {\n    return;\n  }\n  setTheURL(hheu);\n}\nfunction setTheURL(hheu) {\n  const href = hheu.getAttributeNS(null, \"href\");\n  if (href === null) {\n    hheu.url = null;\n    return;\n  }\n  const parsed = parseURLToResultingURLRecord(href, hheu._ownerDocument);\n  hheu.url = parsed === null ? null : parsed;\n}\nfunction updateHref(hheu) {\n  hheu.setAttributeNS(null, \"href\", whatwgURL.serializeURL(hheu.url));\n}","map":{"version":3,"names":["whatwgURL","require","parseURLToResultingURLRecord","asciiCaseInsensitiveMatch","navigate","exports","implementation","HTMLHyperlinkElementUtilsImpl","_htmlHyperlinkElementUtilsSetup","url","_cannotNavigate","_localName","isConnected","_getAnElementsTarget","hasAttributeNS","getAttributeNS","baseEl","_ownerDocument","querySelector","_chooseABrowsingContext","name","current","chosen","parent","top","_followAHyperlink","source","_defaultView","targetAttributeValue","noopener","relList","contains","target","href","setTimeout","toString","reinitializeURL","serializeURL","v","setAttributeNS","origin","serializeURLOrigin","protocol","scheme","basicURLParse","stateOverride","updateHref","username","host","cannotBeABaseURL","setTheUsername","password","setThePassword","port","serializeHost","serializeInteger","hostname","pathname","path","join","search","query","input","substring","encodingOverride","charset","hash","fragment","hheu","setTheURL","parsed"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHyperlinkElementUtils-impl.js"],"sourcesContent":["\"use strict\";\r\nconst whatwgURL = require(\"whatwg-url\");\r\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\r\nconst { asciiCaseInsensitiveMatch } = require(\"../helpers/strings\");\r\nconst { navigate } = require(\"../window/navigation\");\r\n\r\nexports.implementation = class HTMLHyperlinkElementUtilsImpl {\r\n  _htmlHyperlinkElementUtilsSetup() {\r\n    this.url = null;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/links.html#cannot-navigate\r\n  _cannotNavigate() {\r\n    // TODO: Correctly check if the document is fully active\r\n    return this._localName !== \"a\" && !this.isConnected;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/semantics.html#get-an-element's-target\r\n  _getAnElementsTarget() {\r\n    if (this.hasAttributeNS(null, \"target\")) {\r\n      return this.getAttributeNS(null, \"target\");\r\n    }\r\n\r\n    const baseEl = this._ownerDocument.querySelector(\"base[target]\");\r\n\r\n    if (baseEl) {\r\n      return baseEl.getAttributeNS(null, \"target\");\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/browsers.html#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name\r\n  _chooseABrowsingContext(name, current) {\r\n    let chosen = null;\r\n\r\n    if (name === \"\" || asciiCaseInsensitiveMatch(name, \"_self\")) {\r\n      chosen = current;\r\n    } else if (asciiCaseInsensitiveMatch(name, \"_parent\")) {\r\n      chosen = current.parent;\r\n    } else if (asciiCaseInsensitiveMatch(name, \"_top\")) {\r\n      chosen = current.top;\r\n    } else if (!asciiCaseInsensitiveMatch(name, \"_blank\")) {\r\n      // https://github.com/whatwg/html/issues/1440\r\n    }\r\n\r\n    // TODO: Create new browsing context, handle noopener\r\n\r\n    return chosen;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/multipage/links.html#following-hyperlinks-2\r\n  _followAHyperlink() {\r\n    if (this._cannotNavigate()) {\r\n      return;\r\n    }\r\n\r\n    const source = this._ownerDocument._defaultView;\r\n    let targetAttributeValue = \"\";\r\n\r\n    if (this._localName === \"a\" || this._localName === \"area\") {\r\n      targetAttributeValue = this._getAnElementsTarget();\r\n    }\r\n\r\n    const noopener = this.relList.contains(\"noreferrer\") || this.relList.contains(\"noopener\");\r\n\r\n    const target = this._chooseABrowsingContext(targetAttributeValue, source, noopener);\r\n\r\n    if (target === null) {\r\n      return;\r\n    }\r\n\r\n    const url = parseURLToResultingURLRecord(this.href, this._ownerDocument);\r\n\r\n    if (url === null) {\r\n      return;\r\n    }\r\n\r\n    // TODO: Handle hyperlink suffix and referrerpolicy\r\n    setTimeout(() => {\r\n      navigate(target, url, {});\r\n    }, 0);\r\n  }\r\n\r\n  toString() {\r\n    return this.href;\r\n  }\r\n\r\n  get href() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null) {\r\n      const href = this.getAttributeNS(null, \"href\");\r\n      return href === null ? \"\" : href;\r\n    }\r\n\r\n    return whatwgURL.serializeURL(url);\r\n  }\r\n\r\n  set href(v) {\r\n    this.setAttributeNS(null, \"href\", v);\r\n  }\r\n\r\n  get origin() {\r\n    reinitializeURL(this);\r\n\r\n    if (this.url === null) {\r\n      return \"\";\r\n    }\r\n\r\n    return whatwgURL.serializeURLOrigin(this.url);\r\n  }\r\n\r\n  get protocol() {\r\n    reinitializeURL(this);\r\n\r\n    if (this.url === null) {\r\n      return \":\";\r\n    }\r\n\r\n    return this.url.scheme + \":\";\r\n  }\r\n\r\n  set protocol(v) {\r\n    reinitializeURL(this);\r\n\r\n    if (this.url === null) {\r\n      return;\r\n    }\r\n\r\n    whatwgURL.basicURLParse(v + \":\", { url: this.url, stateOverride: \"scheme start\" });\r\n    updateHref(this);\r\n  }\r\n\r\n  get username() {\r\n    reinitializeURL(this);\r\n\r\n    if (this.url === null) {\r\n      return \"\";\r\n    }\r\n\r\n    return this.url.username;\r\n  }\r\n\r\n  set username(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\r\n      return;\r\n    }\r\n\r\n    whatwgURL.setTheUsername(url, v);\r\n    updateHref(this);\r\n  }\r\n\r\n  get password() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null) {\r\n      return \"\";\r\n    }\r\n\r\n    return url.password;\r\n  }\r\n\r\n  set password(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\r\n      return;\r\n    }\r\n\r\n    whatwgURL.setThePassword(url, v);\r\n    updateHref(this);\r\n  }\r\n\r\n  get host() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.host === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (url.port === null) {\r\n      return whatwgURL.serializeHost(url.host);\r\n    }\r\n\r\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\r\n  }\r\n\r\n  set host(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.cannotBeABaseURL) {\r\n      return;\r\n    }\r\n\r\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"host\" });\r\n    updateHref(this);\r\n  }\r\n\r\n  get hostname() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.host === null) {\r\n      return \"\";\r\n    }\r\n\r\n    return whatwgURL.serializeHost(url.host);\r\n  }\r\n\r\n  set hostname(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.cannotBeABaseURL) {\r\n      return;\r\n    }\r\n\r\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"hostname\" });\r\n    updateHref(this);\r\n  }\r\n\r\n  get port() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.port === null) {\r\n      return \"\";\r\n    }\r\n\r\n    return whatwgURL.serializeInteger(url.port);\r\n  }\r\n\r\n  set port(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\r\n      return;\r\n    }\r\n\r\n    if (v === \"\") {\r\n      url.port = null;\r\n    } else {\r\n      whatwgURL.basicURLParse(v, { url, stateOverride: \"port\" });\r\n    }\r\n    updateHref(this);\r\n  }\r\n\r\n  get pathname() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (url.cannotBeABaseURL) {\r\n      return url.path[0];\r\n    }\r\n\r\n    return \"/\" + url.path.join(\"/\");\r\n  }\r\n\r\n  set pathname(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.cannotBeABaseURL) {\r\n      return;\r\n    }\r\n\r\n    url.path = [];\r\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"path start\" });\r\n    updateHref(this);\r\n  }\r\n\r\n  get search() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.query === null || url.query === \"\") {\r\n      return \"\";\r\n    }\r\n\r\n    return \"?\" + url.query;\r\n  }\r\n\r\n  set search(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null) {\r\n      return;\r\n    }\r\n\r\n    if (v === \"\") {\r\n      url.query = null;\r\n    } else {\r\n      const input = v[0] === \"?\" ? v.substring(1) : v;\r\n      url.query = \"\";\r\n      whatwgURL.basicURLParse(input, {\r\n        url,\r\n        stateOverride: \"query\",\r\n        encodingOverride: this._ownerDocument.charset\r\n      });\r\n    }\r\n    updateHref(this);\r\n  }\r\n\r\n  get hash() {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null || url.fragment === null || url.fragment === \"\") {\r\n      return \"\";\r\n    }\r\n\r\n    return \"#\" + url.fragment;\r\n  }\r\n\r\n  set hash(v) {\r\n    reinitializeURL(this);\r\n    const { url } = this;\r\n\r\n    if (url === null) {\r\n      return;\r\n    }\r\n\r\n    if (v === \"\") {\r\n      url.fragment = null;\r\n    } else {\r\n      const input = v[0] === \"#\" ? v.substring(1) : v;\r\n      url.fragment = \"\";\r\n      whatwgURL.basicURLParse(input, { url, stateOverride: \"fragment\" });\r\n    }\r\n    updateHref(this);\r\n  }\r\n};\r\n\r\nfunction reinitializeURL(hheu) {\r\n  if (hheu.url !== null && hheu.url.scheme === \"blob\" && hheu.url.cannotBeABaseURL) {\r\n    return;\r\n  }\r\n\r\n  setTheURL(hheu);\r\n}\r\n\r\nfunction setTheURL(hheu) {\r\n  const href = hheu.getAttributeNS(null, \"href\");\r\n  if (href === null) {\r\n    hheu.url = null;\r\n    return;\r\n  }\r\n\r\n  const parsed = parseURLToResultingURLRecord(href, hheu._ownerDocument);\r\n\r\n  hheu.url = parsed === null ? null : parsed;\r\n}\r\n\r\nfunction updateHref(hheu) {\r\n  hheu.setAttributeNS(null, \"href\", whatwgURL.serializeURL(hheu.url));\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACvC,MAAM;EAAEC;AAA6B,CAAC,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAChF,MAAM;EAAEE;AAA0B,CAAC,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACnE,MAAM;EAAEG;AAAS,CAAC,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAEpDI,OAAO,CAACC,cAAc,GAAG,MAAMC,6BAA6B,CAAC;EAC3DC,+BAA+BA,CAAA,EAAG;IAChC,IAAI,CAACC,GAAG,GAAG,IAAI;EACjB;;EAEA;EACAC,eAAeA,CAAA,EAAG;IAChB;IACA,OAAO,IAAI,CAACC,UAAU,KAAK,GAAG,IAAI,CAAC,IAAI,CAACC,WAAW;EACrD;;EAEA;EACAC,oBAAoBA,CAAA,EAAG;IACrB,IAAI,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;MACvC,OAAO,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC;IAC5C;IAEA,MAAMC,MAAM,GAAG,IAAI,CAACC,cAAc,CAACC,aAAa,CAAC,cAAc,CAAC;IAEhE,IAAIF,MAAM,EAAE;MACV,OAAOA,MAAM,CAACD,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC;IAC9C;IAEA,OAAO,EAAE;EACX;;EAEA;EACAI,uBAAuBA,CAACC,IAAI,EAAEC,OAAO,EAAE;IACrC,IAAIC,MAAM,GAAG,IAAI;IAEjB,IAAIF,IAAI,KAAK,EAAE,IAAIjB,yBAAyB,CAACiB,IAAI,EAAE,OAAO,CAAC,EAAE;MAC3DE,MAAM,GAAGD,OAAO;IAClB,CAAC,MAAM,IAAIlB,yBAAyB,CAACiB,IAAI,EAAE,SAAS,CAAC,EAAE;MACrDE,MAAM,GAAGD,OAAO,CAACE,MAAM;IACzB,CAAC,MAAM,IAAIpB,yBAAyB,CAACiB,IAAI,EAAE,MAAM,CAAC,EAAE;MAClDE,MAAM,GAAGD,OAAO,CAACG,GAAG;IACtB,CAAC,MAAM,IAAI,CAACrB,yBAAyB,CAACiB,IAAI,EAAE,QAAQ,CAAC,EAAE;MACrD;IAAA;;IAGF;;IAEA,OAAOE,MAAM;EACf;;EAEA;EACAG,iBAAiBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACf,eAAe,EAAE,EAAE;MAC1B;IACF;IAEA,MAAMgB,MAAM,GAAG,IAAI,CAACT,cAAc,CAACU,YAAY;IAC/C,IAAIC,oBAAoB,GAAG,EAAE;IAE7B,IAAI,IAAI,CAACjB,UAAU,KAAK,GAAG,IAAI,IAAI,CAACA,UAAU,KAAK,MAAM,EAAE;MACzDiB,oBAAoB,GAAG,IAAI,CAACf,oBAAoB,EAAE;IACpD;IAEA,MAAMgB,QAAQ,GAAG,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,YAAY,CAAC,IAAI,IAAI,CAACD,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC;IAEzF,MAAMC,MAAM,GAAG,IAAI,CAACb,uBAAuB,CAACS,oBAAoB,EAAEF,MAAM,EAAEG,QAAQ,CAAC;IAEnF,IAAIG,MAAM,KAAK,IAAI,EAAE;MACnB;IACF;IAEA,MAAMvB,GAAG,GAAGP,4BAA4B,CAAC,IAAI,CAAC+B,IAAI,EAAE,IAAI,CAAChB,cAAc,CAAC;IAExE,IAAIR,GAAG,KAAK,IAAI,EAAE;MAChB;IACF;;IAEA;IACAyB,UAAU,CAAC,MAAM;MACf9B,QAAQ,CAAC4B,MAAM,EAAEvB,GAAG,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;EACP;EAEA0B,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACF,IAAI;EAClB;EAEA,IAAIA,IAAIA,CAAA,EAAG;IACTG,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB,MAAMwB,IAAI,GAAG,IAAI,CAAClB,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;MAC9C,OAAOkB,IAAI,KAAK,IAAI,GAAG,EAAE,GAAGA,IAAI;IAClC;IAEA,OAAOjC,SAAS,CAACqC,YAAY,CAAC5B,GAAG,CAAC;EACpC;EAEA,IAAIwB,IAAIA,CAACK,CAAC,EAAE;IACV,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAED,CAAC,CAAC;EACtC;EAEA,IAAIE,MAAMA,CAAA,EAAG;IACXJ,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI,IAAI,CAAC3B,GAAG,KAAK,IAAI,EAAE;MACrB,OAAO,EAAE;IACX;IAEA,OAAOT,SAAS,CAACyC,kBAAkB,CAAC,IAAI,CAAChC,GAAG,CAAC;EAC/C;EAEA,IAAIiC,QAAQA,CAAA,EAAG;IACbN,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI,IAAI,CAAC3B,GAAG,KAAK,IAAI,EAAE;MACrB,OAAO,GAAG;IACZ;IAEA,OAAO,IAAI,CAACA,GAAG,CAACkC,MAAM,GAAG,GAAG;EAC9B;EAEA,IAAID,QAAQA,CAACJ,CAAC,EAAE;IACdF,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI,IAAI,CAAC3B,GAAG,KAAK,IAAI,EAAE;MACrB;IACF;IAEAT,SAAS,CAAC4C,aAAa,CAACN,CAAC,GAAG,GAAG,EAAE;MAAE7B,GAAG,EAAE,IAAI,CAACA,GAAG;MAAEoC,aAAa,EAAE;IAAe,CAAC,CAAC;IAClFC,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACbX,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI,IAAI,CAAC3B,GAAG,KAAK,IAAI,EAAE;MACrB,OAAO,EAAE;IACX;IAEA,OAAO,IAAI,CAACA,GAAG,CAACsC,QAAQ;EAC1B;EAEA,IAAIA,QAAQA,CAACT,CAAC,EAAE;IACdF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACuC,IAAI,KAAK,IAAI,IAAIvC,GAAG,CAACuC,IAAI,KAAK,EAAE,IAAIvC,GAAG,CAACwC,gBAAgB,IAAIxC,GAAG,CAACkC,MAAM,KAAK,MAAM,EAAE;MACzG;IACF;IAEA3C,SAAS,CAACkD,cAAc,CAACzC,GAAG,EAAE6B,CAAC,CAAC;IAChCQ,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIK,QAAQA,CAAA,EAAG;IACbf,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB,OAAO,EAAE;IACX;IAEA,OAAOA,GAAG,CAAC0C,QAAQ;EACrB;EAEA,IAAIA,QAAQA,CAACb,CAAC,EAAE;IACdF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACuC,IAAI,KAAK,IAAI,IAAIvC,GAAG,CAACuC,IAAI,KAAK,EAAE,IAAIvC,GAAG,CAACwC,gBAAgB,IAAIxC,GAAG,CAACkC,MAAM,KAAK,MAAM,EAAE;MACzG;IACF;IAEA3C,SAAS,CAACoD,cAAc,CAAC3C,GAAG,EAAE6B,CAAC,CAAC;IAChCQ,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIE,IAAIA,CAAA,EAAG;IACTZ,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACuC,IAAI,KAAK,IAAI,EAAE;MACrC,OAAO,EAAE;IACX;IAEA,IAAIvC,GAAG,CAAC4C,IAAI,KAAK,IAAI,EAAE;MACrB,OAAOrD,SAAS,CAACsD,aAAa,CAAC7C,GAAG,CAACuC,IAAI,CAAC;IAC1C;IAEA,OAAOhD,SAAS,CAACsD,aAAa,CAAC7C,GAAG,CAACuC,IAAI,CAAC,GAAG,GAAG,GAAGhD,SAAS,CAACuD,gBAAgB,CAAC9C,GAAG,CAAC4C,IAAI,CAAC;EACvF;EAEA,IAAIL,IAAIA,CAACV,CAAC,EAAE;IACVF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACwC,gBAAgB,EAAE;MACxC;IACF;IAEAjD,SAAS,CAAC4C,aAAa,CAACN,CAAC,EAAE;MAAE7B,GAAG;MAAEoC,aAAa,EAAE;IAAO,CAAC,CAAC;IAC1DC,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIU,QAAQA,CAAA,EAAG;IACbpB,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACuC,IAAI,KAAK,IAAI,EAAE;MACrC,OAAO,EAAE;IACX;IAEA,OAAOhD,SAAS,CAACsD,aAAa,CAAC7C,GAAG,CAACuC,IAAI,CAAC;EAC1C;EAEA,IAAIQ,QAAQA,CAAClB,CAAC,EAAE;IACdF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACwC,gBAAgB,EAAE;MACxC;IACF;IAEAjD,SAAS,CAAC4C,aAAa,CAACN,CAAC,EAAE;MAAE7B,GAAG;MAAEoC,aAAa,EAAE;IAAW,CAAC,CAAC;IAC9DC,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIO,IAAIA,CAAA,EAAG;IACTjB,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAAC4C,IAAI,KAAK,IAAI,EAAE;MACrC,OAAO,EAAE;IACX;IAEA,OAAOrD,SAAS,CAACuD,gBAAgB,CAAC9C,GAAG,CAAC4C,IAAI,CAAC;EAC7C;EAEA,IAAIA,IAAIA,CAACf,CAAC,EAAE;IACVF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACuC,IAAI,KAAK,IAAI,IAAIvC,GAAG,CAACuC,IAAI,KAAK,EAAE,IAAIvC,GAAG,CAACwC,gBAAgB,IAAIxC,GAAG,CAACkC,MAAM,KAAK,MAAM,EAAE;MACzG;IACF;IAEA,IAAIL,CAAC,KAAK,EAAE,EAAE;MACZ7B,GAAG,CAAC4C,IAAI,GAAG,IAAI;IACjB,CAAC,MAAM;MACLrD,SAAS,CAAC4C,aAAa,CAACN,CAAC,EAAE;QAAE7B,GAAG;QAAEoC,aAAa,EAAE;MAAO,CAAC,CAAC;IAC5D;IACAC,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIW,QAAQA,CAAA,EAAG;IACbrB,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB,OAAO,EAAE;IACX;IAEA,IAAIA,GAAG,CAACwC,gBAAgB,EAAE;MACxB,OAAOxC,GAAG,CAACiD,IAAI,CAAC,CAAC,CAAC;IACpB;IAEA,OAAO,GAAG,GAAGjD,GAAG,CAACiD,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;EACjC;EAEA,IAAIF,QAAQA,CAACnB,CAAC,EAAE;IACdF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACwC,gBAAgB,EAAE;MACxC;IACF;IAEAxC,GAAG,CAACiD,IAAI,GAAG,EAAE;IACb1D,SAAS,CAAC4C,aAAa,CAACN,CAAC,EAAE;MAAE7B,GAAG;MAAEoC,aAAa,EAAE;IAAa,CAAC,CAAC;IAChEC,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIc,MAAMA,CAAA,EAAG;IACXxB,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACoD,KAAK,KAAK,IAAI,IAAIpD,GAAG,CAACoD,KAAK,KAAK,EAAE,EAAE;MAC1D,OAAO,EAAE;IACX;IAEA,OAAO,GAAG,GAAGpD,GAAG,CAACoD,KAAK;EACxB;EAEA,IAAID,MAAMA,CAACtB,CAAC,EAAE;IACZF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB;IACF;IAEA,IAAI6B,CAAC,KAAK,EAAE,EAAE;MACZ7B,GAAG,CAACoD,KAAK,GAAG,IAAI;IAClB,CAAC,MAAM;MACL,MAAMC,KAAK,GAAGxB,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,CAAC,CAACyB,SAAS,CAAC,CAAC,CAAC,GAAGzB,CAAC;MAC/C7B,GAAG,CAACoD,KAAK,GAAG,EAAE;MACd7D,SAAS,CAAC4C,aAAa,CAACkB,KAAK,EAAE;QAC7BrD,GAAG;QACHoC,aAAa,EAAE,OAAO;QACtBmB,gBAAgB,EAAE,IAAI,CAAC/C,cAAc,CAACgD;MACxC,CAAC,CAAC;IACJ;IACAnB,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,IAAIoB,IAAIA,CAAA,EAAG;IACT9B,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAAC0D,QAAQ,KAAK,IAAI,IAAI1D,GAAG,CAAC0D,QAAQ,KAAK,EAAE,EAAE;MAChE,OAAO,EAAE;IACX;IAEA,OAAO,GAAG,GAAG1D,GAAG,CAAC0D,QAAQ;EAC3B;EAEA,IAAID,IAAIA,CAAC5B,CAAC,EAAE;IACVF,eAAe,CAAC,IAAI,CAAC;IACrB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;IAEpB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB;IACF;IAEA,IAAI6B,CAAC,KAAK,EAAE,EAAE;MACZ7B,GAAG,CAAC0D,QAAQ,GAAG,IAAI;IACrB,CAAC,MAAM;MACL,MAAML,KAAK,GAAGxB,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,CAAC,CAACyB,SAAS,CAAC,CAAC,CAAC,GAAGzB,CAAC;MAC/C7B,GAAG,CAAC0D,QAAQ,GAAG,EAAE;MACjBnE,SAAS,CAAC4C,aAAa,CAACkB,KAAK,EAAE;QAAErD,GAAG;QAAEoC,aAAa,EAAE;MAAW,CAAC,CAAC;IACpE;IACAC,UAAU,CAAC,IAAI,CAAC;EAClB;AACF,CAAC;AAED,SAASV,eAAeA,CAACgC,IAAI,EAAE;EAC7B,IAAIA,IAAI,CAAC3D,GAAG,KAAK,IAAI,IAAI2D,IAAI,CAAC3D,GAAG,CAACkC,MAAM,KAAK,MAAM,IAAIyB,IAAI,CAAC3D,GAAG,CAACwC,gBAAgB,EAAE;IAChF;EACF;EAEAoB,SAAS,CAACD,IAAI,CAAC;AACjB;AAEA,SAASC,SAASA,CAACD,IAAI,EAAE;EACvB,MAAMnC,IAAI,GAAGmC,IAAI,CAACrD,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;EAC9C,IAAIkB,IAAI,KAAK,IAAI,EAAE;IACjBmC,IAAI,CAAC3D,GAAG,GAAG,IAAI;IACf;EACF;EAEA,MAAM6D,MAAM,GAAGpE,4BAA4B,CAAC+B,IAAI,EAAEmC,IAAI,CAACnD,cAAc,CAAC;EAEtEmD,IAAI,CAAC3D,GAAG,GAAG6D,MAAM,KAAK,IAAI,GAAG,IAAI,GAAGA,MAAM;AAC5C;AAEA,SAASxB,UAAUA,CAACsB,IAAI,EAAE;EACxBA,IAAI,CAAC7B,cAAc,CAAC,IAAI,EAAE,MAAM,EAAEvC,SAAS,CAACqC,YAAY,CAAC+B,IAAI,CAAC3D,GAAG,CAAC,CAAC;AACrE"},"metadata":{},"sourceType":"script","externalDependencies":[]}