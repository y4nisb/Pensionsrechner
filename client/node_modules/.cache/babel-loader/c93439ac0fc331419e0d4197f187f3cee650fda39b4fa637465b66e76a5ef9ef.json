{"ast":null,"code":"\"use strict\";\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst {\n  SVG_NS\n} = require(\"../helpers/namespaces\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst SVGAnimatedString = require(\"../generated/SVGAnimatedString\");\nconst ElementImpl = require(\"./Element-impl\").implementation;\nconst ElementCSSInlineStyleImpl = require(\"./ElementCSSInlineStyle-impl\").implementation;\nconst GlobalEventHandlersImpl = require(\"./GlobalEventHandlers-impl\").implementation;\nconst HTMLOrSVGElementImpl = require(\"./HTMLOrSVGElement-impl\").implementation;\nclass SVGElementImpl extends ElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._initHTMLOrSVGElement();\n    this._initElementCSSInlineStyle();\n    this._initGlobalEvents();\n  }\n\n  // Keep in sync with HTMLElement. https://github.com/jsdom/jsdom/issues/2599\n  _attrModified(name, value, oldValue) {\n    if (name === \"style\" && value !== oldValue && !this._settingCssText) {\n      this._settingCssText = true;\n      this._style.cssText = value;\n      this._settingCssText = false;\n    } else if (name.startsWith(\"on\")) {\n      this._globalEventChanged(name.substring(2));\n    }\n    super._attrModified(name, value, oldValue);\n  }\n  get className() {\n    return SVGAnimatedString.createImpl(this._globalObject, [], {\n      element: this,\n      attribute: \"class\"\n    });\n  }\n  get ownerSVGElement() {\n    let e = domSymbolTree.parent(this);\n    while (e && e.namespaceURI === SVG_NS) {\n      if (e.localName === \"svg\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n  get viewportElement() {\n    // TODO: <symbol>/<use> may make this different from ownerSVGElement.\n    return this.ownerSVGElement;\n  }\n}\nSVGElementImpl.attributeRegistry = new Map();\nmixin(SVGElementImpl.prototype, ElementCSSInlineStyleImpl.prototype);\nmixin(SVGElementImpl.prototype, GlobalEventHandlersImpl.prototype);\nmixin(SVGElementImpl.prototype, HTMLOrSVGElementImpl.prototype);\nexports.implementation = SVGElementImpl;","map":{"version":3,"names":["domSymbolTree","require","SVG_NS","mixin","SVGAnimatedString","ElementImpl","implementation","ElementCSSInlineStyleImpl","GlobalEventHandlersImpl","HTMLOrSVGElementImpl","SVGElementImpl","constructor","globalObject","args","privateData","_initHTMLOrSVGElement","_initElementCSSInlineStyle","_initGlobalEvents","_attrModified","name","value","oldValue","_settingCssText","_style","cssText","startsWith","_globalEventChanged","substring","className","createImpl","_globalObject","element","attribute","ownerSVGElement","e","parent","namespaceURI","localName","viewportElement","attributeRegistry","Map","prototype","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/SVGElement-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\r\nconst { SVG_NS } = require(\"../helpers/namespaces\");\r\nconst { mixin } = require(\"../../utils\");\r\nconst SVGAnimatedString = require(\"../generated/SVGAnimatedString\");\r\nconst ElementImpl = require(\"./Element-impl\").implementation;\r\nconst ElementCSSInlineStyleImpl = require(\"./ElementCSSInlineStyle-impl\").implementation;\r\nconst GlobalEventHandlersImpl = require(\"./GlobalEventHandlers-impl\").implementation;\r\nconst HTMLOrSVGElementImpl = require(\"./HTMLOrSVGElement-impl\").implementation;\r\n\r\nclass SVGElementImpl extends ElementImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n    this._initHTMLOrSVGElement();\r\n    this._initElementCSSInlineStyle();\r\n    this._initGlobalEvents();\r\n  }\r\n\r\n  // Keep in sync with HTMLElement. https://github.com/jsdom/jsdom/issues/2599\r\n  _attrModified(name, value, oldValue) {\r\n    if (name === \"style\" && value !== oldValue && !this._settingCssText) {\r\n      this._settingCssText = true;\r\n      this._style.cssText = value;\r\n      this._settingCssText = false;\r\n    } else if (name.startsWith(\"on\")) {\r\n      this._globalEventChanged(name.substring(2));\r\n    }\r\n\r\n    super._attrModified(name, value, oldValue);\r\n  }\r\n\r\n  get className() {\r\n    return SVGAnimatedString.createImpl(this._globalObject, [], {\r\n      element: this,\r\n      attribute: \"class\"\r\n    });\r\n  }\r\n\r\n  get ownerSVGElement() {\r\n    let e = domSymbolTree.parent(this);\r\n    while (e && e.namespaceURI === SVG_NS) {\r\n      if (e.localName === \"svg\") {\r\n        return e;\r\n      }\r\n      e = domSymbolTree.parent(e);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  get viewportElement() {\r\n    // TODO: <symbol>/<use> may make this different from ownerSVGElement.\r\n    return this.ownerSVGElement;\r\n  }\r\n}\r\n\r\nSVGElementImpl.attributeRegistry = new Map();\r\n\r\nmixin(SVGElementImpl.prototype, ElementCSSInlineStyleImpl.prototype);\r\nmixin(SVGElementImpl.prototype, GlobalEventHandlersImpl.prototype);\r\nmixin(SVGElementImpl.prototype, HTMLOrSVGElementImpl.prototype);\r\n\r\nexports.implementation = SVGElementImpl;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAClE,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACnD,MAAM;EAAEE;AAAM,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACnE,MAAMI,WAAW,GAAGJ,OAAO,CAAC,gBAAgB,CAAC,CAACK,cAAc;AAC5D,MAAMC,yBAAyB,GAAGN,OAAO,CAAC,8BAA8B,CAAC,CAACK,cAAc;AACxF,MAAME,uBAAuB,GAAGP,OAAO,CAAC,4BAA4B,CAAC,CAACK,cAAc;AACpF,MAAMG,oBAAoB,GAAGR,OAAO,CAAC,yBAAyB,CAAC,CAACK,cAAc;AAE9E,MAAMI,cAAc,SAASL,WAAW,CAAC;EACvCM,WAAWA,CAACC,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAE;IAC3C,KAAK,CAACF,YAAY,EAAEC,IAAI,EAAEC,WAAW,CAAC;IACtC,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI,CAACC,0BAA0B,EAAE;IACjC,IAAI,CAACC,iBAAiB,EAAE;EAC1B;;EAEA;EACAC,aAAaA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACnC,IAAIF,IAAI,KAAK,OAAO,IAAIC,KAAK,KAAKC,QAAQ,IAAI,CAAC,IAAI,CAACC,eAAe,EAAE;MACnE,IAAI,CAACA,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACC,MAAM,CAACC,OAAO,GAAGJ,KAAK;MAC3B,IAAI,CAACE,eAAe,GAAG,KAAK;IAC9B,CAAC,MAAM,IAAIH,IAAI,CAACM,UAAU,CAAC,IAAI,CAAC,EAAE;MAChC,IAAI,CAACC,mBAAmB,CAACP,IAAI,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7C;IAEA,KAAK,CAACT,aAAa,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,CAAC;EAC5C;EAEA,IAAIO,SAASA,CAAA,EAAG;IACd,OAAOxB,iBAAiB,CAACyB,UAAU,CAAC,IAAI,CAACC,aAAa,EAAE,EAAE,EAAE;MAC1DC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;EAEA,IAAIC,eAAeA,CAAA,EAAG;IACpB,IAAIC,CAAC,GAAGlC,aAAa,CAACmC,MAAM,CAAC,IAAI,CAAC;IAClC,OAAOD,CAAC,IAAIA,CAAC,CAACE,YAAY,KAAKlC,MAAM,EAAE;MACrC,IAAIgC,CAAC,CAACG,SAAS,KAAK,KAAK,EAAE;QACzB,OAAOH,CAAC;MACV;MACAA,CAAC,GAAGlC,aAAa,CAACmC,MAAM,CAACD,CAAC,CAAC;IAC7B;IAEA,OAAO,IAAI;EACb;EAEA,IAAII,eAAeA,CAAA,EAAG;IACpB;IACA,OAAO,IAAI,CAACL,eAAe;EAC7B;AACF;AAEAvB,cAAc,CAAC6B,iBAAiB,GAAG,IAAIC,GAAG,EAAE;AAE5CrC,KAAK,CAACO,cAAc,CAAC+B,SAAS,EAAElC,yBAAyB,CAACkC,SAAS,CAAC;AACpEtC,KAAK,CAACO,cAAc,CAAC+B,SAAS,EAAEjC,uBAAuB,CAACiC,SAAS,CAAC;AAClEtC,KAAK,CAACO,cAAc,CAAC+B,SAAS,EAAEhC,oBAAoB,CAACgC,SAAS,CAAC;AAE/DC,OAAO,CAACpC,cAAc,GAAGI,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}