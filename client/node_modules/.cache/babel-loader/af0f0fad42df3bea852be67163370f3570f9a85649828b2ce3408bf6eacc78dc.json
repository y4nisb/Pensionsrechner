{"ast":null,"code":"\"use strict\";\n\nconst parse5 = require(\"parse5\");\nconst {\n  createElement\n} = require(\"../../living/helpers/create-element\");\nconst {\n  HTML_NS\n} = require(\"../../living/helpers/namespaces\");\nconst DocumentType = require(\"../../living/generated/DocumentType\");\nconst DocumentFragment = require(\"../../living/generated/DocumentFragment\");\nconst Text = require(\"../../living/generated/Text\");\nconst Comment = require(\"../../living/generated/Comment\");\nconst attributes = require(\"../../living/attributes\");\nconst nodeTypes = require(\"../../living/node-type\");\nconst serializationAdapter = require(\"../../living/domparsing/parse5-adapter-serialization\");\nconst {\n  customElementReactionsStack,\n  invokeCEReactions,\n  lookupCEDefinition\n} = require(\"../../living/helpers/custom-elements\");\n\n// Horrible monkey-patch to implement https://github.com/inikulin/parse5/issues/237 and\n// https://github.com/inikulin/parse5/issues/285.\nconst OpenElementStack = require(\"parse5/lib/parser/open-element-stack\");\nconst openElementStackOriginalPush = OpenElementStack.prototype.push;\nOpenElementStack.prototype.push = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  openElementStackOriginalPush.apply(this, args);\n  this.treeAdapter._currentElement = this.current;\n  const after = this.items[this.stackTop];\n  if (after._pushedOnStackOfOpenElements) {\n    after._pushedOnStackOfOpenElements();\n  }\n};\nconst openElementStackOriginalPop = OpenElementStack.prototype.pop;\nOpenElementStack.prototype.pop = function () {\n  const before = this.items[this.stackTop];\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  openElementStackOriginalPop.apply(this, args);\n  this.treeAdapter._currentElement = this.current;\n  if (before._poppedOffStackOfOpenElements) {\n    before._poppedOffStackOfOpenElements();\n  }\n};\nclass JSDOMParse5Adapter {\n  constructor(documentImpl) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this._documentImpl = documentImpl;\n    this._globalObject = documentImpl._globalObject;\n    this._fragment = options.fragment || false;\n\n    // Since the createElement hook doesn't provide the parent element, we keep track of this using _currentElement:\n    // https://github.com/inikulin/parse5/issues/285. See above horrible monkey-patch for how this is maintained.\n    this._currentElement = undefined;\n  }\n  _ownerDocument() {\n    const {\n      _currentElement\n    } = this;\n\n    // The _currentElement is undefined when parsing elements at the root of the document.\n    if (_currentElement) {\n      return _currentElement.localName === \"template\" && _currentElement.namespaceURI === HTML_NS ? _currentElement.content._ownerDocument : _currentElement._ownerDocument;\n    }\n    return this._documentImpl;\n  }\n  createDocument() {\n    // parse5's model assumes that parse(html) will call into here to create the new Document, then return it. However,\n    // jsdom's model assumes we can create a Window (and through that create an empty Document), do some other setup\n    // stuff, and then parse, stuffing nodes into that Document as we go. So to adapt between these two models, we just\n    // return the already-created Document when asked by parse5 to \"create\" a Document.\n    return this._documentImpl;\n  }\n  createDocumentFragment() {\n    const ownerDocument = this._ownerDocument();\n    return DocumentFragment.createImpl(this._globalObject, [], {\n      ownerDocument\n    });\n  }\n\n  // https://html.spec.whatwg.org/#create-an-element-for-the-token\n  createElement(localName, namespace, attrs) {\n    const ownerDocument = this._ownerDocument();\n    const isAttribute = attrs.find(attr => attr.name === \"is\");\n    const isValue = isAttribute ? isAttribute.value : null;\n    const definition = lookupCEDefinition(ownerDocument, namespace, localName);\n    let willExecuteScript = false;\n    if (definition !== null && !this._fragment) {\n      willExecuteScript = true;\n    }\n    if (willExecuteScript) {\n      ownerDocument._throwOnDynamicMarkupInsertionCounter++;\n      customElementReactionsStack.push([]);\n    }\n    const element = createElement(ownerDocument, localName, namespace, null, isValue, willExecuteScript);\n    this.adoptAttributes(element, attrs);\n    if (willExecuteScript) {\n      const queue = customElementReactionsStack.pop();\n      invokeCEReactions(queue);\n      ownerDocument._throwOnDynamicMarkupInsertionCounter--;\n    }\n    if (\"_parserInserted\" in element) {\n      element._parserInserted = true;\n    }\n    return element;\n  }\n  createCommentNode(data) {\n    const ownerDocument = this._ownerDocument();\n    return Comment.createImpl(this._globalObject, [], {\n      data,\n      ownerDocument\n    });\n  }\n  appendChild(parentNode, newNode) {\n    parentNode._append(newNode);\n  }\n  insertBefore(parentNode, newNode, referenceNode) {\n    parentNode._insert(newNode, referenceNode);\n  }\n  setTemplateContent(templateElement, contentFragment) {\n    // This code makes the glue between jsdom and parse5 HTMLTemplateElement parsing:\n    //\n    // * jsdom during the construction of the HTMLTemplateElement (for example when create via\n    //   `document.createElement(\"template\")`), creates a DocumentFragment and set it into _templateContents.\n    // * parse5 when parsing a <template> tag creates an HTMLTemplateElement (`createElement` adapter hook) and also\n    //   create a DocumentFragment (`createDocumentFragment` adapter hook).\n    //\n    // At this point we now have to replace the one created in jsdom with one created by parse5.\n    const {\n      _ownerDocument,\n      _host\n    } = templateElement._templateContents;\n    contentFragment._ownerDocument = _ownerDocument;\n    contentFragment._host = _host;\n    templateElement._templateContents = contentFragment;\n  }\n  setDocumentType(document, name, publicId, systemId) {\n    const ownerDocument = this._ownerDocument();\n    const documentType = DocumentType.createImpl(this._globalObject, [], {\n      name,\n      publicId,\n      systemId,\n      ownerDocument\n    });\n    document._append(documentType);\n  }\n  setDocumentMode(document, mode) {\n    // TODO: the rest of jsdom ignores this\n    document._mode = mode;\n  }\n  detachNode(node) {\n    node.remove();\n  }\n  insertText(parentNode, text) {\n    const {\n      lastChild\n    } = parentNode;\n    if (lastChild && lastChild.nodeType === nodeTypes.TEXT_NODE) {\n      lastChild.data += text;\n    } else {\n      const ownerDocument = this._ownerDocument();\n      const textNode = Text.createImpl(this._globalObject, [], {\n        data: text,\n        ownerDocument\n      });\n      parentNode._append(textNode);\n    }\n  }\n  insertTextBefore(parentNode, text, referenceNode) {\n    const {\n      previousSibling\n    } = referenceNode;\n    if (previousSibling && previousSibling.nodeType === nodeTypes.TEXT_NODE) {\n      previousSibling.data += text;\n    } else {\n      const ownerDocument = this._ownerDocument();\n      const textNode = Text.createImpl(this._globalObject, [], {\n        data: text,\n        ownerDocument\n      });\n      parentNode._append(textNode, referenceNode);\n    }\n  }\n  adoptAttributes(element, attrs) {\n    for (const attr of attrs) {\n      const prefix = attr.prefix === \"\" ? null : attr.prefix;\n      attributes.setAttributeValue(element, attr.name, attr.value, prefix, attr.namespace);\n    }\n  }\n}\n\n// Assign shared adapters with serializer.\nObject.assign(JSDOMParse5Adapter.prototype, serializationAdapter);\nfunction parseFragment(markup, contextElement) {\n  const ownerDocument = contextElement.localName === \"template\" && contextElement.namespaceURI === HTML_NS ? contextElement.content._ownerDocument : contextElement._ownerDocument;\n  const config = {\n    ...ownerDocument._parseOptions,\n    treeAdapter: new JSDOMParse5Adapter(ownerDocument, {\n      fragment: true\n    })\n  };\n  return parse5.parseFragment(contextElement, markup, config);\n}\nfunction parseIntoDocument(markup, ownerDocument) {\n  const config = {\n    ...ownerDocument._parseOptions,\n    treeAdapter: new JSDOMParse5Adapter(ownerDocument)\n  };\n  return parse5.parse(markup, config);\n}\nmodule.exports = {\n  parseFragment,\n  parseIntoDocument\n};","map":{"version":3,"names":["parse5","require","createElement","HTML_NS","DocumentType","DocumentFragment","Text","Comment","attributes","nodeTypes","serializationAdapter","customElementReactionsStack","invokeCEReactions","lookupCEDefinition","OpenElementStack","openElementStackOriginalPush","prototype","push","_len","arguments","length","args","Array","_key","apply","treeAdapter","_currentElement","current","after","items","stackTop","_pushedOnStackOfOpenElements","openElementStackOriginalPop","pop","before","_len2","_key2","_poppedOffStackOfOpenElements","JSDOMParse5Adapter","constructor","documentImpl","options","undefined","_documentImpl","_globalObject","_fragment","fragment","_ownerDocument","localName","namespaceURI","content","createDocument","createDocumentFragment","ownerDocument","createImpl","namespace","attrs","isAttribute","find","attr","name","isValue","value","definition","willExecuteScript","_throwOnDynamicMarkupInsertionCounter","element","adoptAttributes","queue","_parserInserted","createCommentNode","data","appendChild","parentNode","newNode","_append","insertBefore","referenceNode","_insert","setTemplateContent","templateElement","contentFragment","_host","_templateContents","setDocumentType","document","publicId","systemId","documentType","setDocumentMode","mode","_mode","detachNode","node","remove","insertText","text","lastChild","nodeType","TEXT_NODE","textNode","insertTextBefore","previousSibling","prefix","setAttributeValue","Object","assign","parseFragment","markup","contextElement","config","_parseOptions","parseIntoDocument","parse","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/browser/parser/html.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst parse5 = require(\"parse5\");\r\n\r\nconst { createElement } = require(\"../../living/helpers/create-element\");\r\nconst { HTML_NS } = require(\"../../living/helpers/namespaces\");\r\n\r\nconst DocumentType = require(\"../../living/generated/DocumentType\");\r\nconst DocumentFragment = require(\"../../living/generated/DocumentFragment\");\r\nconst Text = require(\"../../living/generated/Text\");\r\nconst Comment = require(\"../../living/generated/Comment\");\r\n\r\nconst attributes = require(\"../../living/attributes\");\r\nconst nodeTypes = require(\"../../living/node-type\");\r\n\r\nconst serializationAdapter = require(\"../../living/domparsing/parse5-adapter-serialization\");\r\nconst {\r\n  customElementReactionsStack, invokeCEReactions, lookupCEDefinition\r\n} = require(\"../../living/helpers/custom-elements\");\r\n\r\n// Horrible monkey-patch to implement https://github.com/inikulin/parse5/issues/237 and\r\n// https://github.com/inikulin/parse5/issues/285.\r\nconst OpenElementStack = require(\"parse5/lib/parser/open-element-stack\");\r\n\r\nconst openElementStackOriginalPush = OpenElementStack.prototype.push;\r\nOpenElementStack.prototype.push = function (...args) {\r\n  openElementStackOriginalPush.apply(this, args);\r\n  this.treeAdapter._currentElement = this.current;\r\n\r\n  const after = this.items[this.stackTop];\r\n  if (after._pushedOnStackOfOpenElements) {\r\n    after._pushedOnStackOfOpenElements();\r\n  }\r\n};\r\n\r\nconst openElementStackOriginalPop = OpenElementStack.prototype.pop;\r\nOpenElementStack.prototype.pop = function (...args) {\r\n  const before = this.items[this.stackTop];\r\n\r\n  openElementStackOriginalPop.apply(this, args);\r\n  this.treeAdapter._currentElement = this.current;\r\n\r\n  if (before._poppedOffStackOfOpenElements) {\r\n    before._poppedOffStackOfOpenElements();\r\n  }\r\n};\r\n\r\nclass JSDOMParse5Adapter {\r\n  constructor(documentImpl, options = {}) {\r\n    this._documentImpl = documentImpl;\r\n    this._globalObject = documentImpl._globalObject;\r\n    this._fragment = options.fragment || false;\r\n\r\n    // Since the createElement hook doesn't provide the parent element, we keep track of this using _currentElement:\r\n    // https://github.com/inikulin/parse5/issues/285. See above horrible monkey-patch for how this is maintained.\r\n    this._currentElement = undefined;\r\n  }\r\n\r\n  _ownerDocument() {\r\n    const { _currentElement } = this;\r\n\r\n    // The _currentElement is undefined when parsing elements at the root of the document.\r\n    if (_currentElement) {\r\n      return _currentElement.localName === \"template\" && _currentElement.namespaceURI === HTML_NS ?\r\n        _currentElement.content._ownerDocument :\r\n        _currentElement._ownerDocument;\r\n    }\r\n\r\n    return this._documentImpl;\r\n  }\r\n\r\n  createDocument() {\r\n    // parse5's model assumes that parse(html) will call into here to create the new Document, then return it. However,\r\n    // jsdom's model assumes we can create a Window (and through that create an empty Document), do some other setup\r\n    // stuff, and then parse, stuffing nodes into that Document as we go. So to adapt between these two models, we just\r\n    // return the already-created Document when asked by parse5 to \"create\" a Document.\r\n    return this._documentImpl;\r\n  }\r\n\r\n  createDocumentFragment() {\r\n    const ownerDocument = this._ownerDocument();\r\n    return DocumentFragment.createImpl(this._globalObject, [], { ownerDocument });\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#create-an-element-for-the-token\r\n  createElement(localName, namespace, attrs) {\r\n    const ownerDocument = this._ownerDocument();\r\n\r\n    const isAttribute = attrs.find(attr => attr.name === \"is\");\r\n    const isValue = isAttribute ? isAttribute.value : null;\r\n\r\n    const definition = lookupCEDefinition(ownerDocument, namespace, localName);\r\n\r\n    let willExecuteScript = false;\r\n    if (definition !== null && !this._fragment) {\r\n      willExecuteScript = true;\r\n    }\r\n\r\n    if (willExecuteScript) {\r\n      ownerDocument._throwOnDynamicMarkupInsertionCounter++;\r\n      customElementReactionsStack.push([]);\r\n    }\r\n\r\n    const element = createElement(ownerDocument, localName, namespace, null, isValue, willExecuteScript);\r\n    this.adoptAttributes(element, attrs);\r\n\r\n    if (willExecuteScript) {\r\n      const queue = customElementReactionsStack.pop();\r\n      invokeCEReactions(queue);\r\n      ownerDocument._throwOnDynamicMarkupInsertionCounter--;\r\n    }\r\n\r\n    if (\"_parserInserted\" in element) {\r\n      element._parserInserted = true;\r\n    }\r\n\r\n    return element;\r\n  }\r\n\r\n  createCommentNode(data) {\r\n    const ownerDocument = this._ownerDocument();\r\n    return Comment.createImpl(this._globalObject, [], { data, ownerDocument });\r\n  }\r\n\r\n  appendChild(parentNode, newNode) {\r\n    parentNode._append(newNode);\r\n  }\r\n\r\n  insertBefore(parentNode, newNode, referenceNode) {\r\n    parentNode._insert(newNode, referenceNode);\r\n  }\r\n\r\n  setTemplateContent(templateElement, contentFragment) {\r\n    // This code makes the glue between jsdom and parse5 HTMLTemplateElement parsing:\r\n    //\r\n    // * jsdom during the construction of the HTMLTemplateElement (for example when create via\r\n    //   `document.createElement(\"template\")`), creates a DocumentFragment and set it into _templateContents.\r\n    // * parse5 when parsing a <template> tag creates an HTMLTemplateElement (`createElement` adapter hook) and also\r\n    //   create a DocumentFragment (`createDocumentFragment` adapter hook).\r\n    //\r\n    // At this point we now have to replace the one created in jsdom with one created by parse5.\r\n    const { _ownerDocument, _host } = templateElement._templateContents;\r\n    contentFragment._ownerDocument = _ownerDocument;\r\n    contentFragment._host = _host;\r\n\r\n    templateElement._templateContents = contentFragment;\r\n  }\r\n\r\n  setDocumentType(document, name, publicId, systemId) {\r\n    const ownerDocument = this._ownerDocument();\r\n    const documentType = DocumentType.createImpl(this._globalObject, [], { name, publicId, systemId, ownerDocument });\r\n\r\n    document._append(documentType);\r\n  }\r\n\r\n  setDocumentMode(document, mode) {\r\n    // TODO: the rest of jsdom ignores this\r\n    document._mode = mode;\r\n  }\r\n\r\n  detachNode(node) {\r\n    node.remove();\r\n  }\r\n\r\n  insertText(parentNode, text) {\r\n    const { lastChild } = parentNode;\r\n    if (lastChild && lastChild.nodeType === nodeTypes.TEXT_NODE) {\r\n      lastChild.data += text;\r\n    } else {\r\n      const ownerDocument = this._ownerDocument();\r\n      const textNode = Text.createImpl(this._globalObject, [], { data: text, ownerDocument });\r\n      parentNode._append(textNode);\r\n    }\r\n  }\r\n\r\n  insertTextBefore(parentNode, text, referenceNode) {\r\n    const { previousSibling } = referenceNode;\r\n    if (previousSibling && previousSibling.nodeType === nodeTypes.TEXT_NODE) {\r\n      previousSibling.data += text;\r\n    } else {\r\n      const ownerDocument = this._ownerDocument();\r\n      const textNode = Text.createImpl(this._globalObject, [], { data: text, ownerDocument });\r\n      parentNode._append(textNode, referenceNode);\r\n    }\r\n  }\r\n\r\n  adoptAttributes(element, attrs) {\r\n    for (const attr of attrs) {\r\n      const prefix = attr.prefix === \"\" ? null : attr.prefix;\r\n      attributes.setAttributeValue(element, attr.name, attr.value, prefix, attr.namespace);\r\n    }\r\n  }\r\n}\r\n\r\n// Assign shared adapters with serializer.\r\nObject.assign(JSDOMParse5Adapter.prototype, serializationAdapter);\r\n\r\nfunction parseFragment(markup, contextElement) {\r\n  const ownerDocument = contextElement.localName === \"template\" && contextElement.namespaceURI === HTML_NS ?\r\n    contextElement.content._ownerDocument :\r\n    contextElement._ownerDocument;\r\n\r\n  const config = {\r\n    ...ownerDocument._parseOptions,\r\n    treeAdapter: new JSDOMParse5Adapter(ownerDocument, { fragment: true })\r\n  };\r\n\r\n  return parse5.parseFragment(contextElement, markup, config);\r\n}\r\n\r\nfunction parseIntoDocument(markup, ownerDocument) {\r\n  const config = {\r\n    ...ownerDocument._parseOptions,\r\n    treeAdapter: new JSDOMParse5Adapter(ownerDocument)\r\n  };\r\n\r\n  return parse5.parse(markup, config);\r\n}\r\n\r\nmodule.exports = {\r\n  parseFragment,\r\n  parseIntoDocument\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}