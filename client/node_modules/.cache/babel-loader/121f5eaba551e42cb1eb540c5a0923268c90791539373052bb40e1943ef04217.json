{"ast":null,"code":"\"use strict\";\n\nconst {\n  SVG_NS\n} = require(\"../namespaces\");\n\n// https://svgwg.org/svg2-draft/render.html#TermNeverRenderedElement\nconst neverRenderedElements = new Set([\"clipPath\", \"defs\", \"desc\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"pattern\", \"radialGradient\", \"script\", \"style\", \"title\", \"symbol\"]);\n\n// https://svgwg.org/svg2-draft/render.html#Rendered-vs-NonRendered\nexports.isRenderedElement = elImpl => {\n  if (neverRenderedElements.has(elImpl._localName)) {\n    return false;\n  }\n\n  // This does not check for elements excluded because of conditional processing attributes or ‘switch’ structures,\n  // because conditional processing is not implemented.\n  // https://svgwg.org/svg2-draft/struct.html#ConditionalProcessing\n\n  // This does not check for computed style of display being none, since that is not yet implemented for HTML\n  // focusability either (and there are no tests yet).\n\n  if (!elImpl.isConnected) {\n    return false;\n  }\n\n  // The spec is unclear about how to deal with non-SVG parents, so we only perform this check for SVG-namespace\n  // parents.\n  if (elImpl.parentElement && elImpl.parentElement._namespaceURI === SVG_NS && !exports.isRenderedElement(elImpl.parentNode)) {\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["SVG_NS","require","neverRenderedElements","Set","exports","isRenderedElement","elImpl","has","_localName","isConnected","parentElement","_namespaceURI","parentNode"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/helpers/svg/render.js"],"sourcesContent":["\"use strict\";\r\nconst { SVG_NS } = require(\"../namespaces\");\r\n\r\n// https://svgwg.org/svg2-draft/render.html#TermNeverRenderedElement\r\nconst neverRenderedElements = new Set([\r\n  \"clipPath\",\r\n  \"defs\",\r\n  \"desc\",\r\n  \"linearGradient\",\r\n  \"marker\",\r\n  \"mask\",\r\n  \"metadata\",\r\n  \"pattern\",\r\n  \"radialGradient\",\r\n  \"script\",\r\n  \"style\",\r\n  \"title\",\r\n  \"symbol\"\r\n]);\r\n\r\n// https://svgwg.org/svg2-draft/render.html#Rendered-vs-NonRendered\r\nexports.isRenderedElement = elImpl => {\r\n  if (neverRenderedElements.has(elImpl._localName)) {\r\n    return false;\r\n  }\r\n\r\n  // This does not check for elements excluded because of conditional processing attributes or ‘switch’ structures,\r\n  // because conditional processing is not implemented.\r\n  // https://svgwg.org/svg2-draft/struct.html#ConditionalProcessing\r\n\r\n  // This does not check for computed style of display being none, since that is not yet implemented for HTML\r\n  // focusability either (and there are no tests yet).\r\n\r\n  if (!elImpl.isConnected) {\r\n    return false;\r\n  }\r\n\r\n  // The spec is unclear about how to deal with non-SVG parents, so we only perform this check for SVG-namespace\r\n  // parents.\r\n  if (elImpl.parentElement && elImpl.parentElement._namespaceURI === SVG_NS &&\r\n                              !exports.isRenderedElement(elImpl.parentNode)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE3C;AACA,MAAMC,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CACpC,UAAU,EACV,MAAM,EACN,MAAM,EACN,gBAAgB,EAChB,QAAQ,EACR,MAAM,EACN,UAAU,EACV,SAAS,EACT,gBAAgB,EAChB,QAAQ,EACR,OAAO,EACP,OAAO,EACP,QAAQ,CACT,CAAC;;AAEF;AACAC,OAAO,CAACC,iBAAiB,GAAGC,MAAM,IAAI;EACpC,IAAIJ,qBAAqB,CAACK,GAAG,CAACD,MAAM,CAACE,UAAU,CAAC,EAAE;IAChD,OAAO,KAAK;EACd;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA,IAAI,CAACF,MAAM,CAACG,WAAW,EAAE;IACvB,OAAO,KAAK;EACd;;EAEA;EACA;EACA,IAAIH,MAAM,CAACI,aAAa,IAAIJ,MAAM,CAACI,aAAa,CAACC,aAAa,KAAKX,MAAM,IAC7C,CAACI,OAAO,CAACC,iBAAiB,CAACC,MAAM,CAACM,UAAU,CAAC,EAAE;IACzE,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}