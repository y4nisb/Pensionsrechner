{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst HTMLElement = require(\"../generated/HTMLElement\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst {\n  nodeRoot\n} = require(\"../helpers/node\");\nconst {\n  assignSlotableForTree,\n  findFlattenedSlotables\n} = require(\"../helpers/shadow-dom\");\nclass HTMLSlotElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._assignedNodes = [];\n  }\n\n  // https://dom.spec.whatwg.org/#slot-name\n  get name() {\n    return this.getAttributeNS(null, \"name\") || \"\";\n  }\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    // https://dom.spec.whatwg.org/#slot-name\n    if (name === \"name\") {\n      if (value === oldValue) {\n        return;\n      }\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n      assignSlotableForTree(nodeRoot(this));\n    }\n  }\n\n  // https://html.spec.whatwg.org/#dom-slot-assignednodes\n  assignedNodes(options) {\n    if (!options || !options.flatten) {\n      return this._assignedNodes.map(idlUtils.wrapperForImpl);\n    }\n    return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);\n  }\n\n  // https://html.spec.whatwg.org/#dom-slot-assignedelements\n  assignedElements(options) {\n    return this.assignedNodes(options).filter(HTMLElement.is);\n  }\n}\nmodule.exports = {\n  implementation: HTMLSlotElementImpl\n};","map":{"version":3,"names":["idlUtils","require","HTMLElement","HTMLElementImpl","implementation","nodeRoot","assignSlotableForTree","findFlattenedSlotables","HTMLSlotElementImpl","constructor","globalObject","args","privateData","_assignedNodes","name","getAttributeNS","_attrModified","value","oldValue","assignedNodes","options","flatten","map","wrapperForImpl","assignedElements","filter","is","module","exports"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSlotElement-impl.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst idlUtils = require(\"../generated/utils\");\r\nconst HTMLElement = require(\"../generated/HTMLElement\");\r\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\r\n\r\nconst { nodeRoot } = require(\"../helpers/node\");\r\nconst { assignSlotableForTree, findFlattenedSlotables } = require(\"../helpers/shadow-dom\");\r\n\r\nclass HTMLSlotElementImpl extends HTMLElementImpl {\r\n  constructor(globalObject, args, privateData) {\r\n    super(globalObject, args, privateData);\r\n    this._assignedNodes = [];\r\n  }\r\n\r\n  // https://dom.spec.whatwg.org/#slot-name\r\n  get name() {\r\n    return this.getAttributeNS(null, \"name\") || \"\";\r\n  }\r\n\r\n  _attrModified(name, value, oldValue) {\r\n    super._attrModified(name, value, oldValue);\r\n\r\n    // https://dom.spec.whatwg.org/#slot-name\r\n    if (name === \"name\") {\r\n      if (value === oldValue) {\r\n        return;\r\n      }\r\n\r\n      if (value === null && oldValue === \"\") {\r\n        return;\r\n      }\r\n\r\n      if (value === \"\" && oldValue === null) {\r\n        return;\r\n      }\r\n\r\n      assignSlotableForTree(nodeRoot(this));\r\n    }\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-slot-assignednodes\r\n  assignedNodes(options) {\r\n    if (!options || !options.flatten) {\r\n      return this._assignedNodes.map(idlUtils.wrapperForImpl);\r\n    }\r\n\r\n    return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-slot-assignedelements\r\n  assignedElements(options) {\r\n    return this.assignedNodes(options).filter(HTMLElement.is);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: HTMLSlotElementImpl\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMC,WAAW,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACvD,MAAME,eAAe,GAAGF,OAAO,CAAC,oBAAoB,CAAC,CAACG,cAAc;AAEpE,MAAM;EAAEC;AAAS,CAAC,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAC/C,MAAM;EAAEK,qBAAqB;EAAEC;AAAuB,CAAC,GAAGN,OAAO,CAAC,uBAAuB,CAAC;AAE1F,MAAMO,mBAAmB,SAASL,eAAe,CAAC;EAChDM,WAAWA,CAACC,YAAY,EAAEC,IAAI,EAAEC,WAAW,EAAE;IAC3C,KAAK,CAACF,YAAY,EAAEC,IAAI,EAAEC,WAAW,CAAC;IACtC,IAAI,CAACC,cAAc,GAAG,EAAE;EAC1B;;EAEA;EACA,IAAIC,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE;EAChD;EAEAC,aAAaA,CAACF,IAAI,EAAEG,KAAK,EAAEC,QAAQ,EAAE;IACnC,KAAK,CAACF,aAAa,CAACF,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;;IAE1C;IACA,IAAIJ,IAAI,KAAK,MAAM,EAAE;MACnB,IAAIG,KAAK,KAAKC,QAAQ,EAAE;QACtB;MACF;MAEA,IAAID,KAAK,KAAK,IAAI,IAAIC,QAAQ,KAAK,EAAE,EAAE;QACrC;MACF;MAEA,IAAID,KAAK,KAAK,EAAE,IAAIC,QAAQ,KAAK,IAAI,EAAE;QACrC;MACF;MAEAZ,qBAAqB,CAACD,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvC;EACF;;EAEA;EACAc,aAAaA,CAACC,OAAO,EAAE;IACrB,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACC,OAAO,EAAE;MAChC,OAAO,IAAI,CAACR,cAAc,CAACS,GAAG,CAACtB,QAAQ,CAACuB,cAAc,CAAC;IACzD;IAEA,OAAOhB,sBAAsB,CAAC,IAAI,CAAC,CAACe,GAAG,CAACtB,QAAQ,CAACuB,cAAc,CAAC;EAClE;;EAEA;EACAC,gBAAgBA,CAACJ,OAAO,EAAE;IACxB,OAAO,IAAI,CAACD,aAAa,CAACC,OAAO,CAAC,CAACK,MAAM,CAACvB,WAAW,CAACwB,EAAE,CAAC;EAC3D;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfxB,cAAc,EAAEI;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}