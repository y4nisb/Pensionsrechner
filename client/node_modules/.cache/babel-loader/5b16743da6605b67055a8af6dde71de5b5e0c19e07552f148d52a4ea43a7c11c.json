{"ast":null,"code":"\"use strict\";\n\nconst nodeTypes = require(\"../node-type\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\nexports.getParentNode = node => node.parentNode;\nexports.getAttrList = element => {\n  const attributeList = [...element._attributeList];\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\n    attributeList.unshift({\n      name: \"is\",\n      namespace: null,\n      prefix: null,\n      value: element._isValue\n    });\n  }\n  return attributeList;\n};\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\nexports.getDocumentTypeNodeName = node => node.name;\nexports.getDocumentTypeNodePublicId = node => node.publicId;\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\nexports.getTemplateContent = templateElement => templateElement._templateContents;\nexports.getDocumentMode = document => document._mode;\n\n// Node types\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\n\n// Source code location\nexports.setNodeSourceCodeLocation = (node, location) => {\n  node.sourceCodeLocation = location;\n};\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\nexports.updateNodeSourceCodeLocation = (node, endLocation) => {\n  Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"names":["nodeTypes","require","domSymbolTree","exports","getFirstChild","node","firstChild","getChildNodes","childNodesForSerializing","childrenToArray","getParentNode","parentNode","getAttrList","element","attributeList","_attributeList","_isValue","every","attr","name","unshift","namespace","prefix","value","getTagName","_qualifiedName","getNamespaceURI","namespaceURI","getTextNodeContent","getCommentNodeContent","data","getDocumentTypeNodeName","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","getTemplateContent","templateElement","_templateContents","getDocumentMode","document","_mode","isTextNode","nodeType","TEXT_NODE","isCommentNode","COMMENT_NODE","isDocumentTypeNode","DOCUMENT_TYPE_NODE","isElementNode","ELEMENT_NODE","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","Object","assign"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/domparsing/parse5-adapter-serialization.js"],"sourcesContent":["\"use strict\";\r\nconst nodeTypes = require(\"../node-type\");\r\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\r\n// Serialization only requires a subset of the tree adapter interface.\r\n\r\n// Tree traversing\r\nexports.getFirstChild = node => node.firstChild;\r\n\r\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\r\n\r\nexports.getParentNode = node => node.parentNode;\r\n\r\nexports.getAttrList = element => {\r\n  const attributeList = [...element._attributeList];\r\n\r\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\r\n    attributeList.unshift({\r\n      name: \"is\",\r\n      namespace: null,\r\n      prefix: null,\r\n      value: element._isValue\r\n    });\r\n  }\r\n\r\n  return attributeList;\r\n};\r\n\r\n// Node data\r\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\r\n\r\nexports.getNamespaceURI = element => element.namespaceURI;\r\n\r\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\r\n\r\nexports.getDocumentTypeNodeName = node => node.name;\r\n\r\nexports.getDocumentTypeNodePublicId = node => node.publicId;\r\n\r\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\r\n\r\nexports.getTemplateContent = templateElement => templateElement._templateContents;\r\n\r\nexports.getDocumentMode = document => document._mode;\r\n\r\n// Node types\r\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\r\n\r\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\r\n\r\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\r\n\r\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\r\n\r\n// Source code location\r\nexports.setNodeSourceCodeLocation = (node, location) => {\r\n  node.sourceCodeLocation = location;\r\n};\r\n\r\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\r\n\r\nexports.updateNodeSourceCodeLocation = (node, endLocation) => {\r\n  Object.assign(node.sourceCodeLocation, endLocation);\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;AACzC,MAAM;EAAEC;AAAc,CAAC,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAClE;;AAEA;AACAE,OAAO,CAACC,aAAa,GAAGC,IAAI,IAAIA,IAAI,CAACC,UAAU;AAE/CH,OAAO,CAACI,aAAa,GAAGF,IAAI,IAAIA,IAAI,CAACG,wBAAwB,IAAIN,aAAa,CAACO,eAAe,CAACJ,IAAI,CAAC;AAEpGF,OAAO,CAACO,aAAa,GAAGL,IAAI,IAAIA,IAAI,CAACM,UAAU;AAE/CR,OAAO,CAACS,WAAW,GAAGC,OAAO,IAAI;EAC/B,MAAMC,aAAa,GAAG,CAAC,GAAGD,OAAO,CAACE,cAAc,CAAC;EAEjD,IAAIF,OAAO,CAACG,QAAQ,IAAIF,aAAa,CAACG,KAAK,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,IAAI,CAAC,EAAE;IACvEL,aAAa,CAACM,OAAO,CAAC;MACpBD,IAAI,EAAE,IAAI;MACVE,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAEV,OAAO,CAACG;IACjB,CAAC,CAAC;EACJ;EAEA,OAAOF,aAAa;AACtB,CAAC;;AAED;AACAX,OAAO,CAACqB,UAAU,GAAGX,OAAO,IAAIA,OAAO,CAACY,cAAc,CAAC,CAAC;;AAExDtB,OAAO,CAACuB,eAAe,GAAGb,OAAO,IAAIA,OAAO,CAACc,YAAY;AAEzDxB,OAAO,CAACyB,kBAAkB,GAAGzB,OAAO,CAAC0B,qBAAqB,GAAGxB,IAAI,IAAIA,IAAI,CAACyB,IAAI;AAE9E3B,OAAO,CAAC4B,uBAAuB,GAAG1B,IAAI,IAAIA,IAAI,CAACc,IAAI;AAEnDhB,OAAO,CAAC6B,2BAA2B,GAAG3B,IAAI,IAAIA,IAAI,CAAC4B,QAAQ;AAE3D9B,OAAO,CAAC+B,2BAA2B,GAAG7B,IAAI,IAAIA,IAAI,CAAC8B,QAAQ;AAE3DhC,OAAO,CAACiC,kBAAkB,GAAGC,eAAe,IAAIA,eAAe,CAACC,iBAAiB;AAEjFnC,OAAO,CAACoC,eAAe,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,KAAK;;AAEpD;AACAtC,OAAO,CAACuC,UAAU,GAAGrC,IAAI,IAAIA,IAAI,CAACsC,QAAQ,KAAK3C,SAAS,CAAC4C,SAAS;AAElEzC,OAAO,CAAC0C,aAAa,GAAGxC,IAAI,IAAIA,IAAI,CAACsC,QAAQ,KAAK3C,SAAS,CAAC8C,YAAY;AAExE3C,OAAO,CAAC4C,kBAAkB,GAAG1C,IAAI,IAAIA,IAAI,CAACsC,QAAQ,KAAK3C,SAAS,CAACgD,kBAAkB;AAEnF7C,OAAO,CAAC8C,aAAa,GAAG5C,IAAI,IAAIA,IAAI,CAACsC,QAAQ,KAAK3C,SAAS,CAACkD,YAAY;;AAExE;AACA/C,OAAO,CAACgD,yBAAyB,GAAG,CAAC9C,IAAI,EAAE+C,QAAQ,KAAK;EACtD/C,IAAI,CAACgD,kBAAkB,GAAGD,QAAQ;AACpC,CAAC;AAEDjD,OAAO,CAACmD,yBAAyB,GAAGjD,IAAI,IAAIA,IAAI,CAACgD,kBAAkB;AAEnElD,OAAO,CAACoD,4BAA4B,GAAG,CAAClD,IAAI,EAAEmD,WAAW,KAAK;EAC5DC,MAAM,CAACC,MAAM,CAACrD,IAAI,CAACgD,kBAAkB,EAAEG,WAAW,CAAC;AACrD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}