{"ast":null,"code":"\"use strict\";\n\nconst {\n  isValidFloatingPointNumber,\n  isValidSimpleColor,\n  parseFloatingPointNumber,\n  stripLeadingAndTrailingASCIIWhitespace,\n  stripNewlines,\n  splitOnCommas\n} = require(\"./strings\");\nconst {\n  isValidDateString,\n  isValidMonthString,\n  isValidTimeString,\n  isValidWeekString,\n  parseLocalDateAndTimeString,\n  serializeNormalizedDateAndTime\n} = require(\"./dates-and-times\");\nconst whatwgURL = require(\"whatwg-url\");\nconst NodeList = require(\"../generated/NodeList\");\nconst {\n  domSymbolTree\n} = require(\"./internal-constants\");\nconst {\n  closest,\n  firstChildWithLocalName\n} = require(\"./traversal\");\nconst NODE_TYPE = require(\"../node-type\");\nconst {\n  HTML_NS\n} = require(\"./namespaces\");\n\n// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled\nexports.isDisabled = formControl => {\n  if (formControl.localName === \"button\" || formControl.localName === \"input\" || formControl.localName === \"select\" || formControl.localName === \"textarea\") {\n    if (formControl.hasAttributeNS(null, \"disabled\")) {\n      return true;\n    }\n  }\n  let e = formControl.parentNode;\n  while (e) {\n    if (e.localName === \"fieldset\" && e.hasAttributeNS(null, \"disabled\")) {\n      const firstLegendElementChild = firstChildWithLocalName(e, \"legend\");\n      if (!firstLegendElementChild || !firstLegendElementChild.contains(formControl)) {\n        return true;\n      }\n    }\n    e = e.parentNode;\n  }\n  return false;\n};\n\n// https://html.spec.whatwg.org/multipage/forms.html#category-listed\nconst listedElements = new Set([\"button\", \"fieldset\", \"input\", \"object\", \"output\", \"select\", \"textarea\"]);\nexports.isListed = formControl => listedElements.has(formControl._localName) && formControl.namespaceURI === HTML_NS;\n\n// https://html.spec.whatwg.org/multipage/forms.html#category-submit\nconst submittableElements = new Set([\"button\", \"input\", \"object\", \"select\", \"textarea\"]);\nexports.isSubmittable = formControl => {\n  return submittableElements.has(formControl._localName) && formControl.namespaceURI === HTML_NS;\n};\n\n// https://html.spec.whatwg.org/multipage/forms.html#concept-submit-button\nconst submitButtonInputTypes = new Set([\"submit\", \"image\"]);\nexports.isSubmitButton = formControl => {\n  return (formControl._localName === \"input\" && submitButtonInputTypes.has(formControl.type) || formControl._localName === \"button\" && formControl.type === \"submit\") && formControl.namespaceURI === HTML_NS;\n};\n\n// https://html.spec.whatwg.org/multipage/forms.html#concept-button\nconst buttonInputTypes = new Set([...submitButtonInputTypes, \"reset\", \"button\"]);\nexports.isButton = formControl => {\n  return (formControl._localName === \"input\" && buttonInputTypes.has(formControl.type) || formControl._localName === \"button\") && formControl.namespaceURI === HTML_NS;\n};\n\n// https://html.spec.whatwg.org/multipage/dom.html#interactive-content-2\nexports.isInteractiveContent = node => {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return false;\n  }\n  if (node.namespaceURI !== HTML_NS) {\n    return false;\n  }\n  if (node.hasAttributeNS(null, \"tabindex\")) {\n    return true;\n  }\n  switch (node.localName) {\n    case \"a\":\n      return node.hasAttributeNS(null, \"href\");\n    case \"audio\":\n    case \"video\":\n      return node.hasAttributeNS(null, \"controls\");\n    case \"img\":\n    case \"object\":\n      return node.hasAttributeNS(null, \"usemap\");\n    case \"input\":\n      return node.type !== \"hidden\";\n    case \"button\":\n    case \"details\":\n    case \"embed\":\n    case \"iframe\":\n    case \"label\":\n    case \"select\":\n    case \"textarea\":\n      return true;\n  }\n  return false;\n};\n\n// https://html.spec.whatwg.org/multipage/forms.html#category-label\nexports.isLabelable = node => {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return false;\n  }\n  if (node.namespaceURI !== HTML_NS) {\n    return false;\n  }\n  switch (node.localName) {\n    case \"button\":\n    case \"meter\":\n    case \"output\":\n    case \"progress\":\n    case \"select\":\n    case \"textarea\":\n      return true;\n    case \"input\":\n      return node.type !== \"hidden\";\n  }\n  return false;\n};\nexports.getLabelsForLabelable = labelable => {\n  if (!exports.isLabelable(labelable)) {\n    return null;\n  }\n  if (!labelable._labels) {\n    const root = labelable.getRootNode({});\n    labelable._labels = NodeList.create(root._globalObject, [], {\n      element: root,\n      query: () => {\n        const nodes = [];\n        for (const descendant of domSymbolTree.treeIterator(root)) {\n          if (descendant.control === labelable) {\n            nodes.push(descendant);\n          }\n        }\n        return nodes;\n      }\n    });\n  }\n  return labelable._labels;\n};\n\n// https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\nexports.isValidEmailAddress = function (emailAddress) {\n  let multiple = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const emailAddressRegExp = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9]\" + \"(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}\" + \"[a-zA-Z0-9])?)*$\");\n  // A valid e-mail address list is a set of comma-separated tokens, where each token is itself\n  // a valid e - mail address.To obtain the list of tokens from a valid e - mail address list,\n  // an implementation must split the string on commas.\n  if (multiple) {\n    return splitOnCommas(emailAddress).every(value => emailAddressRegExp.test(value));\n  }\n  return emailAddressRegExp.test(emailAddress);\n};\nexports.isValidAbsoluteURL = url => {\n  return whatwgURL.parseURL(url) !== null;\n};\nexports.sanitizeValueByType = (input, val) => {\n  switch (input.type.toLowerCase()) {\n    case \"password\":\n    case \"search\":\n    case \"tel\":\n    case \"text\":\n      val = stripNewlines(val);\n      break;\n    case \"color\":\n      // https://html.spec.whatwg.org/multipage/forms.html#color-state-(type=color):value-sanitization-algorithm\n      val = isValidSimpleColor(val) ? val.toLowerCase() : \"#000000\";\n      break;\n    case \"date\":\n      // https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date):value-sanitization-algorithm\n      if (!isValidDateString(val)) {\n        val = \"\";\n      }\n      break;\n    case \"datetime-local\":\n      {\n        // https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type=datetime-local):value-sanitization-algorithm\n        const dateAndTime = parseLocalDateAndTimeString(val);\n        val = dateAndTime !== null ? serializeNormalizedDateAndTime(dateAndTime) : \"\";\n        break;\n      }\n    case \"email\":\n      // https://html.spec.whatwg.org/multipage/forms.html#e-mail-state-(type=email):value-sanitization-algorithm\n      // https://html.spec.whatwg.org/multipage/forms.html#e-mail-state-(type=email):value-sanitization-algorithm-2\n      if (input.hasAttributeNS(null, \"multiple\")) {\n        val = val.split(\",\").map(token => stripLeadingAndTrailingASCIIWhitespace(token)).join(\",\");\n      } else {\n        val = stripNewlines(val);\n        val = stripLeadingAndTrailingASCIIWhitespace(val);\n      }\n      break;\n    case \"month\":\n      // https://html.spec.whatwg.org/multipage/input.html#month-state-(type=month):value-sanitization-algorithm\n      if (!isValidMonthString(val)) {\n        val = \"\";\n      }\n      break;\n    case \"number\":\n      // https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):value-sanitization-algorithm\n      // TODO: using parseFloatingPointNumber in addition to isValidFloatingPointNumber to pass number.html WPT.\n      // Possible spec bug.\n      if (!isValidFloatingPointNumber(val) || parseFloatingPointNumber(val) === null) {\n        val = \"\";\n      }\n      break;\n    case \"range\":\n      // https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range):value-sanitization-algorithm\n      // TODO: using parseFloatingPointNumber in addition to isValidFloatingPointNumber to pass number.html WPT.\n      // Possible spec bug.\n      if (!isValidFloatingPointNumber(val) || parseFloatingPointNumber(val) === null) {\n        const minimum = input._minimum;\n        const maximum = input._maximum;\n        const defaultValue = maximum < minimum ? minimum : (minimum + maximum) / 2;\n        val = `${defaultValue}`;\n      } else if (val < input._minimum) {\n        val = `${input._minimum}`;\n      } else if (val > input._maximum) {\n        val = `${input._maximum}`;\n      }\n      break;\n    case \"time\":\n      // https://html.spec.whatwg.org/multipage/input.html#time-state-(type=time):value-sanitization-algorithm\n      if (!isValidTimeString(val)) {\n        val = \"\";\n      }\n      break;\n    case \"url\":\n      // https://html.spec.whatwg.org/multipage/forms.html#url-state-(type=url):value-sanitization-algorithm\n      val = stripNewlines(val);\n      val = stripLeadingAndTrailingASCIIWhitespace(val);\n      break;\n    case \"week\":\n      // https://html.spec.whatwg.org/multipage/input.html#week-state-(type=week):value-sanitization-algorithm\n      if (!isValidWeekString(val)) {\n        val = \"\";\n      }\n  }\n  return val;\n};\n\n// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-owner\n// TODO: The spec describes an imperative process for assigning/resetting an element's form\n// owner based on activities involving form-associated elements. This simpler implementation\n// instead calculates the current form owner only when the property is accessed. This is not\n// sufficient to pass all the web platform tests, but is good enough for most purposes. We\n// should eventually update it to use the correct version, though. See\n// https://github.com/whatwg/html/issues/4050 for some discussion.\n\nexports.formOwner = formControl => {\n  const formAttr = formControl.getAttributeNS(null, \"form\");\n  if (formAttr === \"\") {\n    return null;\n  }\n  if (formAttr === null) {\n    return closest(formControl, \"form\");\n  }\n  const root = formControl.getRootNode({});\n  let firstElementWithId;\n  for (const descendant of domSymbolTree.treeIterator(root)) {\n    if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === formAttr) {\n      firstElementWithId = descendant;\n      break;\n    }\n  }\n  if (firstElementWithId && firstElementWithId.namespaceURI === HTML_NS && firstElementWithId.localName === \"form\") {\n    return firstElementWithId;\n  }\n  return null;\n};","map":{"version":3,"names":["isValidFloatingPointNumber","isValidSimpleColor","parseFloatingPointNumber","stripLeadingAndTrailingASCIIWhitespace","stripNewlines","splitOnCommas","require","isValidDateString","isValidMonthString","isValidTimeString","isValidWeekString","parseLocalDateAndTimeString","serializeNormalizedDateAndTime","whatwgURL","NodeList","domSymbolTree","closest","firstChildWithLocalName","NODE_TYPE","HTML_NS","exports","isDisabled","formControl","localName","hasAttributeNS","e","parentNode","firstLegendElementChild","contains","listedElements","Set","isListed","has","_localName","namespaceURI","submittableElements","isSubmittable","submitButtonInputTypes","isSubmitButton","type","buttonInputTypes","isButton","isInteractiveContent","node","nodeType","ELEMENT_NODE","isLabelable","getLabelsForLabelable","labelable","_labels","root","getRootNode","create","_globalObject","element","query","nodes","descendant","treeIterator","control","push","isValidEmailAddress","emailAddress","multiple","arguments","length","undefined","emailAddressRegExp","RegExp","every","value","test","isValidAbsoluteURL","url","parseURL","sanitizeValueByType","input","val","toLowerCase","dateAndTime","split","map","token","join","minimum","_minimum","maximum","_maximum","defaultValue","formOwner","formAttr","getAttributeNS","firstElementWithId"],"sources":["C:/Users/noodp/Documents/GitHub/Pensionsrechner/client/node_modules/jsdom/lib/jsdom/living/helpers/form-controls.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst {\r\n  isValidFloatingPointNumber,\r\n  isValidSimpleColor,\r\n  parseFloatingPointNumber,\r\n  stripLeadingAndTrailingASCIIWhitespace,\r\n  stripNewlines,\r\n  splitOnCommas\r\n} = require(\"./strings\");\r\nconst {\r\n  isValidDateString,\r\n  isValidMonthString,\r\n  isValidTimeString,\r\n  isValidWeekString,\r\n  parseLocalDateAndTimeString,\r\n  serializeNormalizedDateAndTime\r\n} = require(\"./dates-and-times\");\r\nconst whatwgURL = require(\"whatwg-url\");\r\n\r\nconst NodeList = require(\"../generated/NodeList\");\r\nconst { domSymbolTree } = require(\"./internal-constants\");\r\nconst { closest, firstChildWithLocalName } = require(\"./traversal\");\r\nconst NODE_TYPE = require(\"../node-type\");\r\nconst { HTML_NS } = require(\"./namespaces\");\r\n\r\n// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled\r\nexports.isDisabled = formControl => {\r\n  if (formControl.localName === \"button\" || formControl.localName === \"input\" || formControl.localName === \"select\" ||\r\n      formControl.localName === \"textarea\") {\r\n    if (formControl.hasAttributeNS(null, \"disabled\")) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  let e = formControl.parentNode;\r\n  while (e) {\r\n    if (e.localName === \"fieldset\" && e.hasAttributeNS(null, \"disabled\")) {\r\n      const firstLegendElementChild = firstChildWithLocalName(e, \"legend\");\r\n      if (!firstLegendElementChild || !firstLegendElementChild.contains(formControl)) {\r\n        return true;\r\n      }\r\n    }\r\n    e = e.parentNode;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/forms.html#category-listed\r\nconst listedElements = new Set([\"button\", \"fieldset\", \"input\", \"object\", \"output\", \"select\", \"textarea\"]);\r\nexports.isListed = formControl => listedElements.has(formControl._localName) && formControl.namespaceURI === HTML_NS;\r\n\r\n// https://html.spec.whatwg.org/multipage/forms.html#category-submit\r\nconst submittableElements = new Set([\"button\", \"input\", \"object\", \"select\", \"textarea\"]);\r\nexports.isSubmittable = formControl => {\r\n  return submittableElements.has(formControl._localName) && formControl.namespaceURI === HTML_NS;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/forms.html#concept-submit-button\r\nconst submitButtonInputTypes = new Set([\"submit\", \"image\"]);\r\nexports.isSubmitButton = formControl => {\r\n  return ((formControl._localName === \"input\" && submitButtonInputTypes.has(formControl.type)) ||\r\n          (formControl._localName === \"button\" && formControl.type === \"submit\")) &&\r\n         formControl.namespaceURI === HTML_NS;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/forms.html#concept-button\r\nconst buttonInputTypes = new Set([...submitButtonInputTypes, \"reset\", \"button\"]);\r\nexports.isButton = formControl => {\r\n  return ((formControl._localName === \"input\" && buttonInputTypes.has(formControl.type)) ||\r\n          formControl._localName === \"button\") &&\r\n         formControl.namespaceURI === HTML_NS;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/dom.html#interactive-content-2\r\nexports.isInteractiveContent = node => {\r\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\r\n    return false;\r\n  }\r\n  if (node.namespaceURI !== HTML_NS) {\r\n    return false;\r\n  }\r\n  if (node.hasAttributeNS(null, \"tabindex\")) {\r\n    return true;\r\n  }\r\n  switch (node.localName) {\r\n    case \"a\":\r\n      return node.hasAttributeNS(null, \"href\");\r\n\r\n    case \"audio\":\r\n    case \"video\":\r\n      return node.hasAttributeNS(null, \"controls\");\r\n\r\n    case \"img\":\r\n    case \"object\":\r\n      return node.hasAttributeNS(null, \"usemap\");\r\n\r\n    case \"input\":\r\n      return node.type !== \"hidden\";\r\n\r\n    case \"button\":\r\n    case \"details\":\r\n    case \"embed\":\r\n    case \"iframe\":\r\n    case \"label\":\r\n    case \"select\":\r\n    case \"textarea\":\r\n      return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/forms.html#category-label\r\nexports.isLabelable = node => {\r\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\r\n    return false;\r\n  }\r\n  if (node.namespaceURI !== HTML_NS) {\r\n    return false;\r\n  }\r\n  switch (node.localName) {\r\n    case \"button\":\r\n    case \"meter\":\r\n    case \"output\":\r\n    case \"progress\":\r\n    case \"select\":\r\n    case \"textarea\":\r\n      return true;\r\n\r\n    case \"input\":\r\n      return node.type !== \"hidden\";\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexports.getLabelsForLabelable = labelable => {\r\n  if (!exports.isLabelable(labelable)) {\r\n    return null;\r\n  }\r\n  if (!labelable._labels) {\r\n    const root = labelable.getRootNode({});\r\n    labelable._labels = NodeList.create(root._globalObject, [], {\r\n      element: root,\r\n      query: () => {\r\n        const nodes = [];\r\n        for (const descendant of domSymbolTree.treeIterator(root)) {\r\n          if (descendant.control === labelable) {\r\n            nodes.push(descendant);\r\n          }\r\n        }\r\n        return nodes;\r\n      }\r\n    });\r\n  }\r\n  return labelable._labels;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\r\nexports.isValidEmailAddress = (emailAddress, multiple = false) => {\r\n  const emailAddressRegExp = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9]\" +\r\n    \"(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}\" +\r\n    \"[a-zA-Z0-9])?)*$\");\r\n  // A valid e-mail address list is a set of comma-separated tokens, where each token is itself\r\n  // a valid e - mail address.To obtain the list of tokens from a valid e - mail address list,\r\n  // an implementation must split the string on commas.\r\n  if (multiple) {\r\n    return splitOnCommas(emailAddress).every(value => emailAddressRegExp.test(value));\r\n  }\r\n  return emailAddressRegExp.test(emailAddress);\r\n};\r\n\r\nexports.isValidAbsoluteURL = url => {\r\n  return whatwgURL.parseURL(url) !== null;\r\n};\r\n\r\nexports.sanitizeValueByType = (input, val) => {\r\n  switch (input.type.toLowerCase()) {\r\n    case \"password\":\r\n    case \"search\":\r\n    case \"tel\":\r\n    case \"text\":\r\n      val = stripNewlines(val);\r\n      break;\r\n\r\n    case \"color\":\r\n      // https://html.spec.whatwg.org/multipage/forms.html#color-state-(type=color):value-sanitization-algorithm\r\n      val = isValidSimpleColor(val) ? val.toLowerCase() : \"#000000\";\r\n      break;\r\n\r\n    case \"date\":\r\n      // https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date):value-sanitization-algorithm\r\n      if (!isValidDateString(val)) {\r\n        val = \"\";\r\n      }\r\n      break;\r\n\r\n    case \"datetime-local\": {\r\n      // https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type=datetime-local):value-sanitization-algorithm\r\n      const dateAndTime = parseLocalDateAndTimeString(val);\r\n      val = dateAndTime !== null ? serializeNormalizedDateAndTime(dateAndTime) : \"\";\r\n      break;\r\n    }\r\n\r\n    case \"email\":\r\n      // https://html.spec.whatwg.org/multipage/forms.html#e-mail-state-(type=email):value-sanitization-algorithm\r\n      // https://html.spec.whatwg.org/multipage/forms.html#e-mail-state-(type=email):value-sanitization-algorithm-2\r\n      if (input.hasAttributeNS(null, \"multiple\")) {\r\n        val = val.split(\",\").map(token => stripLeadingAndTrailingASCIIWhitespace(token)).join(\",\");\r\n      } else {\r\n        val = stripNewlines(val);\r\n        val = stripLeadingAndTrailingASCIIWhitespace(val);\r\n      }\r\n      break;\r\n\r\n    case \"month\":\r\n      // https://html.spec.whatwg.org/multipage/input.html#month-state-(type=month):value-sanitization-algorithm\r\n      if (!isValidMonthString(val)) {\r\n        val = \"\";\r\n      }\r\n      break;\r\n\r\n    case \"number\":\r\n      // https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):value-sanitization-algorithm\r\n      // TODO: using parseFloatingPointNumber in addition to isValidFloatingPointNumber to pass number.html WPT.\r\n      // Possible spec bug.\r\n      if (!isValidFloatingPointNumber(val) || parseFloatingPointNumber(val) === null) {\r\n        val = \"\";\r\n      }\r\n      break;\r\n\r\n    case \"range\":\r\n      // https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range):value-sanitization-algorithm\r\n      // TODO: using parseFloatingPointNumber in addition to isValidFloatingPointNumber to pass number.html WPT.\r\n      // Possible spec bug.\r\n      if (!isValidFloatingPointNumber(val) || parseFloatingPointNumber(val) === null) {\r\n        const minimum = input._minimum;\r\n        const maximum = input._maximum;\r\n        const defaultValue = maximum < minimum ? minimum : (minimum + maximum) / 2;\r\n        val = `${defaultValue}`;\r\n      } else if (val < input._minimum) {\r\n        val = `${input._minimum}`;\r\n      } else if (val > input._maximum) {\r\n        val = `${input._maximum}`;\r\n      }\r\n      break;\r\n\r\n    case \"time\":\r\n      // https://html.spec.whatwg.org/multipage/input.html#time-state-(type=time):value-sanitization-algorithm\r\n      if (!isValidTimeString(val)) {\r\n        val = \"\";\r\n      }\r\n      break;\r\n\r\n    case \"url\":\r\n      // https://html.spec.whatwg.org/multipage/forms.html#url-state-(type=url):value-sanitization-algorithm\r\n      val = stripNewlines(val);\r\n      val = stripLeadingAndTrailingASCIIWhitespace(val);\r\n      break;\r\n\r\n    case \"week\":\r\n      // https://html.spec.whatwg.org/multipage/input.html#week-state-(type=week):value-sanitization-algorithm\r\n      if (!isValidWeekString(val)) {\r\n        val = \"\";\r\n      }\r\n  }\r\n\r\n  return val;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-owner\r\n// TODO: The spec describes an imperative process for assigning/resetting an element's form\r\n// owner based on activities involving form-associated elements. This simpler implementation\r\n// instead calculates the current form owner only when the property is accessed. This is not\r\n// sufficient to pass all the web platform tests, but is good enough for most purposes. We\r\n// should eventually update it to use the correct version, though. See\r\n// https://github.com/whatwg/html/issues/4050 for some discussion.\r\n\r\nexports.formOwner = formControl => {\r\n  const formAttr = formControl.getAttributeNS(null, \"form\");\r\n  if (formAttr === \"\") {\r\n    return null;\r\n  }\r\n  if (formAttr === null) {\r\n    return closest(formControl, \"form\");\r\n  }\r\n\r\n  const root = formControl.getRootNode({});\r\n  let firstElementWithId;\r\n  for (const descendant of domSymbolTree.treeIterator(root)) {\r\n    if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE &&\r\n      descendant.getAttributeNS(null, \"id\") === formAttr) {\r\n      firstElementWithId = descendant;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (firstElementWithId &&\r\n    firstElementWithId.namespaceURI === HTML_NS &&\r\n    firstElementWithId.localName === \"form\") {\r\n    return firstElementWithId;\r\n  }\r\n  return null;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}